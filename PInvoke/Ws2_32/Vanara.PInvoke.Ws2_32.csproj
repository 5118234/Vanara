<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <ProjectExtensions>
    <SupportedDlls>ws2_32.dll</SupportedDlls>
  </ProjectExtensions>
  <PropertyGroup>
    <Description>PInvoke API (methods, structures and constants) imported from Windows Ws2_32.dll.</Description>
    <Copyright>Copyright © 2017-2020</Copyright>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <VersionPrefix>3.2.1</VersionPrefix>
    <TargetFrameworks>net20;net35;net40;net45;netstandard2.0;netcoreapp2.0;netcoreapp2.1;netcoreapp3.0;netcoreapp3.1</TargetFrameworks>
    <AssemblyName>Vanara.PInvoke.Ws2_32</AssemblyName>
    <PackageId>$(AssemblyName)</PackageId>
    <RootNamespace>Vanara.PInvoke</RootNamespace>
    <Authors>David Hall</Authors>
    <PackageProjectUrl>https://github.com/dahall/vanara</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>Vanara64x64.png</PackageIcon>
    <RepositoryUrl>https://github.com/dahall/vanara</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>pinvoke vanara Ws2_32 sockets winsock interop</PackageTags>
    <NeutralLanguage>en-US</NeutralLanguage>
    <IncludeSource>true</IncludeSource>
    <IncludeSymbols>true</IncludeSymbols>
    <Company>GitHub Community</Company>
    <Product>Vanara</Product>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <PackageReleaseNotes>Currently implements:

Functions
__WSAFDIsSet, accept, bind, closesocket, connect, freeaddrinfo, FreeAddrInfoEx, FreeAddrInfoW, getaddrinfo, GetAddrInfoEx, GetAddrInfoExCancel, GetAddrInfoExOverlappedResult, GetAddrInfoW, gethostbyaddr, gethostbyname, gethostname, GetHostNameW, getnameinfo, GetNameInfoW, getpeername, getprotobyname, getprotobynumber, getservbyname, getservbyport, getsockname, getsockopt, htonl, htons, inet_addr, inet_ntoa, inet_ntop, inet_ntopA, inet_ntopW, inet_pton, inet_ptonA, inet_ptonW, InetNtopW, InetPtonW, ioctlsocket, listen, ntohl, ntohs, recv, recvfrom, send, sendto, SetAddrInfoEx, setsockopt, shutdown, socket, WEP, WPUCompleteOverlappedRequest, WSAAccept, WSAAddressToString, WSAAdvertiseProvider, WSAAsyncGetHostByAddr, WSAAsyncGetHostByName, WSAAsyncGetProtoByName, WSAAsyncGetProtoByNumber, WSAAsyncGetServByName, WSAAsyncGetServByPort, WSAAsyncSelect, WSACancelAsyncRequest, WSACancelBlockingCall, WSACleanup, WSACloseEvent, WSAConnect, WSAConnectByList, WSAConnectByName, WSACreateEvent, WSADuplicateSocket, WSAEnumNameSpaceProviders, WSAEnumNameSpaceProvidersEx, WSAEnumNetworkEvents, WSAEnumProtocols, WSAEventSelect, WSAGetLastError, WSAGetOverlappedResult, WSAGetQOSByName, WSAGetServiceClassInfo, WSAGetServiceClassNameByClassId, WSAHtonl, WSAHtons, WSAInstallServiceClass, WSAIoctl, WSAIsBlocking, WSAJoinLeaf, WSALookupServiceBegin, WSALookupServiceEnd, WSALookupServiceNext, WSANSPIoctl, WSANtohl, WSANtohs, WSAPoll, WSAProviderCompleteAsyncCall, WSAProviderConfigChange, WSARecv, WSARecvDisconnect, WSARecvFrom, WSARemoveServiceClass, WSAResetEvent, WSASend, WSASendDisconnect, WSASendMsg, WSASendTo, WSASetBlockingHook, WSASetEvent, WSASetLastError, WSASetService, WSASocket, WSAStartup, WSAStringToAddress, WSAUnadvertiseProvider, WSAUnhookBlockingHook, WSAWaitForMultipleEvents, WSCDeinstallProvider, WSCDeinstallProvider32, WSCEnableNSProvider, WSCEnableNSProvider32, WSCEnumNameSpaceProviders32, WSCEnumNameSpaceProvidersEx32, WSCEnumProtocols, WSCEnumProtocols32, WSCGetApplicationCategory, WSCGetProviderInfo, WSCGetProviderInfo32, WSCGetProviderPath, WSCGetProviderPath32, WSCInstallNameSpace, WSCInstallNameSpace32, WSCInstallNameSpaceEx, WSCInstallNameSpaceEx32, WSCInstallProvider, WSCInstallProvider64_32, WSCInstallProviderAndChains64_32, WSCSetApplicationCategory, WSCSetProviderInfo, WSCSetProviderInfo32, WSCUnInstallNameSpace, WSCUnInstallNameSpace32, WSCUpdateProvider, WSCUpdateProvider32, WSCWriteNameSpaceOrder, WSCWriteNameSpaceOrder32, WSCWriteProviderOrder, WSCWriteProviderOrder32

Structures
FLOWSPEC, IN_ADDR, IN6_ADDR, QOS, SOCKADDR_IN, SOCKADDR_IN6, SOCKADDR_IN6_PAIR, SOCKADDR_IN6_PAIR_NATIVE, SOCKADDR_INET, SOCKET, SOCKET_ADDRESS, WSABUF, WSADATA, WSAPROTOCOL_INFO, WSAPROTOCOLCHAIN, ADDRINFOW, SCOPE_ID, SOCKADDR_STORAGE

</PackageReleaseNotes>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <LangVersion>latest</LangVersion>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\Vanara.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\..\docs\icons\Vanara64x64.png" Pack="true" PackagePath="\" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net20' ">
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net35' ">
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net40' ">
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Core\Vanara.Core.csproj" />
    <ProjectReference Include="..\Shared\Vanara.PInvoke.Shared.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>
</Project>