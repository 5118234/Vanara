<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Vanara.PInvoke.WinINet</name>
  </assembly>
  <members>
    <member name="T:Vanara.PInvoke.WinINet">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DEFAULT_FTP_PORT">
      <summary>Uses the default port for FTP servers (port 21).</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DEFAULT_GOPHER_PORT">
      <summary>Uses the default port for Gopher servers (port 70). Note Windows XP and Windows Server 2003 R2 and earlier only.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DEFAULT_HTTP_PORT">
      <summary>Uses the default port for HTTP servers (port 80).</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DEFAULT_HTTPS_PORT">
      <summary>Uses the default port for Secure Hypertext Transfer Protocol (HTTPS) servers (port 443).</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DEFAULT_SOCKS_PORT">
      <summary>Uses the default port for SOCKS firewall servers (port 1080).</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_INVALID_PORT_NUMBER">
      <summary>Uses the default port for the service specified by dwService.</summary>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetCloseHandle(System.IntPtr)">
      <summary>Closes a single Internet handle.</summary>
      <param name="hInternet">Handle to be closed.</param>
      <returns>Returns TRUE if the handle is successfully closed, or FALSE otherwise. To get extended error information, call GetLastError.</returns>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetConnect(Vanara.PInvoke.WinINet.SafeInternetHandle,System.String,System.UInt16,System.String,System.String,Vanara.PInvoke.WinINet.InternetService,Vanara.PInvoke.WinINet.InternetApiFlags,System.IntPtr)">
      <summary>Opens an File Transfer Protocol (FTP) or HTTP session for a given site.</summary>
      <param name="hInternet">Handle returned by a previous call to InternetOpen.</param>
      <param name="lpszServerName">
            A string that specifies the host name of an Internet server. Alternately, the string can contain the IP number of the site, in ASCII dotted-decimal
            format (for example, 11.0.1.45).
            </param>
      <param name="nServerPort">
            Transmission Control Protocol/Internet Protocol (TCP/IP) port on the server. These flags set only the port that is used. The service is set by the
            value of dwService.
            </param>
      <param name="lpszUsername">
            A string that specifies the name of the user to log on. If this parameter is NULL, the function uses an appropriate default. For the FTP protocol,
            the default is "anonymous".
            </param>
      <param name="lpszPassword">
            A string that contains the password to use to log on. If both lpszPassword and lpszUsername are NULL, the function uses the default "anonymous"
            password. In the case of FTP, the default password is the user's email name. If lpszPassword is NULL, but lpszUsername is not NULL, the function uses
            a blank password.
            </param>
      <param name="dwService">Type of service to access.</param>
      <param name="dwFlags">
            Options specific to the service used. If dwService is INTERNET_SERVICE_FTP, INTERNET_FLAG_PASSIVE causes the application to use passive FTP semantics.
            </param>
      <param name="dwContext">
            Pointer to a variable that contains an application-defined value that is used to identify the application context for the returned handle in callbacks.
            </param>
      <returns>
            Returns a valid handle to the session if the connection is successful, or NULL otherwise. To retrieve extended error information, call GetLastError.
            An application can also use InternetGetLastResponseInfo to determine why access to the service was denied.
            </returns>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetOpen(System.String,Vanara.PInvoke.WinINet.InternetOpenType,System.String,System.String,Vanara.PInvoke.WinINet.InternetApiFlags)">
      <summary>Initializes an application's use of the WinINet functions</summary>
      <param name="lpszAgent">
            A string that specifies the name of the application or entity calling the WinINet functions. This name is used as the user agent in the HTTP protocol.
            </param>
      <param name="dwAccessType">Type of access required.</param>
      <param name="lpszProxyName">
            A string that specifies the name of the proxy server(s) to use when proxy access is specified by setting dwAccessType to INTERNET_OPEN_TYPE_PROXY. Do
            not use an empty string, because InternetOpen will use it as the proxy name. The WinINet functions recognize only CERN type proxies (HTTP only) and
            the TIS FTP gateway (FTP only). If Microsoft Internet Explorer is installed, these functions also support SOCKS proxies. FTP requests can be made
            through a CERN type proxy either by changing them to an HTTP request or by using InternetOpenUrl. If dwAccessType is not set to
            INTERNET_OPEN_TYPE_PROXY, this parameter is ignored and should be NULL. For more information about listing proxy servers, see the Listing Proxy
            Servers section of Enabling Internet Functionality.
            </param>
      <param name="lpszProxyBypass">
            A string that specifies an optional list of host names or IP addresses, or both, that should not be routed through the proxy when dwAccessType is set
            to INTERNET_OPEN_TYPE_PROXY. The list can contain wildcards. Do not use an empty string, because InternetOpen will use it as the proxy bypass list.
            If this parameter specifies the "&lt;local&gt;" macro, the function bypasses the proxy for any host name that does not contain a period.
            <para>
            By default, WinINet will bypass the proxy for requests that use the host names "localhost", "loopback", "127.0.0.1", or "[::1]". This behavior exists
            because a remote proxy server typically will not resolve these addresses properly.
            </para><para>Internet Explorer 9: You can remove the local computer from the proxy bypass list using the "&lt;-loopback&gt;" macro.</para><para>If dwAccessType is not set to INTERNET_OPEN_TYPE_PROXY, this parameter is ignored and should be NULL.</para></param>
      <param name="dwFlags">Options.</param>
      <returns>
            Returns a valid handle that the application passes to subsequent WinINet functions. If InternetOpen fails, it returns NULL. To retrieve a specific
            error message, call GetLastError.
            </returns>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetQueryOption(Vanara.PInvoke.WinINet.SafeInternetHandle,Vanara.PInvoke.WinINet.InternetOptionFlags)">
      <summary>Queries an Internet option on the specified handle.</summary>
      <param name="hInternet">Handle on which to query information.</param>
      <param name="option">Internet option to be queried. This can be one of the Option Flags values.</param>
      <returns>A <see cref="T:Vanara.InteropServices.SafeCoTaskMemHandle" /> instance with sufficient memory needed to hold the response. This should be cast to the type required.</returns>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetQueryOption``1(Vanara.PInvoke.WinINet.SafeInternetHandle,Vanara.PInvoke.WinINet.InternetOptionFlags)">
      <summary>Queries an Internet option on the specified handle.</summary>
      <param name="hInternet">Handle on which to query information.</param>
      <param name="option">Internet option to be queried. This can be one of the Option Flags values.</param>
      <typeparam name="T">The expected type returned by the option.</typeparam>
      <returns>The option setting.</returns>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetQueryOption(Vanara.PInvoke.WinINet.SafeInternetHandle,Vanara.PInvoke.WinINet.InternetOptionFlags,System.IntPtr,System.Int32@)">
      <summary>Queries an Internet option on the specified handle.</summary>
      <param name="hInternet">Handle on which to query information.</param>
      <param name="dwOption">Internet option to be queried. This can be one of the Option Flags values.</param>
      <param name="optionsList">
            Pointer to a buffer that receives the option setting. Strings returned by InternetQueryOption are globally allocated, so the calling application must
            free them when it is finished using them.
            </param>
      <param name="bufferLength">
            Pointer to a variable that contains the size of lpBuffer, in bytes. When InternetQueryOption returns, lpdwBufferLength specifies the size of the data
            placed into lpBuffer. If GetLastError returns ERROR_INSUFFICIENT_BUFFER, this parameter points to the number of bytes required to hold the requested information.
            </param>
      <returns>Returns TRUE if successful, or FALSE otherwise. To get a specific error message, call GetLastError.</returns>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetSetOption(Vanara.PInvoke.WinINet.SafeInternetHandle,Vanara.PInvoke.WinINet.InternetOptionFlags)">
      <summary>Sets an Internet option</summary>
      <param name="hInternet">Handle on which to set information.</param>
      <param name="option">Internet option to be set. This can be one of the Option Flags values.</param>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetSetOption(Vanara.PInvoke.WinINet.SafeInternetHandle,Vanara.PInvoke.WinINet.InternetOptionFlags,System.IntPtr,System.Int32)">
      <summary>Sets an Internet option.</summary>
      <param name="hInternet">Handle on which to set information.</param>
      <param name="dwOption">Internet option to be set. This can be one of the Option Flags values.</param>
      <param name="lpBuffer">Pointer to a buffer that contains the option setting.</param>
      <param name="lpdwBufferLength">
            Size of the lpBuffer buffer. If lpBuffer contains a string, the size is in TCHARs. If lpBuffer contains anything other than a string, the size is in bytes.
            </param>
      <returns>Returns TRUE if successful, or FALSE otherwise. To get a specific error message, call GetLastError.</returns>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetSetOption``1(Vanara.PInvoke.WinINet.SafeInternetHandle,Vanara.PInvoke.WinINet.InternetOptionFlags,``0)">
      <summary>Sets an Internet option</summary>
      <param name="hInternet">Handle on which to set information.</param>
      <param name="option">Internet option to be set. This can be one of the Option Flags values.</param>
      <param name="value">The option setting value.</param>
      <typeparam name="T">The type expected by the option.</typeparam>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.InternetSetStatusCallback(Vanara.PInvoke.WinINet.SafeInternetHandle,Vanara.PInvoke.WinINet.INTERNET_STATUS_CALLBACK)">
      <summary>The InternetSetStatusCallback function sets up a callback function that WinINet functions can call as progress is made during an operation.</summary>
      <param name="hInternet">The handle for which the callback is set.</param>
      <param name="lpfnInternetCallback">A pointer to the callback function to call when progress is made, or NULL to remove the existing callback function. For more information about the callback function, see InternetStatusCallback.</param>
      <returns>Returns the previously defined status callback function if successful, NULL if there was no previously defined status callback function, or INTERNET_INVALID_STATUS_CALLBACK if the callback function is not valid.</returns>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.HTTP_VERSION_INFO">
      <summary>Contains the global HTTP version.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.HTTP_VERSION_INFO.dwMajorVersion">
      <summary>The major version number. Must be 1.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.HTTP_VERSION_INFO.dwMinorVersion">
      <summary>The minor version number. Can be either 1 or zero.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.IDSI_Flags">
      <summary>Flags used by <see cref="T:Vanara.PInvoke.WinINet.INTERNET_DIAGNOSTIC_SOCKET_INFO" />.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.IDSI_Flags.IDSI_FLAG_KEEP_ALIVE">
      <summary>Set if the connection is from the "keep-alive" pool.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.IDSI_Flags.IDSI_FLAG_SECURE">
      <summary>Set if the HTTP Request is using a secure socket.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.IDSI_Flags.IDSI_FLAG_PROXY">
      <summary>Set if a proxy is being used to reach the server.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.IDSI_Flags.IDSI_FLAG_TUNNEL">
      <summary>Set if a proxy is being used to create a tunnel.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_CACHE_TIMESTAMPS">
      <summary>Contains the LastModified and Expire times for a resource stored in the Internet cache.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CACHE_TIMESTAMPS.ftExpires">
      <summary>FILETIME structure that contains the Expires time.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CACHE_TIMESTAMPS.ftLastModified">
      <summary>FILETIME structure that contains the LastModified time.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO">
      <summary>Contains certificate information returned from the server. This structure is used by the InternetQueryOption function.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.dwKeySize">
      <summary>Size, in TCHARs, of the key.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.ftExpiry">
      <summary>FILETIME structure that contains the date the certificate expires.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.ftStart">
      <summary>FILETIME structure that contains the date the certificate becomes valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.lpszEncryptionAlgName">
      <summary>
            Pointer to a buffer that contains the name of the algorithm used for doing encryption over the secure channel (SSL/PCT) connection. The
            application must call LocalFree to release the resources allocated for this parameter.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.lpszIssuerInfo">
      <summary>
            Pointer to a buffer that contains the name of the organization, site, and server that issued the certificate. The application must call LocalFree
            to release the resources allocated for this parameter.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.lpszProtocolName">
      <summary>
            Pointer to a buffer that contains the name of the protocol used to provide the secure connection. The application must call LocalFree to release
            the resources allocated for this parameter.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.lpszSignatureAlgName">
      <summary>
            Pointer to a buffer that contains the name of the algorithm used for signing the certificate. The application must call LocalFree to release the
            resources allocated for this parameter.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_CERTIFICATE_INFO.lpszSubjectInfo">
      <summary>
            Pointer to a buffer that contains the name of the organization, site, and server for which the certificate was issued. The application must call
            LocalFree to release the resources allocated for this parameter.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_DIAGNOSTIC_SOCKET_INFO">
      <summary>
            The INTERNET_DIAGNOSTIC_SOCKET_INFO structure is returned by the InternetQueryOption function when the INTERNET_OPTION_DIAGNOSTIC_SOCKET_INFO flag is
            passed to it together with a handle to an HTTP Request. The INTERNET_DIAGNOSTIC_SOCKET_INFO structure contains information about the socket
            associated with that HTTP Request.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DIAGNOSTIC_SOCKET_INFO.DestPort">
      <summary>The address of the port at which the response was sent.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DIAGNOSTIC_SOCKET_INFO.Flags">
      <summary>The flags</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DIAGNOSTIC_SOCKET_INFO.Socket">
      <summary>Descriptor that identifies the socket associated with the specified HTTP Request.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_DIAGNOSTIC_SOCKET_INFO.SourcePort">
      <summary>The address of the port at which the HTTP Request and response was received.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION">
      <summary>Contains the value of an option.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION.dwOption">
      <summary>Option to be queried or set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION.Value">
      <summary>Union that contains the value for the option. It can be any one of the following types depending on the value of dwOption.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID">
      <summary>Option to be queried or set within <see cref="T:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION" /> structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_FLAGS">
      <summary>Sets or retrieves the connection type.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_PROXY_SERVER">
      <summary>Sets or retrieves a string containing the proxy servers.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_PROXY_BYPASS">
      <summary>Sets or retrieves a string containing the URLs that do not use the proxy server.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_AUTOCONFIG_URL">
      <summary>Sets or retrieves a string containing the URL to the automatic configuration script.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_AUTODISCOVERY_FLAGS">
      <summary>Sets or retrieves the automatic discovery settings.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_AUTOCONFIG_SECONDARY_URL">
      <summary>Chained autoconfig URL. Used when the primary autoconfig URL points to an INS file that sets a second autoconfig URL for proxy information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_AUTOCONFIG_RELOAD_DELAY_MINS">
      <summary>The number of minutes until automatic refresh of autoconfig URL by autodiscovery.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_AUTOCONFIG_LAST_DETECT_TIME">
      <summary>Read only option. Returns the time the last known good autoconfig URL was found using autodiscovery.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_AUTOCONFIG_LAST_DETECT_URL">
      <summary>Read only option. Returns the last known good URL found using autodiscovery.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_ID.INTERNET_PER_CONN_FLAGS_UI">
      <summary>Sets or retrieves the connection type.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_LIST">
      <summary>Contains the list of options for a particular Internet connection.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_LIST.dwOptionCount">
      <summary>Number of options to query or set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_LIST.dwOptionError">
      <summary>Options that failed, if an error occurs.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_LIST.dwSize">
      <summary>Size of the structure, in bytes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_LIST.pOptions">
      <summary>Pointer to an array of INTERNET_PER_CONN_OPTION structures containing the options to query or set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_LIST.pszConnection">
      <summary>
            Pointer to a string that contains the name of the RAS connection or NULL, which indicates the default or LAN connection, to set or query options on.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_Value">
      <summary>Union that contains the value for the option. It can be any one of the following types depending on the value of dwOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_Value.dwValue">
      <summary>Unsigned long integer value.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_Value.ftValue">
      <summary>A FILETIME structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PER_CONN_OPTION_Value.pszValue">
      <summary>Pointer to a string value.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_PROXY_INFO">
      <summary>
            Contains information that is supplied with the INTERNET_OPTION_PROXY value to get or set proxy information on a handle obtained from a call to the
            InternetOpen function.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PROXY_INFO.dwAccessType">
      <summary>Access type.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PROXY_INFO.lpszProxy">
      <summary>Pointer to a string that contains the proxy server list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_PROXY_INFO.lpszProxyBypass">
      <summary>Pointer to a string that contains the proxy bypass list.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_STATUS_CALLBACK">
      <summary>
            Prototype for an application-defined status callback function.
            </summary>
      <param name="hInternet">The handle for which the callback function is called.</param>
      <param name="dwContext">A pointer to a variable that specifies the application-defined context value associated with hInternet.</param>
      <param name="dwInternetStatus">A status code that indicates why the callback function is called.</param>
      <param name="lpvStatusInformation">A pointer to additional status information. When the INTERNET_STATUS_STATE_CHANGE flag is set, lpvStatusInformation points to a DWORD that contains one or more of the <see cref="T:Vanara.PInvoke.WinINet.InternetState" /> flags.</param>
      <param name="dwStatusInformationLength">The size, in bytes, of the data pointed to by lpvStatusInformation.</param>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.INTERNET_VERSION_INFO">
      <summary>
            Contains the HTTP version number of the server. This structure is used when passing the INTERNET_OPTION_VERSION flag to the InternetQueryOption function.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_VERSION_INFO.dwMajorVersion">
      <summary>Major version number.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.INTERNET_VERSION_INFO.dwMinorVersion">
      <summary>Minor version number.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetApiFlags">
      <summary>Options for the <see cref="M:Vanara.PInvoke.WinINet.InternetOpen(System.String,Vanara.PInvoke.WinINet.InternetOpenType,System.String,System.String,Vanara.PInvoke.WinINet.InternetApiFlags)" /> function.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_COOKIE_EVALUATE_P3P">
      <summary>Indicates that a Platform for Privacy Protection (P3P) header is to be associated with a cookie.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_COOKIE_THIRD_PARTY">
      <summary>Indicates that a third-party cookie is being set or retrieved.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_ASYNC">
      <summary>
            Makes only asynchronous requests on handles descended from the handle returned from this function. Only the InternetOpen function uses this flag.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_CACHE_ASYNC">
      <summary>Allows a lazy cache write.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_CACHE_IF_NET_FAIL">
      <summary>
            Returns the resource from the cache if the network request for the resource fails due to an ERROR_INTERNET_CONNECTION_RESET or
            ERROR_INTERNET_CANNOT_CONNECT error. This flag is used by HttpOpenRequest.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_DONT_CACHE">
      <summary>Does not add the returned entity to the cache. This is identical to the preferred value, INTERNET_FLAG_NO_CACHE_WRITE.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_EXISTING_CONNECT">
      <summary>
            Attempts to use an existing InternetConnect object if one exists with the same attributes required to make the request. This is useful only with
            FTP operations, since FTP is the only protocol that typically performs multiple operations during the same session. WinINet caches a single
            connection handle for each HINTERNET handle generated by InternetOpen. The InternetOpenUrl and InternetConnect functions use this flag for Http
            and Ftp connections.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_FORMS_SUBMIT">
      <summary>Indicates that this is a Forms submission.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_FROM_CACHE">
      <summary>
            Does not make network requests. All entities are returned from the cache. If the requested item is not in the cache, a suitable error, such as
            ERROR_FILE_NOT_FOUND, is returned. Only the InternetOpen function uses this flag.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_FWD_BACK">
      <summary>
            Indicates that the function should use the copy of the resource that is currently in the Internet cache. The expiration date and other
            information about the resource is not checked. If the requested item is not found in the Internet cache, the system attempts to locate the
            resource on the network. This value was introduced in Microsoft Internet Explorer 5 and is associated with the Forward and Back button operations
            of Internet Explorer.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_HYPERLINK">
      <summary>
            Forces a reload if there is no Expires time and no LastModified time returned from the server when determining whether to reload the item from
            the network. This flag can be used by FtpFindFirstFile, FtpGetFile, FtpOpenFile, FtpPutFile, HttpOpenRequest, and InternetOpenUrl.
            <para>Windows XP and Windows Server 2003 R2 and earlier: Also used by GopherFindFirstFile and GopherOpenFile.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_IGNORE_CERT_CN_INVALID">
      <summary>
            Disables checking of SSL/PCT-based certificates that are returned from the server against the host name given in the request. WinINet uses a
            simple check against certificates by comparing for matching host names and simple wildcarding rules. This flag can be used by HttpOpenRequest and
            InternetOpenUrl (for HTTP requests).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_IGNORE_CERT_DATE_INVALID">
      <summary>
            Disables checking of SSL/PCT-based certificates for proper validity dates. This flag can be used by HttpOpenRequest and InternetOpenUrl (for HTTP requests).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP">
      <summary>
            Disables detection of this special type of redirect. When this flag is used, WinINet transparently allows redirects from HTTPS to HTTP URLs. This
            flag can be used by HttpOpenRequest and InternetOpenUrl (for HTTP requests).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS">
      <summary>
            Disables detection of this special type of redirect. When this flag is used, WinINet transparently allow redirects from HTTP to HTTPS URLs. This
            flag can be used by HttpOpenRequest and InternetOpenUrl (for HTTP requests).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_KEEP_CONNECTION">
      <summary>
            Uses keep-alive semantics, if available, for the connection. This flag is used by HttpOpenRequest and InternetOpenUrl (for HTTP requests). This
            flag is required for Microsoft Network (MSN), NTLM, and other types of authentication.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_MAKE_PERSISTENT">
      <summary>No longer supported.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_MUST_CACHE_REQUEST">
      <summary>
            Identical to the preferred value, INTERNET_FLAG_NEED_FILE. Causes a temporary file to be created if the file cannot be cached. This flag can be
            used by FtpFindFirstFile, FtpGetFile, FtpOpenFile, FtpPutFile, HttpOpenRequest, and InternetOpenUrl.
            <para>Windows XP and Windows Server 2003 R2 and earlier: Also used by GopherFindFirstFile and GopherOpenFile.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_NEED_FILE">
      <summary>
            Causes a temporary file to be created if the file cannot be cached. This flag can be used by FtpFindFirstFile, FtpGetFile, FtpOpenFile,
            FtpPutFile, HttpOpenRequest, and InternetOpenUrl.
            <para>Windows XP and Windows Server 2003 R2 and earlier: Also used by GopherFindFirstFile and GopherOpenFile.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_NO_AUTH">
      <summary>Does not attempt authentication automatically. This flag can be used by HttpOpenRequest and InternetOpenUrl (for HTTP requests).</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_NO_AUTO_REDIRECT">
      <summary>Does not automatically handle redirection in HttpSendRequest. This flag can also be used by InternetOpenUrl for HTTP requests.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_NO_CACHE_WRITE">
      <summary>
            Does not add the returned entity to the cache. This flag is used by , HttpOpenRequest, and InternetOpenUrl.
            <para>Windows XP and Windows Server 2003 R2 and earlier: Also used by GopherFindFirstFile and GopherOpenFile.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_NO_COOKIES">
      <summary>
            Does not automatically add cookie headers to requests, and does not automatically add returned cookies to the cookie database. This flag can be
            used by HttpOpenRequest and InternetOpenUrl (for HTTP requests).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_NO_UI">
      <summary>Disables the cookie dialog box. This flag can be used by HttpOpenRequest and InternetOpenUrl (HTTP requests only).</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_OFFLINE">
      <summary>
            Identical to INTERNET_FLAG_FROM_CACHE. Does not make network requests. All entities are returned from the cache. If the requested item is not in
            the cache, a suitable error, such as ERROR_FILE_NOT_FOUND, is returned. Only the InternetOpen function uses this flag.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_PASSIVE">
      <summary>
            Uses passive FTP semantics. Only InternetConnect and InternetOpenUrl use this flag. InternetConnect uses this flag for FTP requests, and
            InternetOpenUrl uses this flag for FTP files and directories.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_PRAGMA_NOCACHE">
      <summary>
            Forces the request to be resolved by the origin server, even if a cached copy exists on the proxy. The InternetOpenUrl function (on HTTP and
            HTTPS requests only) and HttpOpenRequest function use this flag.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_RAW_DATA">
      <summary>
            Returns the data as a WIN32_FIND_DATA structure when retrieving FTP directory information. If this flag is not specified or if the call is made
            through a CERN proxy, InternetOpenUrl returns the HTML version of the directory. Only the InternetOpenUrl function uses this flag.
            <para>Windows XP and Windows Server 2003 R2 and earlier: Also returns a GOPHER_FIND_DATA structure when retrieving Gopher directory information.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_READ_PREFETCH">
      <summary>This flag is currently disabled.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_RELOAD">
      <summary>
            Forces a download of the requested file, object, or directory listing from the origin server, not from the cache. The FtpFindFirstFile,
            FtpGetFile, FtpOpenFile, FtpPutFile, HttpOpenRequest, and InternetOpenUrl functions use this flag.
            <para>Windows XP and Windows Server 2003 R2 and earlier: Also used by GopherFindFirstFile and GopherOpenFile.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_RESTRICTED_ZONE">
      <summary>Indicates that the cookie being set is associated with an untrusted site.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_RESYNCHRONIZE">
      <summary>
            Reloads HTTP resources if the resource has been modified since the last time it was downloaded. All FTP resources are reloaded. This flag can be
            used by FtpFindFirstFile, FtpGetFile, FtpOpenFile, FtpPutFile, HttpOpenRequest, and InternetOpenUrl.
            <para>Windows XP and Windows Server 2003 R2 and earlier: Also used by GopherFindFirstFile and GopherOpenFile, and Gopher resources are reloaded.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_SECURE">
      <summary>
            Uses secure transaction semantics. This translates to using Secure Sockets Layer/Private Communications Technology (SSL/PCT) and is only
            meaningful in HTTP requests. This flag is used by HttpOpenRequest and InternetOpenUrl, but this is redundant if https:// appears in the URL.The
            InternetConnect function uses this flag for HTTP connections; all the request handles created under this connection will inherit this flag.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_TRANSFER_ASCII">
      <summary>Transfers file as ASCII (FTP only). This flag can be used by FtpOpenFile, FtpGetFile, and FtpPutFile.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_FLAG_TRANSFER_BINARY">
      <summary>Transfers file as binary (FTP only). This flag can be used by FtpOpenFile, FtpGetFile, and FtpPutFile.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_NO_CALLBACK">
      <summary>
            Indicates that no callbacks should be made for that API. This is used for the dxContext parameter of the functions that allow asynchronous operations.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.INTERNET_OPTION_SUPPRESS_SERVER_AUTH">
      <summary>
            Sets an HTTP request object such that it will not logon to origin servers, but will perform automatic logon to HTTP proxy servers. This option
            differs from the Request flag INTERNET_FLAG_NO_AUTH, which prevents authentication to both proxy servers and origin servers. Setting this mode
            will suppress the use of any credential material (either previously provided username/password or client SSL certificate) when communicating with
            an origin server. However, if the request must transit via an authenticating proxy, WinINet will still perform automatic authentication to the
            HTTP proxy per the Intranet Zone settings for the user. The default Intranet Zone setting is to permit automatic logon using the user’s default
            credentials. To ensure suppression of all identifying information, the caller should combine INTERNET_OPTION_SUPPRESS_SERVER_AUTH with the
            INTERNET_FLAG_NO_COOKIES request flag. This option may only be set on request objects before they have been sent. Attempts to set this option
            after the request has been sent will return ERROR_INTERNET_INCORRECT_HANDLE_STATE. No buffer is required for this option. This is used by
            InternetSetOption on handles returned by HttpOpenRequest only. Version: Requires Internet Explorer 8.0 or later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.WININET_API_FLAG_ASYNC">
      <summary>Forces asynchronous operations.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.WININET_API_FLAG_SYNC">
      <summary>Forces synchronous operations.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetApiFlags.WININET_API_FLAG_USE_CONTEXT">
      <summary>Forces the API to use the context value, even if it is set to zero.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetErrorMask">
      <summary>Values available for the <see cref="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ERROR_MASK" /> value.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetErrorMask.INTERNET_ERROR_MASK_INSERT_CDROM">
      <summary>The internet error mask insert cdrom</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetErrorMask.INTERNET_ERROR_MASK_COMBINED_SEC_CERT">
      <summary>The internet error mask combined sec cert</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetErrorMask.INTERNET_ERROR_MASK_NEED_MSN_SSPI_PKG">
      <summary>The internet error mask need MSN sspi PKG</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetErrorMask.INTERNET_ERROR_MASK_LOGIN_FAILURE_DISPLAY_ENTITY_BODY">
      <summary>The internet error mask login failure display entity body</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOpenType">
      <summary>Type of access required for the <see cref="M:Vanara.PInvoke.WinINet.InternetOpen(System.String,Vanara.PInvoke.WinINet.InternetOpenType,System.String,System.String,Vanara.PInvoke.WinINet.InternetApiFlags)" /> function.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOpenType.INTERNET_OPEN_TYPE_DIRECT">
      <summary>Resolves all host names locally.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOpenType.INTERNET_OPEN_TYPE_PRECONFIG">
      <summary>Retrieves the proxy or direct configuration from the registry.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOpenType.INTERNET_OPEN_TYPE_PRECONFIG_WITH_NO_AUTOPROXY">
      <summary>
            Retrieves the proxy or direct configuration from the registry and prevents the use of a startup Microsoft JScript or Internet Setup (INS) file.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOpenType.INTERNET_OPEN_TYPE_PROXY">
      <summary>
            Passes requests to the proxy unless a proxy bypass list is supplied and the name to be resolved bypasses the proxy. In this case, the function
            uses INTERNET_OPEN_TYPE_DIRECT.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOptionErrorMask">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet.InternetOptionErrorMask</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionErrorMask.INTERNET_ERROR_MASK_INSERT_CDROM">
      <summary>Indicates that the client application can handle the ERROR_INTERNET_INSERT_CDROM error code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionErrorMask.INTERNET_ERROR_MASK_COMBINED_SEC_CERT">
      <summary>
            Indicates that all certificate errors are to be reported using the same error return, namely ERROR_INTERNET_SEC_CERT_ERRORS. If this flag is set,
            call InternetErrorDlg upon receiving the ERROR_INTERNET_SEC_CERT_ERRORS error, so that the user can respond to a familiar dialog describing the
            problem. Caution Failing to inform the user of this error exposes the user to potential spoofing attacks.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionErrorMask.INTERNET_ERROR_MASK_LOGIN_FAILURE_DISPLAY_ENTITY_BODY">
      <summary>Indicates that the client application can handle the ERROR_INTERNET_LOGIN_FAILURE_DISPLAY_ENTITY_BODY error code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionErrorMask.INTERNET_ERROR_MASK_NEED_MSN_SSPI_PKG">
      <summary>Not implemented.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOptionFlags">
      <summary>The following option flags are used with the InternetQueryOption and InternetSetOption functions.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ALTER_IDENTITY">
      <summary>Not implemented</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ASYNC">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ASYNC_ID">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ASYNC_PRIORITY">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_BYPASS_EDITED_ENTRY">
      <summary>
            Sets or retrieves the Boolean value that determines if the system should check the network for newer content and overwrite edited cache entries
            if a newer version is found. If set to True, the system checks the network for newer content and overwrites the edited cache entry with the newer
            version. The default is False, which indicates that the edited cache entry should be used without checking the network. This is used by
            InternetQueryOption and InternetSetOption. It is valid only in Microsoft Internet Explorer 5 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CACHE_STREAM_HANDLE">
      <summary>No longer supported.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CACHE_TIMESTAMPS">
      <summary>
            Retrieves an INTERNET_CACHE_TIMESTAMPS structure that contains the LastModified time and Expires time from the resource stored in the Internet
            cache. This value is used by InternetQueryOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CALLBACK">
      <summary>
            Sets or retrieves the address of the callback function defined for this handle. This option can be used on all HINTERNET handles. Used by
            InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CALLBACK_FILTER">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CLIENT_CERT_CONTEXT">
      <summary>
            This flag is not supported by InternetQueryOption. The lpBuffer parameter must be a pointer to a CERT_CONTEXT structure and not a pointer to a
            CERT_CONTEXT pointer. If an application receives ERROR_INTERNET_CLIENT_AUTH_CERT_NEEDED, it must call InternetErrorDlg or use InternetSetOption
            to supply a certificate before retrying the request. CertDuplicateCertificateContext is then called so that the certificate context passed can be
            independently released by the application.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_COMPRESSED_CONTENT_LENGTH">
      <summary>
            For a request where WinInet decompressed the server’s supplied Content-Encoding, retrieves the server-reported Content-Length of the response
            body as a ULONGLONG. Supported in Windows 10, version 1507 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONNECT_BACKOFF">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONNECT_RETRIES">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the number of times WinINet attempts to resolve and connect to a host. It only
            attempts once per IP address. For example, if you attempt to connect to a multihome host that has ten IP addresses and
            INTERNET_OPTION_CONNECT_RETRIES is set to seven, WinINet only attempts to resolve and connect to the first seven IP addresses. Conversely, given
            the same set of ten IP addresses, if INTERNET_OPTION_CONNECT_RETRIES is set to 20, WinINet attempts each of the ten only once. If a host has only
            one IP address and the first connection attempt fails, there are no further attempts. If a connection attempt still fails after the specified
            number of attempts, the request is canceled. The default value for INTERNET_OPTION_CONNECT_RETRIES is five attempts. This option can be used on
            any HINTERNET handle, including a NULL handle. It is used by InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONNECT_TIME">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONNECTED_STATE">
      <summary>Sets or retrieves an unsigned long integer value that contains the connected state. This is used by InternetQueryOption and InternetSetOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONTEXT_VALUE">
      <summary>
            Sets or retrieves a DWORD_PTR that contains the address of the context value associated with this HINTERNET handle. This option can be used on
            any HINTERNET handle. This is used by InternetQueryOption and InternetSetOption. Previously, this set the context value to the address stored in
            the lpBuffer pointer. This has been corrected so that the value stored in the buffer is used and the INTERNET_OPTION_CONTEXT_VALUE flag is
            assigned a new value. The old value, 10, has been preserved so that applications written for the old behavior are still supported.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONTROL_RECEIVE_TIMEOUT">
      <summary>Identical to INTERNET_OPTION_RECEIVE_TIMEOUT. This is used by InternetQueryOption and InternetSetOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONTROL_SEND_TIMEOUT">
      <summary>Identical to INTERNET_OPTION_SEND_TIMEOUT. This is used by InternetQueryOption and InternetSetOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DATAFILE_NAME">
      <summary>
            Retrieves a string value that contains the name of the file backing a downloaded entity. This flag is valid after InternetOpenUrl, FtpOpenFile,
            GopherOpenFile, or HttpOpenRequest has completed. This option can only be queried by InternetQueryOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DATAFILE_EXT">
      <summary>
            Sets a string value that contains the extension of the file backing a downloaded entity. This flag should be set before calling InternetOpenUrl,
            FtpOpenFile, GopherOpenFile, or HttpOpenRequest. This option can only be set by InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DIGEST_AUTH_UNLOAD">
      <summary>
            Causes the system to log off the Digest authentication SSPI package, purging all of the credentials created for the process. No buffer is
            required for this option. It is used by InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DISABLE_AUTODIAL">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DISCONNECTED_TIMEOUT">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ENABLE_REDIRECT_CACHE_READ">
      <summary>
            On a request handle, sets a Boolean controlling whether redirects will be returned from the WinInet cache for a given request. The default is
            FALSE. Supported in Windows 8 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ENCODE_EXTRA">
      <summary>
            Gets/sets a BOOL indicating whether non-ASCII characters in the query string should be percent-encoded. The default is FALSE. Supported in
            Windows 8.1 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_END_BROWSER_SESSION">
      <summary>
            Flushes entries not in use from the password cache on the hard disk drive. Also resets the cache time used when the synchronization mode is
            once-per-session. No buffer is required for this option. This is used by InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ERROR_MASK">
      <summary>
            Sets an unsigned long integer value that contains the error masks that can be handled by the client application.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ENTERPRISE_CONTEXT">
      <summary>
            Sets a PWSTR containing the Enterprise ID (see https://msdn.microsoft.com/en-us/library/windows/desktop/mt759320(v=vs.85).aspx) which applies to
            the request. Supported in Windows 10, version 1507 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_EXTENDED_ERROR">
      <summary>
            Retrieves an unsigned long integer value that contains a Winsock error code mapped to the ERROR_INTERNET_ error messages last returned in this
            thread context. This option is used on a NULLHINTERNET handle by InternetQueryOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_FROM_CACHE_TIMEOUT">
      <summary>
            Sets or retrieves a1n unsigned long integer value that contains the amount of time the system should wait for a response to a network request
            before checking the cache for a copy of the resource. If a network request takes longer than the time specified and the requested resource is
            available in the cache, the resource is retrieved from the cache. This is used by InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_HANDLE_TYPE">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Returns a InternetOptionHandleType value.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_HSTS">
      <summary>
            Gets/sets a BOOL indicating whether WinInet should follow HTTP Strict Transport Security (HSTS) directives from servers. If enabled, http://
            schemed requests to domains which have an HSTS policy cached by WinInet will be redirected to matching https:// URLs. The default is FALSE.
            Supported in Windows 8.1 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_HTTP_DECODING">
      <summary>Enables WinINet to perform decoding for the gzip and deflate encoding schemes. For more information, see Content Encoding.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_IDENTITY">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_IDLE_STATE">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_IGNORE_OFFLINE">
      <summary>
            Sets or retrieves whether the global offline flag should be ignored for the specified request handle. No buffer is required for this option. This
            is used by InternetQueryOption and InternetSetOption with a request handle. This option is only valid in Internet Explorer 5 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_KEEP_CONNECTION">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_LISTEN_TIMEOUT">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_MAX_CONNS_PER_1_0_SERVER">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the maximum number of connections allowed per HTTP/1.0 server. This is used by
            InternetQueryOption and InternetSetOption. This option is only valid in Internet Explorer 5 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_MAX_CONNS_PER_SERVER">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the maximum number of connections allowed per server. This is used by
            InternetQueryOption and InternetSetOption. This option is only valid in Internet Explorer 5 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_OFFLINE_MODE">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_OFFLINE_SEMANTICS">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_OPT_IN_WEAK_SIGNATURE">
      <summary>
            Opt-in for weak signatures (e.g. SHA-1) to be treated as insecure. This will instruct WinInet to call CertGetCertificateChain using the
            CERT_CHAIN_OPT_IN_WEAK_SIGNATURE parameter.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_PARENT_HANDLE">
      <summary>Retrieves the parent handle to this handle. This option can be used on any HINTERNET handle by InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_PASSWORD">
      <summary>
            Sets or retrieves a string value that contains the password associated with a handle returned by InternetConnect. This is used by
            InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_POLICY">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_PROXY_PASSWORD">
      <summary>
            Sets or retrieves a string value that contains the password used to access the proxy. This is used by InternetQueryOption and InternetSetOption.
            This option can be set on the handle returned by InternetConnect or HttpOpenRequest.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_PROXY_SETTINGS_CHANGED">
      <summary>
            Alerts the current WinInet instance that proxy settings have changed and that they must update with the new settings. To alert all available
            WinInet instances, set the Buffer parameter of InternetSetOption to NULL and BufferLength to 0 when passing this option. This option can be set
            on the handle returned by InternetConnect or HttpOpenRequest.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_PROXY_USERNAME">
      <summary>
            Sets or retrieves a string value that contains the user name used to access the proxy. This is used by InternetQueryOption and InternetSetOption.
            This option can be set on the handle returned by InternetConnect or HttpOpenRequest.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_READ_BUFFER_SIZE">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the size of the read buffer. This option can be used on HINTERNET handles returned
            by FtpOpenFile, FtpFindFirstFile, and InternetConnect (FTP session only). This option is used by InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_RECEIVE_THROUGHPUT">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_REFRESH">
      <summary>
            Causes the proxy data to be reread from the registry for a handle. No buffer is required. This option can be used on the HINTERNET handle
            returned by InternetOpen. It is used by InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_REMOVE_IDENTITY">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_REQUEST_FLAGS">
      <summary>
            Retrieves an unsigned long integer value that contains the special status flags that indicate the status of the download in progress. This is
            used by InternetQueryOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_REQUEST_PRIORITY">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the priority of requests that compete for a connection on an HTTP handle. This is
            used by InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_RESET_URLCACHE_SESSION">
      <summary>
            Starts a new cache session for the process. No buffer is required. This is used by InternetSetOption. This option is reserved for internal use only.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SECONDARY_CACHE_KEY">
      <summary>
            Sets or retrieves a string value that contains the secondary cache key. This is used by InternetQueryOption and InternetSetOption. This option is
            reserved for internal use only.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SECURITY_CERTIFICATE">
      <summary>
            Retrieves the certificate for an SSL/PCT (Secure Sockets Layer/Private Communications Technology) server into a formatted string. This is used by InternetQueryOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SECURITY_CERTIFICATE_STRUCT">
      <summary>Retrieves the certificate for an SSL/PCT server into the INTERNET_CERTIFICATE_INFO structure. This is used by InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SECURITY_FLAGS">
      <summary>
            Retrieves an unsigned long integer value that contains the security flags for a handle. This option is used by InternetQueryOption. It can be a
            combination of the following values.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SECURITY_KEY_BITNESS">
      <summary>
            Retrieves an unsigned long integer value that contains the bit size of the encryption key. The larger the number, the greater the encryption
            strength used. This is used by InternetQueryOption. Be aware that the data retrieved this way relates to a transaction that has already occurred,
            whose security level can no longer be changed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SEND_THROUGHPUT">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SETTINGS_CHANGED">
      <summary>
            Notifies the system that the registry settings have been changed so that it verifies the settings on the next call to InternetConnect. This is
            used by InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SUPPRESS_BEHAVIOR">
      <summary>
            A general purpose option that is used to suppress behaviors on a process-wide basis. The lpBuffer parameter of the function must be a pointer to
            a DWORD containing the specific behavior to suppress. This option cannot be queried with InternetQueryOption. The permitted values are:
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_URL">
      <summary>
            Retrieves a string value that contains the full URL of a downloaded resource. If the original URL contained any extra data, such as search
            strings or anchors, or if the call was redirected, the URL returned differs from the original. This option is valid on HINTERNET handles returned
            by InternetOpenUrl, FtpOpenFile, GopherOpenFile, or HttpOpenRequest. It is used by InternetQueryOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_USER_AGENT">
      <summary>
            Sets or retrieves the user agent string on handles supplied by InternetOpen and used in subsequent HttpSendRequest functions, as long as it is
            not overridden by a header added by HttpAddRequestHeaders or HttpSendRequest. This is used by InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_USERNAME">
      <summary>
            Sets or retrieves a string that contains the user name associated with a handle returned by InternetConnect. This is used by InternetQueryOption
            and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_VERSION">
      <summary>
            Retrieves an INTERNET_VERSION_INFO structure that contains the version number of Wininet.dll. This option can be used on a NULLHINTERNET handle
            by InternetQueryOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_WRITE_BUFFER_SIZE">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the size, in bytes, of the write buffer. This option can be used on HINTERNET
            handles returned by FtpOpenFile and InternetConnect (FTP session only). It is used by InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CODEPAGE">
      <summary>
            By default, the host or authority portion of the Unicode URL is encoded according to the IDN specification. Setting this option on the request,
            or connection handle, when IDN is disabled, specifies a code page encoding scheme for the host portion of the URL. The lpBuffer parameter in the
            call to InternetSetOption contains the desired DBCS code page. If no code page is specified in lpBuffer, WinINet uses the default system code
            page (CP_ACP). Note: This option is ignored if IDN is not disabled. For more information about how to disable IDN, see the INTERNET_OPTION_IDN option.
            <para><c>Windows XP with SP2 and Windows Server 2003 with SP1:</c> This flag is not supported.</para><para><c>Version:</c> Requires Internet Explorer 7.0.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CODEPAGE_PATH">
      <summary>
            By default, the path portion of the URL is UTF8 encoded. The WinINet API performs escape character (%) encoding on the high-bit characters.
            Setting this option on the request, or connection handle, disables the UTF8 encoding and sets a specific code page. The lpBuffer parameter in the
            call to InternetSetOption contains the desired DBCS codepage for the path. If no code page is specified in lpBuffer, WinINet uses the default CP_UTF8.
            <para><c>Windows XP with SP2 and Windows Server 2003 with SP1:</c> This flag is not supported.</para><para><c>Version:</c> Requires Internet Explorer 7.0.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CODEPAGE_EXTRA">
      <summary>
            By default, the path portion of the URL is the default system code page (CP_ACP). The escape character (%) conversions are not performed on the
            extra portion. Setting this option on the request, or connection handle disables the CP_ACP encoding. The lpBuffer parameter in the call to
            InternetSetOption contains the desired DBCS codepage for the extra portion of the URL. If no code page is specified in lpBuffer, WinINet uses the
            default system code page (CP_ACP).
            <para><c>Windows XP with SP2 and Windows Server 2003 with SP1:</c> This flag is not supported.</para><para><c>Version:</c> Requires Internet Explorer 7.0.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_CONNECT_TIMEOUT">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the time-out value, in milliseconds, to use for Internet connection requests.
            Setting this option to infinite (0xFFFFFFFF) will disable this timer. If a connection request takes longer than this time-out value, the request
            is canceled. When attempting to connect to multiple IP addresses for a single host (a multihome host), the timeout limit is cumulative for all of
            the IP addresses. This option can be used on any HINTERNET handle, including a NULL handle. It is used by InternetQueryOption and InternetSetOption.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DATA_RECEIVE_TIMEOUT">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the time-out value, in milliseconds, to receive a response to a request for the
            data channel of an FTP transaction. If the response takes longer than this time-out value, the request is canceled. This option can be used on
            any HINTERNET handle, including a NULL handle. It is used by InternetQueryOption and InternetSetOption. This flag has no impact on HTTP functionality.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DATA_SEND_TIMEOUT">
      <summary>
            Sets or retrieves an unsigned long integer value, in milliseconds, that contains the time-out value to send a request for the data channel of an
            FTP transaction. If the send takes longer than this time-out value, the send is canceled. This option can be used on any HINTERNET handle,
            including a NULL handle. It is used by InternetQueryOption and InternetSetOption. This flag has no impact on HTTP functionality.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_DIAGNOSTIC_SOCKET_INFO">
      <summary>
            Retrieves an INTERNET_DIAGNOSTIC_SOCKET_INFO structure that contains data about a specified HTTP Request. This flag is used by
            InternetQueryOption. <c>Windows 7:</c> This option is no longer supported.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_ENABLE_HTTP_PROTOCOL">
      <summary>
            Sets a DWORD bitmask of acceptable advanced HTTP versions. May be set on any handle type. Possible values are: HTTP_PROTOCOL_FLAG_HTTP2 (0x2).
            Supported on Windows 10, version 1507 and later. Legacy versions of HTTP (1.1 and prior) cannot be disabled using this option. The default is
            0x0. Supported in Windows 10, version 1507 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_HTTP_PROTOCOL_USED">
      <summary>
            Gets a DWORD indicating which advanced HTTP version was used on a given request. Possible values are: HTTP_PROTOCOL_FLAG_HTTP2 (0x2). Supported
            on Windows 10, version 1507 and later. 0x0 indicates HTTP/1.1 or earlier; see INTERNET_OPTION_HTTP_VERSION if more precision is needed about
            which legacy version was used. Supported on Windows 10, version 1507 and later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_HTTP_VERSION">
      <summary>
            Sets or retrieves an HTTP_VERSION_INFO structure that contains the supported HTTP version. This must be used on a NULL handle. This is used by
            InternetQueryOption and InternetSetOption. On Windows 7, Windows Server 2008 R2, and later, the value of the dwMinorVersion member in the
            HTTP_VERSION_INFO structure is overridden by Internet Explorer settings. EnableHttp1_1 is a registry value under
            HKLM\Software\Microsoft\InternetExplorer\AdvacnedOptions\HTTP\GENABLE controlled by Internet Options set in Internet Explorer for the system. The
            EnableHttp1_1 value defaults to 1. The HTTP_VERSION_INFO structure is ignored for any HTTP version less than 1.1 if EnableHttp1_1 is set to 1.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_IDN">
      <summary>
            By default, the host or authority portion of the URL is encoded according to the IDN specification for both direct and proxy connections. This
            option can be used on the request, or connection handle to enable or disable IDN. When IDN is disabled, WinINet uses the system codepage to
            encode the host or authority portion of the URL. To disable IDN host conversion, set the lpBuffer parameter in the call to InternetSetOption to
            zero. To enable IDN conversion on only the direct connection, specify INTERNET_FLAG_IDN_DIRECT in the lpBuffer parameter in the call to
            InternetSetOption. To enable IDN conversion on only the proxy connection, specify INTERNET_FLAG_IDN_PROXY in the lpBuffer parameter in the call
            to InternetSetOption. Windows XP with SP2 and Windows Server 2003 with SP1: This flag is not supported.
            Version:  Requires Internet Explorer 7.0.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_MAX_CONNS_PER_PROXY">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the maximum number of connections allowed per CERN proxy. When this option is set
            or retrieved, the hInternet parameter must set to a null handle value. A null handle value indicates that the option should be set or queried for
            the current process. When calling InternetSetOption with this option, all existing proxy objects will receive the new value. This value is
            limited to a range of 2 to 128, inclusive. <c>Version:</c> Requires Internet Explorer 8.0.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_PER_CONNECTION_OPTION">
      <summary>
            Sets or retrieves an INTERNET_PER_CONN_OPTION_LIST structure that specifies a list of options for a particular connection. This is used by
            InternetQueryOption and InternetSetOption. This option is only valid in Internet Explorer 5 and later. Note INTERNET_OPTION_PER_CONNECTION_OPTION
            causes the settings to be changed on a system-wide basis when a NULL handle is used in the call to InternetSetOption. To refresh the global proxy
            settings, you must call InternetSetOption with the INTERNET_OPTION_REFRESH option flag. Note To change proxy information for the entire process
            without affecting the global settings in Internet Explorer 5 and later, use this option on the handle that is returned from InternetOpen. The
            following code example changes the proxy for the whole process even though the HINTERNET handle is closed and is not used by any requests. For
            more information and code examples, see KB article 226473.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_PROXY">
      <summary>
            Sets or retrieves an INTERNET_PROXY_INFO structure that contains the proxy data for an existing InternetOpen handle when the HINTERNET handle is
            not NULL. If the HINTERNET handle is NULL, the function sets or queries the global proxy data. This option can be used on the handle returned by
            InternetOpen. It is used by InternetQueryOption and InternetSetOption. Note It is recommended that INTERNET_OPTION_PER_CONNECTION_OPTION be used
            instead of INTERNET_OPTION_PROXY. For more information, see KB article 226473.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_RECEIVE_TIMEOUT">
      <summary>
            Sets or retrieves an unsigned long integer value that contains the time-out value, in milliseconds, to receive a response to a request. If the
            response takes longer than this time-out value, the request is canceled. This option can be used on any HINTERNET handle, including a NULL
            handle. It is used by InternetQueryOption and InternetSetOption. This option is not intended to represent a fine-grained, immediate timeout. You
            can expect the timeout to occur up to six seconds after the set timeout value. When used in reference to an FTP transaction, this option refers
            to the control channel.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.SECURITY_FLAG_UNKNOWNBIT">
      <summary>
            The bit size used in the encryption is unknown. This is only returned in a call to InternetQueryOption. Be aware that the data retrieved this way
            relates to a transaction that has occurred, whose security level can no longer be changed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SEND_TIMEOUT">
      <summary>
            Sets or retrieves an unsigned long integer value, in milliseconds, that contains the time-out value to send a request. If the send takes longer
            than this time-out value, the send is canceled. This option can be used on any HINTERNET handle, including a NULL handle. It is used by
            InternetQueryOption and InternetSetOption. When used in reference to an FTP transaction, this option refers to the control channel.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SERVER_CERT_CHAIN_CONTEXT">
      <summary>
            Retrieves the server’s certificate-chain context as a duplicated PCCERT_CHAIN_CONTEXT. You may pass this duplicated context to any Crypto API
            function which takes a PCCERT_CHAIN_CONTEXT. You must call CertFreeCertificateChain on the returned PCCERT_CHAIN_CONTEXT when you are done with
            the certificate-chain context. <c>Version:</c> Requires Internet Explorer 8.0.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionFlags.INTERNET_OPTION_SUPPRESS_SERVER_AUTH">
      <summary>
            Sets an HTTP request object such that it will not logon to origin servers, but will perform automatic logon to HTTP proxy servers. This option
            differs from the Request flag INTERNET_FLAG_NO_AUTH, which prevents authentication to both proxy servers and origin servers. Setting this mode
            will suppress the use of any credential material (either previously provided username/password or client SSL certificate) when communicating with
            an origin server. However, if the request must transit via an authenticating proxy, WinINet will still perform automatic authentication to the
            HTTP proxy per the Intranet Zone settings for the user. The default Intranet Zone setting is to permit automatic logon using the user’s default
            credentials. To ensure suppression of all identifying information, the caller should combine INTERNET_OPTION_SUPPRESS_SERVER_AUTH with the
            INTERNET_FLAG_NO_COOKIES request flag. This option may only be set on request objects before they have been sent. Attempts to set this option
            after the request has been sent will return ERROR_INTERNET_INCORRECT_HANDLE_STATE. No buffer is required for this option. This is used by
            InternetSetOption on handles returned by HttpOpenRequest only.
            Version:  Requires Internet Explorer 8.0 or later.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOptionHandleType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet.InternetOptionHandleType</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_CONNECT_FTP">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_CONNECT_GOPHER">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_CONNECT_HTTP">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_FILE_REQUEST">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_FTP_FILE">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_FTP_FILE_HTML">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_FTP_FIND">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_FTP_FIND_HTML">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_GOPHER_FILE">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_GOPHER_FILE_HTML">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_GOPHER_FIND">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_GOPHER_FIND_HTML">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_HTTP_REQUEST">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionHandleType.INTERNET_HANDLE_TYPE_INTERNET">
      <summary>
            Retrieves an unsigned long integer value that contains the type of the HINTERNET handles passed in. This is used by InternetQueryOption on any
            HINTERNET handle. Possible return values include the following.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOptionIDNFlags">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet.InternetOptionIDNFlags</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionIDNFlags.INTERNET_FLAG_IDN_DIRECT">
      <summary>IDN enabled for direct connections</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionIDNFlags.INTERNET_FLAG_IDN_PROXY">
      <summary>IDN enabled for proxy</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOptionRequestFlags">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet.InternetOptionRequestFlags</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionRequestFlags.INTERNET_REQFLAG_ASYNC">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionRequestFlags.INTERNET_REQFLAG_CACHE_WRITE_DISABLED">
      <summary>Internet request cannot be cached (an HTTPS request, for example).</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionRequestFlags.INTERNET_REQFLAG_FROM_CACHE">
      <summary>Response came from the cache.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionRequestFlags.INTERNET_REQFLAG_NET_TIMEOUT">
      <summary>Internet request timed out.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionRequestFlags.INTERNET_REQFLAG_NO_HEADERS">
      <summary>Original response contained no headers.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionRequestFlags.INTERNET_REQFLAG_PASSIVE">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionRequestFlags.INTERNET_REQFLAG_VIA_PROXY">
      <summary>Request was made through a proxy.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_128BIT">
      <summary>Identical to the preferred value SECURITY_FLAG_STRENGTH_STRONG. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_40BIT">
      <summary>Identical to the preferred value SECURITY_FLAG_STRENGTH_WEAK. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_56BIT">
      <summary>Identical to the preferred value SECURITY_FLAG_STRENGTH_MEDIUM. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_FORTEZZA">
      <summary>Indicates Fortezza has been used to provide secrecy, authentication, and/or integrity for the specified connection.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IETFSSL4">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_CERT_CN_INVALID">
      <summary>Ignores the ERROR_INTERNET_SEC_CERT_CN_INVALID error message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_CERT_DATE_INVALID">
      <summary>Ignores the ERROR_INTERNET_SEC_CERT_DATE_INVALID error message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTP">
      <summary>Ignores the ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR error message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTPS">
      <summary>Ignores the ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR error message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_REVOCATION">
      <summary>Ignores certificate revocation problems.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_UNKNOWN_CA">
      <summary>Ignores unknown certificate authority problems.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_WEAK_SIGNATURE">
      <summary>Ignores weak certificate signature problems.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_IGNORE_WRONG_USAGE">
      <summary>Ignores incorrect usage problems.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_NORMALBITNESS">
      <summary>Identical to the value SECURITY_FLAG_STRENGTH_WEAK. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_PCT">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_PCT4">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_SECURE">
      <summary>Uses secure transfers. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_SSL">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_SSL3">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_STRENGTH_MEDIUM">
      <summary>Uses medium (56-bit) encryption. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_STRENGTH_STRONG">
      <summary>Uses strong (128-bit) encryption. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSecurityFlags.SECURITY_FLAG_STRENGTH_WEAK">
      <summary>Uses weak (40-bit) encryption. This is only returned in a call to InternetQueryOption.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetOptionSupressBehavior">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet.InternetOptionSupressBehavior</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSupressBehavior.INTERNET_SUPPRESS_RESET_ALL">
      <summary>
            Disables all suppressions, re-enabling default and configured behavior. This option is the equivalent of setting
            INTERNET_SUPPRESS_COOKIE_POLICY_RESET and INTERNET_SUPPRESS_COOKIE_PERSIST_RESET individually. <c>Version:</c> Requires Internet Explorer 6.0 or later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSupressBehavior.INTERNET_SUPPRESS_COOKIE_POLICY">
      <summary>Ignores any configured cookie policies and allows cookies to be set. <c>Version:</c> Requires Internet Explorer 6.0 or later.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSupressBehavior.INTERNET_SUPPRESS_COOKIE_POLICY_RESET">
      <summary>
            Disables the INTERNET_SUPPRESS_COOKIE_POLICY suppression, permitting the evaluation of cookies according to the configured cookie policy.
            <c>Version:</c> Requires Internet Explorer 6.0 or later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSupressBehavior.INTERNET_SUPPRESS_COOKIE_PERSIST">
      <summary>
            Suppresses the persistence of cookies, even if the server has specified them as persistent. <c>Version:</c> Requires Internet Explorer 8.0 or later.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetOptionSupressBehavior.INTERNET_SUPPRESS_COOKIE_PERSIST_RESET">
      <summary>
            Disables the INTERNET_SUPPRESS_COOKIE_PERSIST suppression, re-enabling the persistence of cookies. Any previously suppressed cookies will not
            become persistent. <c>Version:</c> Requires Internet Explorer 8.0 or later.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetService">
      <summary>Type of service to access in <see cref="M:Vanara.PInvoke.WinINet.InternetConnect(Vanara.PInvoke.WinINet.SafeInternetHandle,System.String,System.UInt16,System.String,System.String,Vanara.PInvoke.WinINet.InternetService,Vanara.PInvoke.WinINet.InternetApiFlags,System.IntPtr)" />.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetService.INTERNET_SERVICE_FTP">
      <summary>FTP service.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetService.INTERNET_SERVICE_GOPHER">
      <summary>Gopher service. <note type="note">Windows XP and Windows Server 2003 R2 and earlier only.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetService.INTERNET_SERVICE_HTTP">
      <summary>HTTP service.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetState">
      <summary>Values passed using the <see cref="T:Vanara.PInvoke.WinINet.INTERNET_STATUS_CALLBACK" /> delegate.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetState.INTERNET_STATE_CONNECTED">
      <summary>Connected state. Mutually exclusive with disconnected state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetState.INTERNET_STATE_DISCONNECTED">
      <summary>Disconnected state. No network connection could be established.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetState.INTERNET_STATE_DISCONNECTED_BY_USER">
      <summary>Disconnected by user request.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetState.INTERNET_STATE_IDLE">
      <summary>No network requests are being made by Windows Internet.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetState.INTERNET_STATE_BUSY">
      <summary>Network requests are being made by Windows Internet.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.InternetStatus">
      <summary>Values passed using the <see cref="T:Vanara.PInvoke.WinINet.INTERNET_STATUS_CALLBACK" /> delegate.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_CLOSING_CONNECTION">
      <summary>Closing the connection to the server. The lpvStatusInformation parameter is NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_CONNECTED_TO_SERVER">
      <summary>Successfully connected to the socket address (SOCKADDR) pointed to by lpvStatusInformation.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_CONNECTING_TO_SERVER">
      <summary>Connecting to the socket address (SOCKADDR) pointed to by lpvStatusInformation.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_CONNECTION_CLOSED">
      <summary>Successfully closed the connection to the server. The lpvStatusInformation parameter is NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_COOKIE_HISTORY">
      <summary>Retrieving content from the cache. Contains data about past cookie events for the URL such as if cookies were accepted, rejected, downgraded, or leashed. The lpvStatusInformation parameter is a pointer to an InternetCookieHistory structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_COOKIE_RECEIVED">
      <summary>Indicates the number of cookies that were accepted, rejected, downgraded (changed from persistent to session cookies), or leashed (will be sent out only in 1st party context). The lpvStatusInformation parameter is a DWORD with the number of cookies received.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_COOKIE_SENT">
      <summary>Indicates the number of cookies that were either sent or suppressed, when a request is sent. The lpvStatusInformation parameter is a DWORD with the number of cookies sent or suppressed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_CTL_RESPONSE_RECEIVED">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_DETECTING_PROXY">
      <summary>Notifies the client application that a proxy has been detected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_HANDLE_CLOSING">
      <summary>This handle value has been terminated. pvStatusInformation contains the address of the handle being closed. The lpvStatusInformation parameter contains the address of the handle being closed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_HANDLE_CREATED">
      <summary>Used by InternetConnect to indicate it has created the new handle. This lets the application call InternetCloseHandle from another thread, if the connect is taking too long. The lpvStatusInformation parameter contains the address of an HINTERNET handle.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_INTERMEDIATE_RESPONSE">
      <summary>Received an intermediate (100 level) status code message from the server.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_NAME_RESOLVED">
      <summary>Successfully found the IP address of the name contained in lpvStatusInformation. The lpvStatusInformation parameter points to a PCTSTR containing the host name.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_P3P_HEADER">
      <summary>The response has a P3P header in it.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_P3P_POLICYREF">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_PREFETCH">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_PRIVACY_IMPACTED">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_RECEIVING_RESPONSE">
      <summary>Waiting for the server to respond to a request. The lpvStatusInformation parameter is NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_REDIRECT">
      <summary>An HTTP request is about to automatically redirect the request. The lpvStatusInformation parameter points to the new URL. At this point, the application can read any data returned by the server with the redirect response and can query the response headers. It can also cancel the operation by closing the handle. This callback is not made if the original request specified INTERNET_FLAG_NO_AUTO_REDIRECT.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_REQUEST_COMPLETE">
      <summary>An asynchronous operation has been completed. The lpvStatusInformation parameter contains the address of an INTERNET_ASYNC_RESULT structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_REQUEST_SENT">
      <summary>Successfully sent the information request to the server. The lpvStatusInformation parameter points to a DWORD value that contains the number of bytes sent.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_RESOLVING_NAME">
      <summary>Looking up the IP address of the name contained in lpvStatusInformation. The lpvStatusInformation parameter points to a PCTSTR containing the host name.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_RESPONSE_RECEIVED">
      <summary>Successfully received a response from the server.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_SENDING_REQUEST">
      <summary>Sending the information request to the server. The lpvStatusInformation parameter is NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_STATE_CHANGE">
      <summary>Moved between a secure (HTTPS) and a nonsecure (HTTP) site. The user must be informed of this change; otherwise, the user is at risk of disclosing sensitive information involuntarily. When this flag is set, the lpvStatusInformation parameter points to a status DWORD that contains additional flags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.WinINet.InternetStatus.INTERNET_STATUS_USER_INPUT_REQUIRED">
      <summary>The request requires user input to be completed.</summary>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.SafeInternetConnectHandle">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.WinINet.SafeInternetConnectHandle</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.SafeInternetConnectHandle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.WinINet.SafeInternetConnectHandle" /> class.</summary>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.SafeInternetConnectHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.WinINet.SafeInternetConnectHandle" /> class.</summary>
      <param name="hInternet">An existing handle.</param>
      <param name="owns">if set to <c>true</c> owns and disposes of the handle.</param>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.SafeInternetConnectHandle.op_Implicit(System.IntPtr)~Vanara.PInvoke.WinINet.SafeInternetConnectHandle">
      <summary>Performs an implicit conversion from <see cref="T:System.IntPtr" /> to <see cref="T:Vanara.PInvoke.WinINet.SafeInternetHandle" />.</summary>
      <param name="hInternet">The HINTERNET handle.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="T:Vanara.PInvoke.WinINet.SafeInternetHandle">
      <summary>A <see cref="T:System.Runtime.InteropServices.SafeHandle" /> for HINTERNET.</summary>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.SafeInternetHandle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.WinINet.SafeInternetHandle" /> class.</summary>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.SafeInternetHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.WinINet.SafeInternetHandle" /> class.</summary>
      <param name="hInternet">An existing handle.</param>
      <param name="owns">if set to <c>true</c> owns and disposes of the handle.</param>
    </member>
    <member name="P:Vanara.PInvoke.WinINet.SafeInternetHandle.Null">
      <summary>Gets a NULL equivalent for an HINSTANCE.</summary>
    </member>
    <member name="M:Vanara.PInvoke.WinINet.SafeInternetHandle.op_Implicit(System.IntPtr)~Vanara.PInvoke.WinINet.SafeInternetHandle">
      <summary>Performs an implicit conversion from <see cref="T:System.IntPtr" /> to <see cref="T:Vanara.PInvoke.WinINet.SafeInternetHandle" />.</summary>
      <param name="hInternet">The HINTERNET handle.</param>
      <returns>The result of the conversion.</returns>
    </member>
  </members>
</doc>