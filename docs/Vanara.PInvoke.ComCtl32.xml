<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Vanara.PInvoke.ComCtl32</name>
  </assembly>
  <members>
    <member name="T:Vanara.PInvoke.ComCtl32">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BCCL_NOGLYPH">
      <summary>Used in the <see cref="T:Vanara.PInvoke.ComCtl32.BUTTON_IMAGELIST" /> structure himl member to indicate that no glyph should be displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CBEN_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.CBEN_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CBM_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.CBM_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CCM_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.CCM_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CLR_DEFAULT">
      <summary>The default color.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CLR_NONE">
      <summary>No color.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ECM_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.ECM_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.GET_IPADDRESS(System.UIntPtr)">
      <summary>Gets the IP address represented as a byte array from an unsigned pointer.</summary>
      <param name="ipAddress">The IP address.</param>
      <returns>The IP address represented as a byte array.</returns>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.I_CHILDRENAUTO">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.I_CHILDRENAUTO</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.I_CHILDRENCALLBACK">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.I_CHILDRENCALLBACK</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.I_COLUMNSCALLBACK">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.I_COLUMNSCALLBACK</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.I_GROUPIDCALLBACK">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.I_GROUPIDCALLBACK</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.I_GROUPIDNONE">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.I_GROUPIDNONE</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.I_IMAGECALLBACK">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.I_IMAGECALLBACK</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.I_IMAGENONE">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.I_IMAGENONE</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.ImageList_DrawEx(System.Runtime.InteropServices.HandleRef,System.Int32,Vanara.PInvoke.Gdi32.SafeDCHandle,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS)">
      <summary>
            Draws an image list item In the specified device context. The function uses the specified drawing style and blends the image with the specified color.
            </summary>
      <param name="himl">A handle to the image list</param>
      <param name="i">The index of the image to draw.</param>
      <param name="hdcDst">A handle to the destination device context.</param>
      <param name="x">The x-coordinate at which to draw within the specified device context.</param>
      <param name="y">The y-coordinate at which to draw within the specified device context.</param>
      <param name="dx">
            The width of the portion of the image to draw relative to the upper-left corner of the image. If dx and dy are zero, the function draws the entire
            image. The function does not ensure that the parameters are valid.
            </param>
      <param name="dy">
            The height of the portion of the image to draw, relative to the upper-left corner of the image. If dx and dy are zero, the function draws the entire
            image. The function does not ensure that the parameters are valid.
            </param>
      <param name="rgbBk">
            The background color of the image. This parameter can be an application-defined RGB value or one of the following
            values: <see cref="F:Vanara.PInvoke.ComCtl32.CLR_NONE" /> or <see cref="F:Vanara.PInvoke.ComCtl32.CLR_DEFAULT" />.
            </param>
      <param name="rgbFg">
            The foreground color of the image. This parameter can be an application-defined RGB value or one of the following
            values: <see cref="F:Vanara.PInvoke.ComCtl32.CLR_NONE" /> or <see cref="F:Vanara.PInvoke.ComCtl32.CLR_DEFAULT" />.
            </param>
      <param name="fStyle">
            The drawing style and, optionally, the overlay image. For information about specifying an overlay image index, see the comments section at the end of
            this topic. This parameter can be a combination of an overlay image index and one or more of the <see cref="T:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS" /> values.
            </param>
      <returns>Returns nonzero if successful, or zero otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.ImageList_GetIcon(System.IntPtr,System.Int32,Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS)">
      <summary>Creates an icon from an image and mask in an image list.</summary>
      <param name="himl">A handle to the image list.</param>
      <param name="i">An index of the image.</param>
      <param name="flags">A combination of flags that specify the drawing style.</param>
      <returns>Returns the handle to the icon if successful, or NULL otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.ImageList_SetOverlayImage(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32)">
      <summary>
            Adds a specified image to the list of images to be used as overlay masks. An image list can have up to four overlay masks In version 4.70 and earlier
            and up to 15 In version 4.71. The function assigns an overlay mask index to the specified image.
            </summary>
      <param name="himl">A handle to the image list</param>
      <param name="iImage">The zero-based index of an image In the himl image list. This index identifies the image to use as an overlay mask.</param>
      <param name="iOverlay">The one-based index of the overlay mask.</param>
      <returns>Returns nonzero if successful, or zero otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.InitCommonControlsEx(Vanara.PInvoke.ComCtl32.CommonControlClass)">
      <summary>
            Ensures that the common control DLL (Comctl32.dll) is loaded, and registers specific common control classes from the DLL. An application must call
            this function before creating a common control.
            </summary>
      <param name="ccc">The <see cref="T:Vanara.PInvoke.ComCtl32.CommonControlClass" /> value to assign to the dwICC field in <see cref="T:Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX" />.</param>
      <returns>Returns TRUE if successful, or FALSE otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.InitCommonControlsEx(Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX@)">
      <summary>
            Ensures that the common control DLL (Comctl32.dll) is loaded, and registers specific common control classes from the DLL. An application must call
            this function before creating a common control.
            </summary>
      <param name="icc">A pointer to an INITCOMMONCONTROLSEX structure that contains information specifying which control classes will be registered.</param>
      <returns>Returns TRUE if successful, or FALSE otherwise.</returns>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LPSTR_TEXTCALLBACK">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.LPSTR_TEXTCALLBACK</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.MAKEIPADDRESS(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Packs four byte-values into a single LPARAM suitable for use with the IPM_SETADDRESS message.</summary>
      <param name="b0">The field 0 address.</param>
      <param name="b1">The field 1 address.</param>
      <param name="b2">The field 2 address.</param>
      <param name="b3">The field 3 address.</param>
      <returns>Returns an LPARAM value that contains the address.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.MAKEIPADDRESS(System.Byte[])">
      <summary>Packs four byte-values into a single LPARAM suitable for use with the IPM_SETADDRESS message.</summary>
      <param name="bytes">The bytes ordered 0-3.</param>
      <returns>Returns an LPARAM value that contains the address.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.MAKEIPRANGE(System.Byte,System.Byte)">
      <summary>Packs two byte-values into a single LPARAM suitable for use with the IPM_SETRANGE message.</summary>
      <param name="low">The lower limit of the range.</param>
      <param name="high">The upper limit of the range.</param>
      <returns>Returns an LPARAM value that contains the range.</returns>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NM_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.NM_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.PropertySheet(Vanara.PInvoke.ComCtl32.PROPSHEETHEADER@)">
      <summary>
            Creates a property sheet and adds the pages defined in the specified property sheet header structure.
            </summary>
      <param name="psh">
            Pointer to a <see cref="T:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER" /> structure that defines the frame and pages of a property
            sheet.
            </param>
      <returns>For modal property sheets, the return value is as follows:
            <list type="table"><item><term>&gt;=1</term><term>Changes were saved by the user.</term></item><item><term>0</term><term>No changes were saved by the user.</term></item><item><term>-1</term><term>An error occurred.</term></item></list><para>For modeless property sheets, the return value is the property sheet's window handle.</para><para>The following return values have a special meaning.</para><list type="table"><listheader><term>Return code</term><term>Description</term></listheader><item><term>ID_PSREBOOTSYSTEM</term><description>A page sent the PSM_REBOOTSYSTEM message to the property sheet. The computer must be restarted for the user's changes to take effect.</description></item><item><term>ID_PSRESTARTWINDOWS</term><description>A page sent the PSM_RESTARTWINDOWS message to the property sheet.Windows must be restarted for the user's changes to take effect.</description></item></list></returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ButtonMessage,System.Int32,Vanara.PInvoke.ComCtl32.BUTTON_IMAGELIST@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return
            until the window procedure has processed the message.
            </summary>
      <param name="hWnd">
            A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to
            all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not
            sent to child windows.
            </param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="imageList">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ButtonMessage,System.Int32,Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return
            until the window procedure has processed the message.
            </summary>
      <param name="hWnd">
            A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to
            all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not
            sent to child windows.
            </param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="splitInfo">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ComboBoxMessage,System.Int32,Vanara.PInvoke.ComCtl32.COMBOBOXINFO@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return
            until the window procedure has processed the message.
            </summary>
      <param name="hWnd">
            A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to
            all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not
            sent to child windows.
            </param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="item">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.EditMessage,System.Int32,Vanara.PInvoke.ComCtl32.EDITBALLOONTIP@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="balloonTip">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.EditMessage,System.Int32,Vanara.PInvoke.ComCtl32.TOOLINFO@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="toolInfo">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.EditMessage,System.Int32,Vanara.PInvoke.ComCtl32.TTGETTITLE@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="title">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.EditMessage,System.Int32,Vanara.PInvoke.ComCtl32.TTHITTESTINFO@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="hitTestInfo">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDHITTESTINFO)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDHITTESTINFO)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDHITTESTINFO)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDHITTESTINFO)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDHITTESTINFO)</parameter>
          </include>
        </markup>
      </param>
      <param name="hittest">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hittest</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDHITTESTINFO)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDHITTESTINFO)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDITEM)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDITEM)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDITEM)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDITEM)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDITEM)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDITEM)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDITEM)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDLAYOUT)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDLAYOUT)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDLAYOUT)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDLAYOUT)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDLAYOUT)</parameter>
          </include>
        </markup>
      </param>
      <param name="layout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>layout</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDLAYOUT)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.HeaderMessage,System.Int32,Vanara.PInvoke.ComCtl32.HDLAYOUT)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Drawing.Point@,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Drawing.Point@,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Drawing.Point@,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Drawing.Point@,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Drawing.Point@,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <param name="insertMark">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>insertMark</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Drawing.Point@,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Drawing.Point@,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVBKIMAGE)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVBKIMAGE)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVBKIMAGE)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVBKIMAGE)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVBKIMAGE)</parameter>
          </include>
        </markup>
      </param>
      <param name="bkImage">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bkImage</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVBKIMAGE)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVBKIMAGE)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVCOLUMN)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVCOLUMN)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVCOLUMN)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVCOLUMN)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVCOLUMN)</parameter>
          </include>
        </markup>
      </param>
      <param name="column">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>column</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVCOLUMN)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVCOLUMN)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVFINDINFO@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVFINDINFO@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVFINDINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVFINDINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVFINDINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="findInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>findInfo</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVFINDINFO@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVFINDINFO@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUP)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUP)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUP)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUP)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUP)</parameter>
          </include>
        </markup>
      </param>
      <param name="group">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>group</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUP)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUP)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUPMETRICS@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUPMETRICS@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUPMETRICS@)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUPMETRICS@)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUPMETRICS@)</parameter>
          </include>
        </markup>
      </param>
      <param name="metrics">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metrics</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUPMETRICS@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVGROUPMETRICS@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVHITTESTINFO@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVHITTESTINFO@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVHITTESTINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVHITTESTINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVHITTESTINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="hitTestInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hitTestInfo</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVHITTESTINFO@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVHITTESTINFO@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <param name="insertMark">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>insertMark</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVINSERTMARK@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVITEM)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVITEM)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVITEM)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVITEM)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVITEM)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVITEM)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVITEM)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO@)</parameter>
          </include>
        </markup>
      </param>
      <param name="tileViewInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tileViewInfo</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.ListViewImageList,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.ListViewImageList,System.IntPtr)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.ListViewImageList,System.IntPtr)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.ListViewImageList,System.IntPtr)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.ListViewImageList,System.IntPtr)</parameter>
          </include>
        </markup>
      </param>
      <param name="hImageList">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hImageList</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.ListViewImageList,System.IntPtr)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.ListViewImageList,System.IntPtr)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.LVITEMINDEX@,System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.LVITEMINDEX@,System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="hWnd">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hWnd</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.LVITEMINDEX@,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.LVITEMINDEX@,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="wParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.LVITEMINDEX@,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="lParam">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lParam</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.LVITEMINDEX@,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ListViewMessage,Vanara.PInvoke.ComCtl32.LVITEMINDEX@,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.ProgressMessage,System.Boolean,Vanara.PInvoke.ComCtl32.PBRANGE@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="progressRange">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.TabControlMessage,System.Int32,Vanara.PInvoke.ComCtl32.TCHITTESTINFO@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="item">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.TabControlMessage,System.Int32,Vanara.PInvoke.ComCtl32.TCITEM)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="item">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.TreeViewMessage,System.Boolean,Vanara.PInvoke.ComCtl32.TVHITTESTINFO@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="hitTestInfo">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.TreeViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="item">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.TreeViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.TVINSERTSTRUCT@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="item">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.TreeViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.TVITEMEX@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="item">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.SendMessage(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.ComCtl32.TreeViewMessage,System.Int32,Vanara.PInvoke.ComCtl32.TVSORTCB@)">
      <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
      <param name="hWnd">A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.</param>
      <param name="Msg">The message to be sent.</param>
      <param name="wParam">Additional message-specific information.</param>
      <param name="sortInfo">Additional message-specific information.</param>
      <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TaskDialog(System.Runtime.InteropServices.HandleRef,Vanara.PInvoke.Kernel32.SafeLibraryHandle,System.String,System.String,System.String,Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS,System.IntPtr,System.Int32@)">
      <summary>
            The TaskDialog function creates, displays, and operates a task dialog. The task dialog contains application-defined message text and title, icons, and any combination of predefined push buttons. This function does not support the registration of a callback function to receive notifications.
            </summary>
      <param name="hwndParent">Handle to the owner window of the task dialog to be created. If this parameter is NULL, the task dialog has no owner window.</param>
      <param name="hInstance">Handle to the module that contains the icon resource identified by the pszIcon member, and the string resources identified by the pszWindowTitle and pszMainInstruction members. If this parameter is NULL, pszIcon must be NULL or a pointer to a null-terminated, Unicode string that contains a system resource identifier, for example, TD_ERROR_ICON.</param>
      <param name="pszWindowTitle">Pointer to the string to be used for the task dialog title. This parameter is a null-terminated, Unicode string that contains either text, or an integer resource identifier passed through the MAKEINTRESOURCE macro. If this parameter is NULL, the filename of the executable program is used.</param>
      <param name="pszMainInstruction">Pointer to the string to be used for the main instruction. This parameter is a null-terminated, Unicode string that contains either text, or an integer resource identifier passed through the MAKEINTRESOURCE macro. This parameter can be NULL if no main instruction is wanted.</param>
      <param name="pszContent">Pointer to a string used for additional text that appears below the main instruction, in a smaller font. This parameter is a null-terminated, Unicode string that contains either text, or an integer resource identifier passed through the MAKEINTRESOURCE macro. Can be NULL if no additional text is wanted.</param>
      <param name="dwCommonButtons">Specifies the push buttons displayed in the dialog box. This parameter may be a combination of flags from the following group.</param>
      <param name="pszIcon">Pointer to a string that identifies the icon to display in the task dialog. This parameter must be an integer resource identifier passed to the MAKEINTRESOURCE macro or one of the following predefined values. If this parameter is NULL, no icon will be displayed. If the hInstance parameter is NULL and one of the predefined values is not used, the TaskDialog function fails.</param>
      <param name="pnButton">When this function returns, contains a pointer to an integer location that receives one of the standard button result values.</param>
      <returns>This function can return one of these values.
            <list type="table"><listheader><term>Return code</term><term>Description</term></listheader><item><term>S_OK</term><term>The operation completed successfully.</term></item><item><term>E_OUTOFMEMORY</term><term>There is insufficient memory to complete the operation.</term></item><item><term>E_INVALIDARG</term><term>One or more arguments are not valid.</term></item><item><term>E_FAIL</term><term>The operation failed.</term></item></list></returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TaskDialogIndirect(Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG@,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>The TaskDialogIndirect function creates, displays, and operates a task dialog. The task dialog contains application-defined icons, messages, title, verification check box, command links, push buttons, and radio buttons. This function can register a callback function to receive notification messages.</summary>
      <param name="pTaskConfig">Pointer to a TASKDIALOGCONFIG structure that contains information used to display the task dialog.</param>
      <param name="pnButton">Address of a variable that receives one of the button IDs specified in the pButtons member of the pTaskConfig parameter or a standard button ID value.</param>
      <param name="pnRadioButton">Address of a variable that receives one of the button IDs specified in the pRadioButtons member of the pTaskConfig parameter. If this parameter is NULL, no value is returned.</param>
      <param name="pfVerificationFlagChecked">Address of a variable that receives a value indicating if the verification checkbox was checked when the dialog was dismissed.</param>
      <returns>This function can return one of these values.
            <list type="table"><listheader><term>Return code</term><term>Description</term></listheader><item><term>S_OK</term><term>The operation completed successfully.</term></item><item><term>E_OUTOFMEMORY</term><term>There is insufficient memory to complete the operation.</term></item><item><term>E_INVALIDARG</term><term>One or more arguments are not valid.</term></item><item><term>E_FAIL</term><term>The operation failed.</term></item></list></returns>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCM_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.TCM_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCN_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.TCN_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTN_FIRST">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.TTN_FIRST</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVCDRF_NOIMAGES">
      <summary>TreeView's custom draw return meaning don't draw images.  valid on CDRF_NOTIFYITEMPREPAINT</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.WC_COMBOBOXEX">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Vanara.PInvoke.ComCtl32.WC_COMBOBOXEX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.WC_IPADDRESS">
      <summary>Creates IP address controls. These controls are similar to an edit control, but they enable you to enter a numeric address in Internet protocol (IP) format.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.AsyncDrawRetFlags">
      <summary>Action that the sender (the tree-view control) should execute on return.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.AsyncDrawRetFlags.ADRF_DRAWSYNC">
      <summary>Proceed to draw the image anyway, that is, synchronously extract the image and paint. Assuming the control is on the UI thread, use of this flag implies low priority UI performance, since extraction times may vary and the UI could be unresponsive for an extended period of time during extraction.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.AsyncDrawRetFlags.ADRF_DRAWNOTHING">
      <summary>Do not draw an image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.AsyncDrawRetFlags.ADRF_DRAWFALLBACK">
      <summary>Draw fallback text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.AsyncDrawRetFlags.ADRF_DRAWIMAGE">
      <summary>Draw the image specified by iRetImageIndex.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.BUTTON_IMAGELIST">
      <summary>Contains information about an image list that is used with a button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BUTTON_IMAGELIST.himl">
      <summary>
            A handle to the image list. The provider retains ownership of the image list and is ultimately responsible for its disposal. Under Windows Vista,
            you can pass BCCL_NOGLYPH in this parameter to indicate that no glyph should be displayed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BUTTON_IMAGELIST.margin">
      <summary>A RECT that specifies the margin around the icon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BUTTON_IMAGELIST.uAlign">
      <summary>A UINT that specifies the alignment to use.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO">
      <summary>
            Contains information that defines a split button (BS_SPLITBUTTON and BS_DEFSPLITBUTTON styles). Used with the BCM_GETSPLITINFO and BCM_SETSPLITINFO messages.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO.#ctor(System.Runtime.InteropServices.HandleRef)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO" /> struct and sets an ImageList</summary>
      <param name="hImageList">The h image list.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO.#ctor(Vanara.PInvoke.ComCtl32.SplitButtonInfoStyle)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO" /> struct and sets the uSplitStyle value.</summary>
      <param name="buttonInfoStyle">The style.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO.himlGlyph">
      <summary>A handle to the image list. The provider retains ownership of the image list and is ultimately responsible for its disposal.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO.mask">
      <summary>A set of flags that specify which members of this structure contain data to be set or which members are being requested.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO.size">
      <summary>A SIZE structure that specifies the size of the glyph in himlGlyph.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO.uSplitButtonInfoStyle">
      <summary>The split button style.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ButtonImageListAlign">
      <summary>Used by the <see cref="F:Vanara.PInvoke.ComCtl32.BUTTON_IMAGELIST.uAlign" /> member to specify alignment.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonImageListAlign.BUTTON_IMAGELIST_ALIGN_LEFT">
      <summary>Align the image with the left margin.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonImageListAlign.BUTTON_IMAGELIST_ALIGN_RIGHT">
      <summary>Align the image with the right margin.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonImageListAlign.BUTTON_IMAGELIST_ALIGN_TOP">
      <summary>Align the image with the top margin.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonImageListAlign.BUTTON_IMAGELIST_ALIGN_BOTTOM">
      <summary>Align the image with the bottom margin.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonImageListAlign.BUTTON_IMAGELIST_ALIGN_CENTER">
      <summary>Center the image.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ButtonMessage">
      <summary>Message identifiers used with the SendMessage function.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_GETCHECK">
      <summary>Gets the check state of a radio button or check box. Return value is one of the <see cref="T:Vanara.PInvoke.ComCtl32.ButtonStateFlags" /> values.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_SETCHECK">
      <summary>Sets the check state of a radio button or check box. wParam is one of the <see cref="T:Vanara.PInvoke.ComCtl32.ButtonStateFlags" /> values.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_GETSTATE">
      <summary>Retrieves the state of a button or check box. Return value is one of the <see cref="T:Vanara.PInvoke.ComCtl32.ButtonStateFlags" /> values.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_SETSTATE">
      <summary>
            Sets the highlight state of a button. The highlight state indicates whether the button is highlighted as if the user had pushed it.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_SETSTYLE">
      <summary>Sets the style of a button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_CLICK">
      <summary>
            Simulates the user clicking a button. This message causes the button to receive the WM_LBUTTONDOWN and WM_LBUTTONUP messages, and the button's
            parent window to receive a BN_CLICKED notification code.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_GETIMAGE">
      <summary>Retrieves a handle to the image (icon or bitmap) associated with the button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_SETIMAGE">
      <summary>Associates a new image (icon or bitmap) with the button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BM_SETDONTCLICK">
      <summary>Sets a flag on a radio button that controls the generation of BN_CLICKED messages when the button receives focus.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_GETIDEALSIZE">
      <summary>Gets the size of the button that best fits its text and image, if an image list is present.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_SETIMAGELIST">
      <summary>Assigns an image list to a button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_GETIMAGELIST">
      <summary>Gets the BUTTON_IMAGELIST structure that describes the image list assigned to a button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_SETTEXTMARGIN">
      <summary>The BCM_SETTEXTMARGIN message sets the margins for drawing text in a button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_GETTEXTMARGIN">
      <summary>Gets the margins used to draw text in a button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_SETDROPDOWNSTATE">
      <summary>Sets the drop down state for a button with style TBSTYLE_DROPDOWN.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_SETSPLITINFO">
      <summary>Sets information for a split button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_GETSPLITINFO">
      <summary>Gets information for a split button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_SETNOTE">
      <summary>Sets the text of the note associated with a command link button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_GETNOTE">
      <summary>Gets the text of the note associated with a command link button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_GETNOTELENGTH">
      <summary>Gets the length of the note text that may be displayed in the description for a command link button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonMessage.BCM_SETSHIELD">
      <summary>Sets the elevation required state for a specified button or command link to display an elevated icon.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ButtonNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ButtonNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonNotification.NM_GETCUSTOMSPLITRECT">
      <summary>Sent by a button control to its parent to get measurements for the two rectangles of the split button. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMCUSTOMSPLITRECTINFO to receive bounding rectangles information. The NMCUSTOMSPLITRECTINFO structure is sent with the notification code as a request for the parent to provide measurements for the rectangles of the split button.</description></item><item><term>Return value</term><description>Return CDRF_SKIPDEFAULT to tell the button control to use the values returned in the NMCUSTOMSPLITRECTINFO structure; otherwise, return CDRF_DODEFAULT.</description></item></list></summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ButtonStateFlags">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ButtonStateFlags</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonStateFlags.BST_UNCHECKED">
      <summary>No special state. Equivalent to zero.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonStateFlags.BST_CHECKED">
      <summary>The button is checked.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonStateFlags.BST_INDETERMINATE">
      <summary>The state of the button is indeterminate. Applies only if the button has the BS_3STATE or BS_AUTO3STATE style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonStateFlags.BST_PUSHED">
      <summary>The button is being shown in the pushed state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonStateFlags.BST_FOCUS">
      <summary>The button has the keyboard focus.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonStateFlags.BST_HOT">
      <summary>The button is hot; that is, the mouse is hovering over it.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ButtonStateFlags.BST_DROPDOWNPUSHED">
      <summary>
        <c>Windows Vista.</c> The button is in the drop-down state. Applies only if the button has the TBSTYLE_DROPDOWN style.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ButtonStyle">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ButtonStyle</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.CBEN_ENDEDIT_FLAG">
      <summary>A value that specifies the action that generated the CBEN_ENDEDIT notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CBEN_ENDEDIT_FLAG.CBENF_KILLFOCUS">
      <summary>The edit box lost the keyboard focus.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CBEN_ENDEDIT_FLAG.CBENF_RETURN">
      <summary>The user completed the edit operation by pressing ENTER.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CBEN_ENDEDIT_FLAG.CBENF_ESCAPE">
      <summary>The user pressed ESC.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CBEN_ENDEDIT_FLAG.CBENF_DROPDOWN">
      <summary>The user activated the drop-down list.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.COLORSCHEME">
      <summary>Contains information for the drawing of buttons in a toolbar or rebar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COLORSCHEME.clrBtnHighlight">
      <summary>The COLORREF value that represents the highlight color of the buttons. Use CLR_DEFAULT for the default highlight color.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COLORSCHEME.clrBtnShadow">
      <summary>The COLORREF value that represents the shadow color of the buttons. Use CLR_DEFAULT for the default shadow color.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COLORSCHEME.dwSize">
      <summary>The size of this structure, in bytes.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM">
      <summary>Contains information about an item in a ComboBoxEx control.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM" /> class.</summary>
      <param name="textBufferSize">Size of the text buffer. If this value is 0, no buffer is created.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM" /> class.</summary>
      <param name="text">The text.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.cchTextMax">
      <summary>The length of pszText, in TCHARs. If text information is being set, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.iImage">
      <summary>
            The zero-based index of an image within the image list. The specified image will be displayed for the item when it is not selected. If this
            member is set to I_IMAGECALLBACK, the control will request the information by using CBEN_GETDISPINFO notification codes.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.iIndent">
      <summary>
            The number of indent spaces to display for the item. Each indentation equals 10 pixels. If this member is set to I_INDENTCALLBACK, the control
            will request the information by using CBEN_GETDISPINFO notification codes.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.iItem">
      <summary>The zero-based index of the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.iOverlay">
      <summary>
            The one-based index of an overlay image within the image list. If this member is set to I_IMAGECALLBACK, the control will request the information
            by using CBEN_GETDISPINFO notification codes.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.iSelectedImage">
      <summary>
            The zero-based index of an image within the image list. The specified image will be displayed for the item when it is selected. If this member is
            set to I_IMAGECALLBACK, the control will request the information by using CBEN_GETDISPINFO notification codes.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.lParam">
      <summary>A value specific to the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.mask">
      <summary>
            A set of bit flags that specify attributes of this structure or of an operation that is using this structure. The flags specify members that are
            valid or must be filled in.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.pszText">
      <summary>
            A pointer to a character buffer that contains or receives the item's text. If text information is being retrieved, this member must be set to the
            address of a character buffer that will receive the text. The size of this buffer must also be indicated in cchTextMax. If this member is set to
            LPSTR_TEXTCALLBACK, the control will request the information by using the CBEN_GETDISPINFO notification codes.
            </summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.Text">
      <summary>Gets or sets the item's text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.COMBOBOXEXITEM.UseTextCallback">
      <summary>Gets or sets a value indicating whether to use a text callback method.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask">
      <summary>
            A set of bit flags that specify attributes of COMBOBOXEXITEM or of an operation that is using this structure. The flags specify members that are
            valid or must be filled in.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask.CBEIF_TEXT">
      <summary>The pszText member is valid or must be filled in.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask.CBEIF_IMAGE">
      <summary>The iImage member is valid or must be filled in.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask.CBEIF_SELECTEDIMAGE">
      <summary>The iSelectedImage member is valid or must be filled in.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask.CBEIF_OVERLAY">
      <summary>The iOverlay member is valid or must be filled in.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask.CBEIF_INDENT">
      <summary>The iIndent member is valid or must be filled in.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask.CBEIF_LPARAM">
      <summary>The lParam member is valid or must be filled in.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExItemMask.CBEIF_DI_SETITEM">
      <summary>
            Set this flag when processing CBEN_GETDISPINFO; the ComboBoxEx control will retain the supplied information and will not request it again.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ComboBoxExStyle">
      <summary>Support the extended styles that are listed in this section as well as most standard combo box control styles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExStyle.CBES_EX_NOEDITIMAGE">
      <summary>The edit box and the dropdown list will not display item images.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExStyle.CBES_EX_NOEDITIMAGEINDENT">
      <summary>The edit box and the dropdown list will not display item images.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExStyle.CBES_EX_PATHWORDBREAKPROC">
      <summary>
            Windows NT only. The edit box will use the slash (/), backslash (\), and period (.) characters as word delimiters. This makes keyboard shortcuts
            for word-by-word cursor movement effective in path names and URLs.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExStyle.CBES_EX_NOSIZELIMIT">
      <summary>
            Allows the ComboBoxEx control to be vertically sized smaller than its contained combo box control. If the ComboBoxEx is sized smaller than the
            combo box, the combo box will be clipped.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExStyle.CBES_EX_CASESENSITIVE">
      <summary>
            BSTR searches in the list will be case sensitive. This includes searches as a result of text being typed in the edit box and the
            CB_FINDSTRINGEXACT message.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxExStyle.CBES_EX_TEXTENDELLIPSIS">
      <summary>
            Windows Vista and later. Causes items in the drop-down list and the edit box (when the edit box is read only) to be truncated with an ellipsis
            ("...") rather than just clipped by the edge of the control. This is useful when the control needs to be set to a fixed width, yet the entries in
            the list may be long.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.COMBOBOXINFO">
      <summary>Contains combo box status information.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.ButtonRectangle">
      <summary>Gets the button rectangle.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.buttonState">
      <summary>The combo box button state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.cbSize">
      <summary>The size, in bytes, of the structure. The calling application must set this to sizeof(COMBOBOXINFO).</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.FromHandle(System.Runtime.InteropServices.HandleRef)">
      <summary>Creates an instance of the <see cref="T:Vanara.PInvoke.ComCtl32.COMBOBOXINFO" /> structure from a handle and retrieves its values.</summary>
      <param name="hComboBox">The handle to a ComboBox.</param>
      <returns>A <see cref="T:Vanara.PInvoke.ComCtl32.COMBOBOXINFO" /> structure with values from the supplied handle.</returns>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.hwndCombo">
      <summary>A handle to the combo box.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.hwndEdit">
      <summary>A handle to the edit box.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.hwndList">
      <summary>A handle to the drop-down list.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.Invisible">
      <summary>Gets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.COMBOBOXINFO" /> is invisible.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.ItemRectangle">
      <summary>Gets the item rectangle.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.Pressed">
      <summary>Gets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.COMBOBOXINFO" /> is pressed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.rcButton">
      <summary>A RECT structure that specifies the coordinates of the button that contains the drop-down arrow.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.COMBOBOXINFO.rcItem">
      <summary>A RECT structure that specifies the coordinates of the edit box.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ComboBoxInfoState">
      <summary>Contains combo box status information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxInfoState.None">
      <summary>The button exists and is not pressed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxInfoState.STATE_SYSTEM_INVISIBLE">
      <summary>There is no button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxInfoState.STATE_SYSTEM_PRESSED">
      <summary>The button is pressed.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ComboBoxMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ComboBoxMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ComboBoxNotification">
      <summary>Combo Box Notification Codes</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_ERRSPACE">
      <summary>
            Sent when a combo box cannot allocate enough memory to meet a specific request. The parent window of the combo box receives this notification
            code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_SELCHANGE">
      <summary>
            Sent when the user changes the current selection in the list box of a combo box. The user can change the selection by clicking in the list box or
            by using the arrow keys. The parent window of the combo box receives this notification code in the form of a WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_DBLCLK">
      <summary>
            Sent when the user double-clicks a string in the list box of a combo box. The parent window of the combo box receives this notification code
            through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_SETFOCUS">
      <summary>
            Sent when a combo box receives the keyboard focus. The parent window of the combo box receives this notification code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_KILLFOCUS">
      <summary>
            Sent when a combo box loses the keyboard focus. The parent window of the combo box receives this notification code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_EDITCHANGE">
      <summary>
            Sent after the user has taken an action that may have altered the text in the edit control portion of a combo box. Unlike the CBN_EDITUPDATE
            notification code, this notification code is sent after the system updates the screen. The parent window of the combo box receives this
            notification code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_EDITUPDATE">
      <summary>
            Sent when the edit control portion of a combo box is about to display altered text. This notification code is sent after the control has
            formatted the text, but before it displays the text. The parent window of the combo box receives this notification code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_DROPDOWN">
      <summary>
            Sent when the list box of a combo box is about to be made visible. The parent window of the combo box receives this notification code through the
            WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_CLOSEUP">
      <summary>
            Sent when the list box of a combo box has been closed. The parent window of the combo box receives this notification code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_SELENDOK">
      <summary>
            Sent when the user selects a list item, or selects an item and then closes the list. It indicates that the user's selection is to be processed.
            The parent window of the combo box receives this notification code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBN_SELENDCANCEL">
      <summary>
            Sent when the user selects an item, but then selects another control or closes the dialog box. It indicates the user's initial selection is to be
            ignored. The parent window of the combo box receives this notification code through the WM_COMMAND message.
            <list><item><term>wParam</term><description>The LOWORD contains the control identifier of the combo box. The HIWORD specifies the notification code.</description></item><item><term>lParam</term><description>Handle to the combo box.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBEN_INSERTITEM">
      <summary>
            Sent when a new item has been inserted in the control. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>
            A pointer to an <see cref="T:Vanara.PInvoke.ComCtl32.NMCOMBOBOXEX" /> structure containing information about the notification code and the item that was inserted.
            </description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBEN_DELETEITEM">
      <summary>
            Sent when an item has been deleted. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>
            A pointer to an <see cref="T:Vanara.PInvoke.ComCtl32.NMCOMBOBOXEX" /> structure that contains information about the notification code and the deleted item.
            </description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBEN_BEGINEDIT">
      <summary>
            Sent when the user activates the drop-down list or clicks in the control's edit box. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an <see cref="T:Vanara.PInvoke.User32.NMHDR" /> structure that contains information about the notification code.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBEN_ENDEDITA">
      <summary>
            Sent when the user has concluded an operation within the edit box or has selected an item from the control's drop-down list. This notification
            code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an <see cref="T:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT" /> structure that contains information about how the user concluded the edit operation.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBEN_ENDEDITW">
      <summary>
            Sent when the user has concluded an operation within the edit box or has selected an item from the control's drop-down list. This notification
            code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an <see cref="T:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT" /> structure that contains information about how the user concluded the edit operation.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBEN_GETDISPINFO">
      <summary>
            Sent to retrieve display information about a callback item. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an <see cref="T:Vanara.PInvoke.ComCtl32.NMCOMBOBOXEX" /> structure that contains information about the notification code.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxNotification.CBEN_DRAGBEGIN">
      <summary>
            Sent when the user begins dragging the image of the item displayed in the edit portion of the control. This notification code is sent in the form
            of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to a <see cref="T:Vanara.PInvoke.ComCtl32.NMCBEDRAGBEGIN" /> structure that contains information about the notification code.</description></item></list></summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ComboBoxStyle">
      <summary>
            To create a combo box using the CreateWindow or CreateWindowEx function, specify the COMBOBOX class, appropriate window style constants, and a
            combination of the following combo box styles.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_SIMPLE">
      <summary>Displays the list box at all times. The current selection in the list box is displayed in the edit control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_DROPDOWN">
      <summary>Similar to CBS_SIMPLE, except that the list box is not displayed unless the user selects an icon next to the edit control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_DROPDOWNLIST">
      <summary>
            Similar to CBS_DROPDOWN, except that the edit control is replaced by a static text item that displays the current selection in the list box.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_OWNERDRAWFIXED">
      <summary>
            Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are all the same height. The
            owner window receives a WM_MEASUREITEM message when the combo box is created and a WM_DRAWITEM message when a visual aspect of the combo box has changed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_OWNERDRAWVARIABLE">
      <summary>
            Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are variable in height. The
            owner window receives a WM_MEASUREITEM message for each item in the combo box when you create the combo box and a WM_DRAWITEM message when a
            visual aspect of the combo box has changed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_AUTOHSCROLL">
      <summary>
            Automatically scrolls the text in an edit control to the right when the user types a character at the end of the line. If this style is not set,
            only text that fits within the rectangular boundary is allowed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_OEMCONVERT">
      <summary>
            Converts text entered in the combo box edit control from the Windows character set to the OEM character set and then back to the Windows
            character set. This ensures proper character conversion when the application calls the CharToOem function to convert a Windows string in the
            combo box to OEM characters. This style is most useful for combo boxes that contain file names and applies only to combo boxes created with the
            CBS_SIMPLE or CBS_DROPDOWN style.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_SORT">
      <summary>Automatically sorts strings added to the list box.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_HASSTRINGS">
      <summary>
            Specifies that an owner-drawn combo box contains items consisting of strings. The combo box maintains the memory and address for the strings so
            the application can use the CB_GETLBTEXT message to retrieve the text for a particular item.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_NOINTEGRALHEIGHT">
      <summary>
            Specifies that the size of the combo box is exactly the size specified by the application when it created the combo box. Normally, the system
            sizes a combo box so that it does not display partial items.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_DISABLENOSCROLL">
      <summary>
            Shows a disabled vertical scroll bar in the list box when the box does not contain enough items to scroll. Without this style, the scroll bar is
            hidden when the list box does not contain enough items.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_UPPERCASE">
      <summary>Converts to uppercase all text in both the selection field and the list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ComboBoxStyle.CBS_LOWERCASE">
      <summary>Converts to lowercase all text in both the selection field and the list.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.CommonControlClass">
      <summary>
            The set of bit flags that indicate which common control classes will be loaded from the DLL when calling <see cref="M:Vanara.PInvoke.ComCtl32.InitCommonControlsEx(Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX@)" />.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_ANIMATE_CLASS">
      <summary>Load animate control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_BAR_CLASSES">
      <summary>Load toolbar, status bar, trackbar, and tooltip control classes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_COOL_CLASSES">
      <summary>Load rebar control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_DATE_CLASSES">
      <summary>Load date and time picker control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_HOTKEY_CLASS">
      <summary>Load hot key control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_INTERNET_CLASSES">
      <summary>Load IP address class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_LINK_CLASS">
      <summary>Load a hyperlink control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_LISTVIEW_CLASSES">
      <summary>Load list-view and header control classes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_NATIVEFNTCTL_CLASS">
      <summary>Load a native font control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_PAGESCROLLER_CLASS">
      <summary>Load pager control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_PROGRESS_CLASS">
      <summary>Load progress bar control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_STANDARD_CLASSES">
      <summary>
            Load one of the intrinsic User32 control classes. The user controls include button, edit, static, listbox, combobox, and scroll bar.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_TAB_CLASSES">
      <summary>Load tab and tooltip control classes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_TREEVIEW_CLASSES">
      <summary>Load tree-view and tooltip control classes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_UPDOWN_CLASS">
      <summary>Load up-down control class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_USEREX_CLASSES">
      <summary>Load ComboBoxEx class.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlClass.ICC_WIN95_CLASSES">
      <summary>
            Load animate control, header, hot key, list-view, progress bar, status bar, tab, tooltip, toolbar, trackbar, tree-view, and up-down control classes.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.CommonControlMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.CommonControlMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.CommonControlNotification">
      <summary>Notification codes for CommCtrl.h</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_OUTOFMEMORY">
      <summary>
            Notifies a control's parent window that the control could not complete an operation because there was not enough memory available. This
            notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_CLICK">
      <summary>Sent by a control when the user clicks with the left mouse button. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_DBLCLK">
      <summary>
            Sent by a control when the user double-clicks with the left mouse button. This notification code is sent in the form of a WM_NOTIFY message.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_RETURN">
      <summary>
            Notifies a control's parent window that the control has the input focus and that the user has pressed the ENTER key. This notification code is
            sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_RCLICK">
      <summary>Sent by a control when the user clicks with the right mouse button. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_RDBLCLK">
      <summary>
            Sent by a control when the user double-clicks with the right mouse button. This notification code is sent in the form of a WM_NOTIFY message.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_SETFOCUS">
      <summary>
            Notifies a control's parent window that the control has received the input focus. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_KILLFOCUS">
      <summary>
            Notifies a control's parent window that the control has lost the input focus. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_CUSTOMDRAW">
      <summary>
            Notifies a control's parent window about custom drawing operations. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>
            A pointer to a custom draw-related structure that contains information about the drawing operation. The following list specifies the controls and
            their associated structures.
            <list type="table"><listheader><term>Control</term><term>Custom Draw Structure</term></listheader><item><term>Rebar, trackbar, and header</term><term>NMCUSTOMDRAW</term></item><item><term>List view</term><term>NMLVCUSTOMDRAW</term></item><item><term>Tooltip</term><term>NMTTCUSTOMDRAW</term></item><item><term>Tree view</term><term>NMTVCUSTOMDRAW</term></item><item><term>Toolbar</term><term>NMTBCUSTOMDRAW</term></item></list></description></item></list><item><term>Return value</term><description>
            The value your application can return depends on the current drawing stage. The dwDrawStage member of the associated NMCUSTOMDRAW structure holds
            a value that specifies the drawing stage.
            </description></item></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_HOVER">
      <summary>
            Sent by a control when the mouse hovers over an item. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item><item><term>Return value</term><description>
            Unless otherwise specified, return zero to allow the control to process the hover normally, or nonzero to prevent the hover from being processed.
            </description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_NCHITTEST">
      <summary>
            Sent by a rebar control when the control receives a WM_NCHITTEST message. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>
            A pointer to a NMMOUSE structure that contains information about the notification code. The pt member contains the mouse coordinates of the hit
            test message.
            </description></item><item><term>Return value</term><description>
            Unless otherwise specified, return zero to allow the control to perform default processing of the hit test message, or return one of the HT*
            values documented under WM_NCHITTEST to override the default hit test processing.
            </description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_KEYDOWN">
      <summary>
            Sent by a control when the control has the keyboard focus and the user presses a key. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMKEY structure that contains additional information about the key that caused the notification code.</description></item><item><term>Return value</term><description>Return nonzero to prevent the control from processing the key, or zero otherwise.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_RELEASEDCAPTURE">
      <summary>
            Notifies a control's parent window that the control is releasing mouse capture. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_SETCURSOR">
      <summary>
            Notifies a control's parent window that the control is setting the cursor in response to a WM_SETCURSOR message. This notification code is sent
            in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMMOUSE structure that contains additional information about this notification.</description></item><item><term>Return value</term><description>Return zero to enable the control to set the cursor or nonzero to prevent the control from setting the cursor.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_CHAR">
      <summary>
            The NM_CHAR notification code is sent by a control when a character key is processed. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMCHAR structure that contains additional information about the character that caused the notification code.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_TOOLTIPSCREATED">
      <summary>
            Notifies a control's parent window that the control has created a tooltip control. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMTOOLTIPSCREATED structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_LDOWN">
      <summary>
            Notifies a control's parent window that the left mouse button has been pressed. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_RDOWN">
      <summary>This notification code is not supported.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_THEMECHANGED">
      <summary>
            Notifies a control's parent window that the theme has changed. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_FONTCHANGED">
      <summary>
            Sent by a list-view control when the control has changed a font. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMHDR structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_CUSTOMTEXT">
      <summary>
            Notifies a control's parent window about custom text operations. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMCUSTOMTEXT structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CommonControlNotification.NM_TVSTATEIMAGECHANGING">
      <summary>
            Sent by a tree-view control to its parent window that the state image is changing. This notification code is sent in the form of a WM_NOTIFY message.
            <list><item><term>lParam</term><description>A pointer to an NMTVSTATEIMAGECHANGING structure that contains additional information about this notification.</description></item></list></summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.CustomDrawItemState">
      <summary>The current item state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_SELECTED">
      <summary>The item is selected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_GRAYED">
      <summary>The item is grayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_DISABLED">
      <summary>The item is disabled.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_CHECKED">
      <summary>The item is in focus.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_FOCUS">
      <summary>The item is in focus.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_DEFAULT">
      <summary>The item is in its default state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_HOT">
      <summary>The item is currently under the pointer ("hot").</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_MARKED">
      <summary>
            The item is marked. The meaning of this is determined by the implementation. <note>This flag does not work correctly for owner-drawn list-view
            controls that have the LVS_SHOWSELALWAYS style. For these controls, you can determine whether an item is selected by using LVM_GETITEMSTATE (or
            ListView_GetItemState) and checking for the LVIS_SELECTED flag.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_INDETERMINATE">
      <summary>The item is in an indeterminate state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_SHOWKEYBOARDCUES">
      <summary>
            Version 6.0.The item is showing its keyboard cues. <note>Comctl32 version 6 is not redistributable. operating systems. To use Comctl32.dll
            version 6, specify it in the manifest. For more information on manifests, see Enabling Visual Styles.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_NEARHOT">
      <summary>
            The item is part of a control that is currently under the mouse pointer ("hot"), but the item is not "hot" itself. The meaning of this is
            determined by the implementation.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_OTHERSIDEHOT">
      <summary>
            The item is part of a splitbutton that is currently under the mouse pointer ("hot"), but the item is not "hot" itself. The meaning of this is
            determined by the implementation.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawItemState.CDIS_DROPHILITED">
      <summary>The item is currently the drop target of a drag-and-drop operation.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.CustomDrawResponse">
      <summary>These constants are used as return values by a control in response to an NM_CUSTOMDRAW notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_DODEFAULT">
      <summary>
            The control will draw itself. It will not send any additional NM_CUSTOMDRAW notification codes for this paint cycle. This occurs when the
            dwDrawStage of the NMCUSTOMDRAW structure equals CDDS_PREPAINT.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_NEWFONT">
      <summary>
            The application specified a new font for the item; the control will use the new font. For more information about changing fonts, see Changing
            fonts and colors. This occurs when the dwDrawStage of the NMCUSTOMDRAW structure equals CDDS_ITEMPREPAINT.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_SKIPDEFAULT">
      <summary>
            The application drew the item manually. The control will not draw the item. This occurs when the dwDrawStage of the NMCUSTOMDRAW structure equals CDDS_ITEMPREPAINT.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_DOERASE">
      <summary>Windows Vista and later. The control will draw the background.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_NOTIFYPOSTPAINT">
      <summary>
            The control will notify the parent after painting an item. This occurs when the dwDrawStage of the NMCUSTOMDRAW structure equals CDDS_PREPAINT.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_NOTIFYITEMDRAW">
      <summary>
            The control will notify the parent of any item-related drawing operations. It will send NM_CUSTOMDRAW notification codes before and after drawing
            items. This occurs when the dwDrawStage of the NMCUSTOMDRAW structure equals CDDS_PREPAINT.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_NOTIFYSUBITEMDRAW">
      <summary>
            Internet Explorer 4.0 and later. The control will notify the parent of any item-related drawing operations. It will send NM_CUSTOMDRAW
            notification codes before and after drawing items. This occurs when the dwDrawStage of the NMCUSTOMDRAW structure equals CDDS_PREPAINT. This flag
            is identical to CDRF_NOTIFYITEMDRAW and its use is context-dependent.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_NOTIFYPOSTERASE">
      <summary>
            The control will notify the parent after erasing an item. This occurs when the dwDrawStage of the NMCUSTOMDRAW structure equals CDDS_PREPAINT.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawResponse.CDRF_SKIPPOSTPAINT">
      <summary>Windows Vista and later. The control will not draw the focus rectangle.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.CustomDrawStage">
      <summary>The current drawing stage.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_PREPAINT">
      <summary>Before the painting cycle begins.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_POSTPAINT">
      <summary>After the painting cycle is complete.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_PREERASE">
      <summary>Before the erasing cycle begins.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_POSTERASE">
      <summary>After the erasing cycle is complete.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_ITEM">
      <summary>Indicates that the dwItemSpec, uItemState, and lItemlParam members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_ITEMPREPAINT">
      <summary>Before an item is drawn.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_ITEMPOSTPAINT">
      <summary>After an item has been drawn.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_ITEMPREERASE">
      <summary>Before an item is erased.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_ITEMPOSTERASE">
      <summary>After an item has been erased.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.CustomDrawStage.CDDS_SUBITEM">
      <summary>
            Flag combined with CDDS_ITEMPREPAINT or CDDS_ITEMPOSTPAINT if a subitem is being drawn. This will only be set if CDRF_NOTIFYITEMDRAW is returned
            from CDDS_PREPAINT.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.EDITBALLOONTIP">
      <summary>
            Contains information about a balloon tip associated with a button control.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.EDITBALLOONTIP.#ctor(System.String,System.String,Vanara.PInvoke.ComCtl32.ToolTipIcon)">
      <summary>
            Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.EDITBALLOONTIP" /> struct.
            </summary>
      <param name="title">The title.</param>
      <param name="text">The text.</param>
      <param name="icon">The icon.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.EDITBALLOONTIP.cbStruct">
      <summary>
            A DWORD that contains the size, in bytes, of the structure.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.EDITBALLOONTIP.pszText">
      <summary>
            A pointer to a Unicode string that contains the balloon tip text.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.EDITBALLOONTIP.pszTitle">
      <summary>
            A pointer to a Unicode string that contains the title of the balloon tip.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.EDITBALLOONTIP.ttiIcon">
      <summary>
            A value of type INT that specifies the type of icon to associate with the balloon tip.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.EditMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.EditMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.EditNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.EditNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HDHITTESTINFO">
      <summary>Contains information about a hit test. This structure is used with the HDM_HITTEST message and it supersedes the HD_HITTESTINFO structure.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDHITTESTINFO.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Vanara.PInvoke.ComCtl32.HDHITTESTINFO</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDHITTESTINFO.flags">
      <summary>
            The variable that receives information about the results of a hit test. Two of these values can be combined, such as when the position is above
            and to the left of the client area.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDHITTESTINFO.iItem">
      <summary>If the hit test is successful, contains the index of the item at the hit test point.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDHITTESTINFO.pt">
      <summary>A POINT structure that contains the point to be hit test, in client coordinates.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HDITEM">
      <summary>Contains information about an item in a header control. This structure supersedes the HD_ITEM structure.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDITEM.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.HDITEM" /> class.</summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDITEM.#ctor(Vanara.PInvoke.ComCtl32.HeaderItemMask)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.HDITEM" /> class.</summary>
      <param name="mask">The mask.</param>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Bitmap">
      <summary>Gets or sets the bitmap. Aligned to the <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.hbm" /> field.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.BitmapRightToLeft">
      <summary>Gets or sets a value indicating whether the bitmap is on the right.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.cchTextMax">
      <summary>
            The length of the item string, in TCHARs. If the text is being retrieved from the control, this member must contain the number of TCHARs at the
            address specified by pszText.
            </summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Checked">
      <summary>Gets or sets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.HDITEM" /> is checked.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.cxy">
      <summary>The width or height of the item.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDITEM.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Filter">
      <summary>Gets or sets the filter. This value must be a string, integer, DateTime or SYSTEMTIME.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.FixedWidth">
      <summary>Gets or sets a value indicating whether the header is fixed width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.fmt">
      <summary>Flags that specify the item's format.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Focused">
      <summary>Gets or sets a value indicating whether this header is focused.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Format">
      <summary>Gets or sets the header format.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.hbm">
      <summary>A handle to the item bitmap.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.iImage">
      <summary>
            The zero-based index of an image within the image list. The specified image will be displayed in the header item in addition to any image
            specified in the hbm field. If iImage is set to I_IMAGECALLBACK, the control requests text information for this item by using an HDN_GETDISPINFO
            notification code. To clear the image, set this value to I_IMAGENONE.
            </summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.ImageDisplay">
      <summary>Gets or sets the how the image is displayed.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.ImageIndex">
      <summary>Gets or sets the index of the image in the image list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.iOrder">
      <summary>
            The order in which the item appears within the header control, from left to right. That is, the value for the far left item is 0. The value for
            the next item to the right is 1, and so on.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.lParam">
      <summary>Application-defined item data.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.LParam">
      <summary>Gets or sets an application defined value.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.mask">
      <summary>Flags indicating which other structure members contain valid data or must be filled in.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Order">
      <summary>Gets or sets the order in which the item appears in the header.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.OwnerDrawn">
      <summary>Gets or sets a value indicating whether the header item is owner drawn.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.pszText">
      <summary>
            A pointer to an item string. If the text is being retrieved from the control, this member must be initialized to point to a character buffer. If
            this member is set to LPSTR_TEXTCALLBACK, the control will request text information for this item by sending an HDN_GETDISPINFO notification
            code. Note that although the header control allows a string of any length to be stored as item text, only the first 260 TCHARs are displayed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.pvFilter">
      <summary>
            The address of an application-defined data item. The data filter type is determined by setting the flag value of the member. Use the
            HDFT_ISSTRING flag to indicate a string and HDFT_ISNUMBER to indicate an integer. When the HDFT_ISSTRING flag is used pvFilter is a pointer to a
            HDTEXTFILTER structure.
            </summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.RightToLeft">
      <summary>Gets or sets a value indicating whether header text is displayed right to left.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.ShowCheckbox">
      <summary>Gets or sets a value indicating whether to show a checkbox.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.ShowSplitButton">
      <summary>Gets or sets a value indicating whether to show a split button.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.ShowText">
      <summary>Gets or sets a value indicating whether to show text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.state">
      <summary>The state.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Text">
      <summary>Gets or sets the text.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Text - A header control will only display the first 260 characters.</exception>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.TextAlignment">
      <summary>Gets or sets the text alignment.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDITEM.type">
      <summary>The type of filter specified by pvFilter.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.UseTextCallback">
      <summary>Gets or sets a value indicating whether this header requests a callback message to retrieve the text.
            <note>Setting this value to either true or false will remove any previously set value for the <see cref="P:Vanara.PInvoke.ComCtl32.HDITEM.Text" /> property or <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.pszText" /> field.</note></summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDITEM.Width">
      <summary>Gets or sets the width.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HDLAYOUT">
      <summary>
            Contains information used to set the size and position of a header control. HDLAYOUT is used with the HDM_LAYOUT message. This structure supersedes
            the HD_LAYOUT structure.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDLAYOUT.#ctor(Vanara.PInvoke.RECT)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.HDLAYOUT" /> class setting the prc member and allocating memory for the pwpos member.</summary>
      <param name="rc">The coordinates of the header.</param>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDLAYOUT.Coordinates">
      <summary>Gets or sets the coordinates.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDLAYOUT.Dispose">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.HDLAYOUT.Position">
      <summary>Gets the position.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDLAYOUT.prc">
      <summary>Structure that contains the coordinates of a rectangle that the header control will occupy.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDLAYOUT.pwpos">
      <summary>Structure that receives information about the appropriate size and position of the header control.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HDTEXTFILTER">
      <summary>Contains information about header control text filters.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDTEXTFILTER.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.HDTEXTFILTER" /> struct.</summary>
      <param name="length">The length.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDTEXTFILTER.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.HDTEXTFILTER" /> struct.</summary>
      <param name="filter">The filter.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDTEXTFILTER.cchTextMax">
      <summary>A value specifying the maximum size, in characters, for an edit control buffer.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HDTEXTFILTER.pszText">
      <summary>A pointer to the buffer containing the filter.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.HDTEXTFILTER.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag">
      <summary>The variable that receives information about the results of a hit test.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ABOVE">
      <summary>The point is above the header control's bounding rectangle.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_BELOW">
      <summary>The point is below the header control's bounding rectangle.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_NOWHERE">
      <summary>The point is inside the header control's bounding rectangle but is not over a header item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONDIVIDER">
      <summary>The point is on the divider between two header items.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONDIVOPEN">
      <summary>
            The point is on the divider of an item that has a width of zero. Dragging the divider reveals the item instead of resizing the item to the left
            of the divider.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONDROPDOWN">
      <summary>The point is within the split button of the item. The style HDF_SPLITBUTTON must be set on the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONFILTER">
      <summary>The point is over the filter area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONFILTERBUTTON">
      <summary>The point is on the filter button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONHEADER">
      <summary>The point is to the left of the header control's bounding rectangle.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONITEMSTATEICON">
      <summary>The point is within the state icon of the item. If style HDS_CHECKBOXES is specified, the point is within the checkbox of the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_ONOVERFLOW">
      <summary>The point is within the overflow button of the header control. The style HDS_OVERFLOW must be set on the header control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_TOLEFT">
      <summary>The point is to the left of the header control's bounding rectangle.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderHitTestFlag.HHT_TORIGHT">
      <summary>The point is to the right of the header control's bounding rectangle.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderItemFilterType">
      <summary>The type of filter specified by <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.pvFilter" />.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFilterType.HDFT_ISSTRING">
      <summary>String data.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFilterType.HDFT_ISNUMBER">
      <summary>Numerical data.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFilterType.HDFT_ISDATE">
      <summary>Date data. The pvFilter member is a pointer to a SYSTEMTIME structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFilterType.HDFT_HASNOVALUE">
      <summary>Ignore pvFilter.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderItemFormat">
      <summary>Flags that specify an <see cref="T:Vanara.PInvoke.ComCtl32.HDITEM" /> format.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_LEFT">
      <summary>The item's contents are left-aligned.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_RIGHT">
      <summary>The item's contents are right-aligned.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_CENTER">
      <summary>The item's contents are centered.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_JUSTIFYMASK">
      <summary>Isolate the bits corresponding to the three justification flags listed in the preceding table.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_RTLREADING">
      <summary>
            Typically, windows displays text left-to-right (LTR). Windows can be mirrored to display languages such as Hebrew or Arabic that read
            right-to-left (RTL). Usually, header text is read in the same direction as the text in its parent window. If HDF_RTLREADING is set, header text
            will read in the opposite direction from the text in the parent window.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_CHECKBOX">
      <summary>The item displays a checkbox. The flag is only valid when the HDS_CHECKBOXES style is first set on the header control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_CHECKED">
      <summary>The item displays a checked checkbox. The flag is only valid when HDF_CHECKBOX is also set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_FIXEDWIDTH">
      <summary>The width of the item cannot be modified by a user action to resize it.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_OWNERDRAW">
      <summary>The header control's owner draws the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_STRING">
      <summary>The item displays a string.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_BITMAP">
      <summary>The item displays a bitmap.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_BITMAP_ON_RIGHT">
      <summary>The bitmap appears to the right of text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_IMAGE">
      <summary>
            Display an image from an image list. Specify the image list by sending an HDM_SETIMAGELIST message. Specify the index of the image in the iImage
            member of this structure.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_SORTUP">
      <summary>
            Draws an up-arrow on this item. This is typically used to indicate that information in the current window is sorted on this column in ascending
            order. This flag cannot be combined with HDF_IMAGE or HDF_BITMAP.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_SORTDOWN">
      <summary>
            Draws a down-arrow on this item. This is typically used to indicate that information in the current window is sorted on this column in descending
            order. This flag cannot be combined with HDF_IMAGE or HDF_BITMAP.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemFormat.HDF_SPLITBUTTON">
      <summary>The item displays a split button. The HDN_DROPDOWN notification is sent when the split button is clicked.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderItemImageDisplay">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.HeaderItemImageDisplay</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderItemMask">
      <summary>Flags indicating which <see cref="T:Vanara.PInvoke.ComCtl32.HDITEM" /> structure members contain valid data or must be filled in.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_BITMAP">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.hbm" /> member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_DI_SETITEM">
      <summary>
            While handling the message HDM_GETITEM, the header control may not have all the values needed to complete the request. In this case, the control
            must call the application back for the values via the HDN_GETDISPINFO notification. If HDI_DI_SETITEM has been passed in the HDM_GETITEM message,
            the control will cache any values returned from HDN_GETDISPINFO (otherwise the values remain unset.)
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_FILTER">
      <summary>
            The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.type" /> and <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.pvFilter" /> members are valid. This is used to filter out the values specified in the type member.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_FORMAT">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.fmt" /> member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_HEIGHT">
      <summary>The same as HDI_WIDTH.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_IMAGE">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.iImage" /> member is valid and specifies the image to be displayed with the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_LPARAM">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.lParam" /> member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_ORDER">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.iOrder" /> member is valid and specifies the item's order value.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_STATE">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.state" /> member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_TEXT">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.pszText" /> and <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.cchTextMax" /> members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_WIDTH">
      <summary>The <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.cxy" /> member is valid and specifies the item's width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemMask.HDI_ALL">
      <summary>All <see cref="T:Vanara.PInvoke.ComCtl32.HDITEM" /> members are valid.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderItemState">
      <summary>Valid entries for <see cref="F:Vanara.PInvoke.ComCtl32.HDITEM.state" />.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemState.None">
      <summary>No state value.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HeaderItemState.HDIS_FOCUSED">
      <summary>The item has keyboard focus.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.HeaderMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HeaderNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.HeaderNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HotItemChangeFlags">
      <summary>Flags that indicate why the hot item has changed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_OTHER">
      <summary>
            The change in the hot item resulted from an event that could not be determined. This will most often be due to a change in focus or the
            TB_SETHOTITEM message.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_MOUSE">
      <summary>The change in the hot item resulted from a mouse event.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_ARROWKEYS">
      <summary>The change in the hot item was caused by an arrow key.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_ACCELERATOR">
      <summary>The change in the hot item was caused by a shortcut key.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_DUPACCEL">
      <summary>Modifies HICF_ACCELERATOR. If this flag is set, more than one item has the same shortcut key character.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_ENTERING">
      <summary>Modifies the other reason flags. If this flag is set, there is no previous hot item and idOld does not contain valid information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_LEAVING">
      <summary>Modifies the other reason flags. If this flag is set, there is no new hot item and idNew does not contain valid information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_RESELECT">
      <summary>The change in the hot item resulted from the user entering the shortcut key for an item that was already hot.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_LMOUSE">
      <summary>The change in the hot item resulted from a left-click mouse event.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HotItemChangeFlags.HICF_TOGGLEDROPDOWN">
      <summary>Version 5.80. Causes the button to switch states.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.HOTKEYF">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.HOTKEYF</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HOTKEYF.HOTKEYF_SHIFT">
      <summary>SHIFT key</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HOTKEYF.HOTKEYF_CONTROL">
      <summary>CTRL key</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HOTKEYF.HOTKEYF_ALT">
      <summary>ALT key</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.HOTKEYF.HOTKEYF_EXT">
      <summary>Extended key</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IImageList">
      <summary>Exposes methods that manipulate and interact with image lists.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.Add(System.IntPtr,System.IntPtr)">
      <summary>Adds an image or images to an image list.</summary>
      <param name="hbmImage">A handle to the bitmap that contains the image or images. The number of images is inferred from the width of the bitmap.</param>
      <param name="hbmMask">A handle to the bitmap that contains the mask. If no mask is used with the image list, this parameter is ignored.</param>
      <returns>When this method returns, contains a pointer to the index of the first new image. If the method fails to successfully add the new image, this value is -1.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.AddMasked(System.IntPtr,System.UInt32)">
      <summary>Adds an image or images to an image list, generating a mask from the specified bitmap.</summary>
      <param name="hbmImage">A handle to the bitmap that contains one or more images. The number of images is inferred from the width of the bitmap.</param>
      <param name="crMask">The color used to generate the mask. Each pixel of this color in the specified bitmap is changed to black, and the corresponding bit in the mask is set to 1.</param>
      <returns>A pointer to an int that contains the index of the first new image when it returns, if successful, or -1 otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.BeginDrag(System.Int32,System.Int32,System.Int32)">
      <summary>Begins dragging an image.</summary>
      <param name="iTrack">A value of type int that contains the index of the image to drag.</param>
      <param name="dxHotspot">A value of type int that contains the x-component of the drag position relative to the upper-left corner of the image.</param>
      <param name="dyHotspot">A value of type int that contains the y-component of the drag position relative to the upper-left corner of the image.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.Clone(System.Guid)">
      <summary>Clones an existing image list.</summary>
      <param name="riid">An IID for the new image list.</param>
      <returns>The address of a pointer to the interface for the new image list.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.Copy(System.Int32,Vanara.PInvoke.ComCtl32.IImageList,System.Int32,Vanara.PInvoke.ComCtl32.IMAGELISTCOPYFLAG)">
      <summary>Copies images from a given image list.</summary>
      <param name="iDst">A value of type int that contains the zero-based index of the destination image for the copy operation.</param>
      <param name="punkSrc">A pointer to the IUnknown interface for the source image list.</param>
      <param name="iSrc">A value of type int that contains the zero-based index of the source image for the copy operation.</param>
      <param name="uFlags">A value that specifies the type of copy operation to be made.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.DragEnter(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32)">
      <summary>Locks updates to the specified window during a drag operation and displays the drag image at the specified position within the window.</summary>
      <param name="hwndLock">A handle to the window that owns the drag image.</param>
      <param name="x">The x-coordinate at which to display the drag image. The coordinate is relative to the upper-left corner of the window, not the client area.</param>
      <param name="y">The y-coordinate at which to display the drag image. The coordinate is relative to the upper-left corner of the window, not the client area.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.DragLeave(System.Runtime.InteropServices.HandleRef)">
      <summary>Unlocks the specified window and hides the drag image, which enables the window to update.</summary>
      <param name="hwndLock">A handle to the window that contains the drag image.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.DragMove(System.Int32,System.Int32)">
      <summary>Moves the image that is being dragged during a drag-and-drop operation. This function is typically called in response to a WM_MOUSEMOVE message.</summary>
      <param name="x">A value of type int that contains the x-coordinate where the drag image appears. The coordinate is relative to the upper-left corner of the window, not the client area.</param>
      <param name="y">A value of type int that contains the y-coordinate where the drag image appears. The coordinate is relative to the upper-left corner of the window, not the client area.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.DragShowNolock(System.Boolean)">
      <summary>Shows or hides the image being dragged.</summary>
      <param name="fShow">A value that specifies whether to show or hide the image being dragged. Specify TRUE to show the image or FALSE to hide the image.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.Draw(Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS)">
      <summary>Draws an image list item in the specified device context.</summary>
      <param name="pimldp">A pointer to an IMAGELISTDRAWPARAMS structure that contains the drawing parameters.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.EndDrag">
      <summary>Ends a drag operation.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetBkColor">
      <summary>Gets the current background color for an image list.</summary>
      <returns>A pointer to a COLORREF that contains the background color when the method returns.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetDragImage(System.Drawing.Point@,System.Drawing.Point@,System.Guid)">
      <summary>Gets the temporary image list that is used for the drag image. The function also retrieves the current drag position and the offset of the drag image relative to the drag position.</summary>
      <param name="ppt">A pointer to a POINT structure that receives the current drag position. Can be NULL.</param>
      <param name="pptHotspot">A pointer to a POINT structure that receives the offset of the drag image relative to the drag position. Can be NULL.</param>
      <param name="riid">An IID for the image list.</param>
      <returns>The address of a pointer to the interface for the image list if successful, NULL otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetIcon(System.Int32,Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS)">
      <summary>Creates an icon from an image and a mask in an image list.</summary>
      <param name="i">A value of type int that contains the index of the image.</param>
      <param name="flags">A combination of flags that specify the drawing style. For a list of values, see IImageList::Draw.</param>
      <returns>A pointer to an int that contains the handle to the icon if successful, or NULL if otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetIconSize(System.Int32@,System.Int32@)">
      <summary>Gets the dimensions of images in an image list. All images in an image list have the same dimensions.</summary>
      <param name="cx">A pointer to an int that receives the width, in pixels, of each image.</param>
      <param name="cy">A pointer to an int that receives the height, in pixels, of each image.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetImageCount">
      <summary>Gets the number of images in an image list.</summary>
      <returns>A pointer to an int that contains the number of images when the method returns.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetImageInfo(System.Int32)">
      <summary>Gets information about an image.</summary>
      <param name="i">A value of type int that contains the index of the image.</param>
      <returns>A pointer to an IMAGEINFO structure that receives information about the image. The information in this structure can directly manipulate the bitmaps of the image.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetImageRect(System.Int32)">
      <summary>Gets an image's bounding rectangle.</summary>
      <param name="i">A value of type int that contains the index of the image.</param>
      <returns>A pointer to a RECT that contains the bounding rectangle when the method returns.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetItemFlags(System.Int32)">
      <summary>Gets the flags of an image.</summary>
      <param name="i">A value of type int that contains the index of the images whose flags need to be retrieved.</param>
      <returns>A pointer to a DWORD that contains the flags when the method returns.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.GetOverlayImage(System.Int32)">
      <summary>Gets the overlay image.</summary>
      <param name="iOverlay">The i overlay.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.IImageList.GetOverlayImage(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.Merge(System.Int32,Vanara.PInvoke.ComCtl32.IImageList,System.Int32,System.Int32,System.Int32,System.Guid)">
      <summary>Creates a new image by combining two existing images. This method also creates a new image list in which to store the image.</summary>
      <param name="i1">A value of type int that contains the index of the first existing image.</param>
      <param name="punk2">A pointer to the IUnknown interface of the image list that contains the second image.</param>
      <param name="i2">A value of type int that contains the index of the second existing image.</param>
      <param name="dx">A value of type int that contains the x-component of the offset of the second image relative to the first image.</param>
      <param name="dy">A value of type int that contains the y-component of the offset of the second image relative to the first image.</param>
      <param name="riid">An IID of the interface for the new image list.</param>
      <returns>A raw pointer to the interface for the new image list.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.Remove(System.Int32)">
      <summary>Removes an image from an image list.</summary>
      <param name="i">A value of type int that contains the index of the image to remove. If this parameter is -1, the method removes all images.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.Replace(System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Replaces an image in an image list with a new image.</summary>
      <param name="i">A value of type int that contains the index of the image to replace.</param>
      <param name="hbmImage">A handle to the bitmap that contains the image.</param>
      <param name="hbmMask">A handle to the bitmap that contains the mask. If no mask is used with the image list, this parameter is ignored.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.ReplaceIcon(System.Int32,System.IntPtr)">
      <summary>Replaces an image with an icon or cursor.</summary>
      <param name="i">A value of type int that contains the index of the image to replace. If i is -1, the function adds the image to the end of the list.</param>
      <param name="hicon">A handle to the icon or cursor that contains the bitmap and mask for the new image.</param>
      <returns>A pointer to an int that will contain the index of the image on return if successful, or -1 otherwise.</returns>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.SetBkColor(System.UInt32,System.UInt32@)">
      <summary>Sets the background color for an image list. This method only functions if you add an icon to the image list or use the IImageList::AddMasked method to add a black and white bitmap. Without a mask, the entire image draws, and the background color is not visible.</summary>
      <param name="clrBk">The background color to set. If this parameter is set to CLR_NONE, then images draw transparently using the mask.</param>
      <param name="pclr">A pointer to a COLORREF that contains the previous background color on return if successful, or CLR_NONE otherwise.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.SetDragCursorImage(Vanara.PInvoke.ComCtl32.IImageList,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new drag image by combining the specified image, which is typically a mouse cursor image, with the current drag image.</summary>
      <param name="punk">A pointer to the IUnknown interface that accesses the image list interface, which contains the new image to combine with the drag image.</param>
      <param name="iDrag">A value of type int that contains the index of the new image to combine with the drag image.</param>
      <param name="dxHotspot">A value of type int that contains the x-component of the hot spot within the new image.</param>
      <param name="dyHotspot">A value of type int that contains the x-component of the hot spot within the new image.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.SetIconSize(System.Int32,System.Int32)">
      <summary>Sets the dimensions of images in an image list and removes all images from the list.</summary>
      <param name="cx">A value of type int that contains the width, in pixels, of the images in the image list. All images in an image list have the same dimensions.</param>
      <param name="cy">A value of type int that contains the height, in pixels, of the images in the image list. All images in an image list have the same dimensions.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.SetImageCount(System.Int32)">
      <summary>Resizes an existing image list.</summary>
      <param name="uNewCount">A value that specifies the new size of the image list.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IImageList.SetOverlayImage(System.Int32,System.Int32)">
      <summary>Adds a specified image to the list of images used as overlay masks. An image list can have up to four overlay masks in Common Controls version 4.70 and earlier, and up to 15 in version 4.71 or later. The method assigns an overlay mask index to the specified image.</summary>
      <param name="iImage">A value of type int that contains the zero-based index of an image in the image list. This index identifies the image to use as an overlay mask.</param>
      <param name="iOverlay">A value of type int that contains the one-based index of the overlay mask.</param>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IMAGEINFO">
      <summary>Contains information about an image in an image list. This structure is used with the IImageList::GetImageInfo function.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGEINFO.hbmImage">
      <summary>A handle to the bitmap that contains the images.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGEINFO.hbmMask">
      <summary>
            A handle to a monochrome bitmap that contains the masks for the images. If the image list does not contain a mask, this member is NULL.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGEINFO.rcImage">
      <summary>The bounding rectangle of the specified image within the bitmap specified by hbmImage.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGEINFO.Unused1">
      <summary>Not used. This member should always be zero.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGEINFO.Unused2">
      <summary>Not used. This member should always be zero.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IMAGELISTCOPYFLAG">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.IMAGELISTCOPYFLAG</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTCOPYFLAG.ILCF_MOVE">
      <summary>The source image is copied to the destination image's index. This operation results in multiple instances of a given image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTCOPYFLAG.ILCF_SWAP">
      <summary>The source and destination images exchange positions within the image list.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS">
      <summary>Passed to the IImageList::Draw method in the fStyle member of IMAGELISTDRAWPARAMS.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_NORMAL">
      <summary>
            Draws the image using the background color for the image list. If the background color is the CLR_NONE value, the image is drawn transparently
            using the mask.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_TRANSPARENT">
      <summary>
            Draws the image transparently using the mask, regardless of the background color. This value has no effect if the image list does not contain a mask.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_BLEND25">
      <summary>
            Draws the image, blending 25 percent with the blend color specified by rgbFg. This value has no effect if the image list does not contain a mask.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_FOCUS">
      <summary>Same as ILD_BLEND25</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_BLEND50">
      <summary>
            Draws the image, blending 50 percent with the blend color specified by rgbFg. This value has no effect if the image list does not contain a mask.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_SELECTED">
      <summary>Same as ILD_BLEND50</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_BLEND">
      <summary>Same as ILD_BLEND50</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_MASK">
      <summary>Draws the mask.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_IMAGE">
      <summary>If the overlay does not require a mask to be drawn, set this flag.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_ROP">
      <summary>Draws the image using the raster operation code specified by the dwRop member.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_OVERLAYMASK">
      <summary>To extract the overlay image from the fStyle member, use the logical AND to combine fStyle with the ILD_OVERLAYMASK value.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_PRESERVEALPHA">
      <summary>Preserves the alpha channel in the destination.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_SCALE">
      <summary>Causes the image to be scaled to cx, cy instead of being clipped.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_DPISCALE">
      <summary>Scales the image to the current dpi of the display.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWFLAGS.ILD_ASYNC">
      <summary>
        <c>Windows Vista and later.</c> Draw the image if it is available in the cache. Do not extract it automatically. The called draw method returns
            E_PENDING to the calling component, which should then take an alternative action, such as, provide another image and queue a background task to
            force the image to be loaded via ForceImagePresent using the ILFIP_ALWAYS flag. The ILD_ASYNC flag then prevents the extraction operation from
            blocking the current thread and is especially important if a draw method is called from the user interface (UI) thread.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS">
      <summary>Contains information about an image list draw operation and is used with the IImageList::Draw function.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.cbSize">
      <summary>The size of this structure, in bytes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.crEffect">
      <summary>A color used for the glow and shadow effects. You must use comctl32.dll version 6 to use this member. See the Remarks.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.cx">
      <summary>
            A value that specifies the number of pixels to draw, relative to the upper-left corner of the drawing operation as specified by xBitmap and
            yBitmap. If cx and cy are zero, then Draw draws the entire valid section. The method does not ensure that the parameters are valid.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.cy">
      <summary>
            A value that specifies the number of pixels to draw, relative to the upper-left corner of the drawing operation as specified by xBitmap and
            yBitmap. If cx and cy are zero, then Draw draws the entire valid section. The method does not ensure that the parameters are valid.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.dwRop">
      <summary>
            A value specifying a raster operation code. These codes define how the color data for the source rectangle will be combined with the color data
            for the destination rectangle to achieve the final color. This member is ignored if fStyle does not include the ILD_ROP flag.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.Frame">
      <summary>
            Used with the alpha blending effect.
            <para>
            When used with ILS_ALPHA, this member holds the value for the alpha channel. This value can be from 0 to 255, with 0 being completely
            transparent, and 255 being completely opaque.
            </para><para>You must use comctl32.dll version 6 to use this member. See the Remarks.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.fState">
      <summary>
            A flag that specifies the drawing state. This member can contain one or more image list state flags. You must use comctl32.dll version 6 to use
            this member.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.fStyle">
      <summary>
            A flag specifying the drawing style and, optionally, the overlay image. See the comments section at the end of this topic for information on the
            overlay image. This member can contain one or more image list drawing flags.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.hdcDst">
      <summary>A handle to the destination device context.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.himl">
      <summary>A handle to the image list that contains the image to be drawn.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.i">
      <summary>The zero-based index of the image to be drawn.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.rgbBk">
      <summary>The image background color. This parameter can be an application-defined RGB value or <see cref="F:Vanara.PInvoke.ComCtl32.CLR_DEFAULT" /> or <see cref="F:Vanara.PInvoke.ComCtl32.CLR_NONE" />.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.rgbFg">
      <summary>
            The image foreground color. This member is used only if fStyle includes the ILD_BLEND25 or ILD_BLEND50 flag. This parameter can be an
            application-defined RGB value or <see cref="F:Vanara.PInvoke.ComCtl32.CLR_DEFAULT" /> or <see cref="F:Vanara.PInvoke.ComCtl32.CLR_NONE" />.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.x">
      <summary>The x-coordinate that specifies where the image is drawn.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.xBitmap">
      <summary>
            The x-coordinate that specifies the upper-left corner of the drawing operation in reference to the image itself. Pixels of the image that are to
            the left of xBitmap and above yBitmap do not appear.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.y">
      <summary>The y-coordinate that specifies where the image is drawn.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTDRAWPARAMS.yBitmap">
      <summary>
            The y-coordinate that specifies the upper-left corner of the drawing operation in reference to the image itself. Pixels of the image that are to
            the left of xBitmap and above yBitmap do not appear.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IMAGELISTITEMFLAG">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.IMAGELISTITEMFLAG</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTITEMFLAG.ILIF_ALPHA">
      <summary>Indicates that the item in the imagelist has an alpha channel.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTITEMFLAG.ILIF_LOWQUALITY">
      <summary>Windows Vista and later. Indicates that the item in the imagelist was generated via a StretchBlt function, consequently image quality may have degraded.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IMAGELISTSTATEFLAGS">
      <summary>The following flags are passed to the IImageList::Draw method in the fState member of IMAGELISTDRAWPARAMS.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTSTATEFLAGS.ILS_NORMAL">
      <summary>The image state is not modified.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTSTATEFLAGS.ILS_GLOW">
      <summary>Not supported.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTSTATEFLAGS.ILS_SHADOW">
      <summary>Not supported.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTSTATEFLAGS.ILS_SATURATE">
      <summary>Reduces the color saturation of the icon to grayscale. This only affects 32bpp images.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IMAGELISTSTATEFLAGS.ILS_ALPHA">
      <summary>
            Alpha blends the icon. Alpha blending controls the transparency level of an icon, according to the value of its alpha channel. The value of the
            alpha channel is indicated by the frame member in the IMAGELISTDRAWPARAMS method. The alpha channel can be from 0 to 255, with 0 being completely
            transparent, and 255 being completely opaque.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX">
      <summary>
            Carries information used to load common control classes from the dynamic-link library (DLL). This structure is used with the <see cref="M:Vanara.PInvoke.ComCtl32.InitCommonControlsEx(Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX@)" /> function.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX.#ctor(Vanara.PInvoke.ComCtl32.CommonControlClass)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX" /> class and sets the dwICC field.</summary>
      <param name="ccc">The <see cref="T:Vanara.PInvoke.ComCtl32.CommonControlClass" /> value to assign to the dwICC field.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX.dwICC">
      <summary>
            The set of bit flags that indicate which common control classes will be loaded from the DLL when calling <see cref="M:Vanara.PInvoke.ComCtl32.InitCommonControlsEx(Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX@)" />.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.INITCOMMONCONTROLSEX.dwSize">
      <summary>The size of the structure, in bytes.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IPAddressMessage">
      <summary>IP Address Messages</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IPAddressMessage.IPM_CLEARADDRESS">
      <summary>Clears the contents of the IP address control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IPAddressMessage.IPM_SETADDRESS">
      <summary>Sets the address values for all four fields in the IP address control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IPAddressMessage.IPM_GETADDRESS">
      <summary>Gets the address values for all four fields in the IP address control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IPAddressMessage.IPM_SETRANGE">
      <summary>ets the valid range for the specified field in the IP address control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IPAddressMessage.IPM_SETFOCUS">
      <summary>Sets the keyboard focus to the specified field in the IP address control. All of the text in that field will be selected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IPAddressMessage.IPM_ISBLANK">
      <summary>Determines if all fields in the IP address control are blank.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.IPAddressNotification">
      <summary>IP Address Notifications</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.IPAddressNotification.IPN_FIELDCHANGED">
      <summary>Sent when the user changes a field in the control or moves from one field to another. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewArrange">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewArrange</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag">
      <summary>Flags for the <see cref="F:Vanara.PInvoke.ComCtl32.LVBKIMAGE.ulFlags" /> member.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_SOURCE_NONE">
      <summary>The list-view control has no background image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_SOURCE_HBITMAP">
      <summary>A background bitmap is supplied via the hbm member of LVBKIMAGE. If the message LVM_SETBKIMAGE succeeds, then the list-view takes ownership of the bitmap.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_SOURCE_URL">
      <summary>The pszImage member contains the URL of the background image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_SOURCE_MASK">
      <summary>You can use the LVBKIF_SOURCE_MASK value to mask off all but the source flags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_STYLE_NORMAL">
      <summary>The background image is displayed normally.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_STYLE_MASK">
      <summary>You can use the LVBKIF_STYLE_MASK value to mask off all but the style flags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_FLAG_TILEOFFSET">
      <summary>Specify the coordinates of the first tile. This flag is valid only if the LVBKIF_STYLE_TILE flag is also specified. If this flag is not specified, the first tile begins at the upper-left corner of the client area. If you use ComCtl32.dll Version 6.0 the xOffsetPercent and yOffsetPercent fields contain pixels, not percentage values, to specify the coordinates of the first tile. Comctl32.dll version 6 is not redistributable but it is included in Windows or later. Also, you must specify Comctl32.dll version 6 in a manifest. For more information on manifests, see Enabling Visual Styles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_TYPE_WATERMARK">
      <summary>A watermark background bitmap is supplied via the hbm member of LVBKIMAGE. If the LVM_SETBKIMAGE message succeeds, then the list-view control takes ownership of the bitmap.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewBkImageFlag.LVBKIF_FLAG_ALPHABLEND">
      <summary>Valid only when LVBKIF_TYPE_WATERMARK is also specified. This flag indicates the bitmap provided via LVBKIF_TYPE_WATERMARK contains a valid alpha channel.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewColumMask">
      <summary>
            Mask flags used by <see cref="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.mask" />.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_FMT">
      <summary>The fmt member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_WIDTH">
      <summary>The cx member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_TEXT">
      <summary>The pszText member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_SUBITEM">
      <summary>The iSubItem member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_IMAGE">
      <summary>Version 4.70. The iImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_ORDER">
      <summary>Version 4.70. The iOrder member is valid</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_MINWIDTH">
      <summary>Version 6.00 and Windows Vista.The cxMin member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_DEFAULTWIDTH">
      <summary>Version 6.00 and Windows Vista.The cxDefault member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumMask.LVCF_IDEALWIDTH">
      <summary>Version 6.00 and Windows Vista.The cxIdeal member is valid</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewColumnFormat">
      <summary>
            Alignment of the column header and the subitem text in the column. The alignment of the leftmost column is always LVCFMT_LEFT; it cannot be changed. This member can be a combination of the following values. Note that not all combinations are valid.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_LEFT">
      <summary>Text is left-aligned.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_RIGHT">
      <summary>Text is right-aligned.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_CENTER">
      <summary>Text is centered.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_JUSTIFYMASK">
      <summary>A bitmask used to select those bits of fmt that control field justification. To check the format of a column, use a logical "and" to combine LCFMT_JUSTIFYMASK with fmt. You can then use a switch statement to determine whether the LVCFMT_LEFT, LVCFMT_RIGHT, or LVCFMT_CENTER bits are set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_IMAGE">
      <summary>Version 4.70. The item displays an image from an image list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_BITMAP_ON_RIGHT">
      <summary>Version 4.70. The bitmap appears to the right of text. This does not affect an image from an image list assigned to the header item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_COL_HAS_IMAGES">
      <summary>Version 4.70. The header item contains an image in the image list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_FIXED_WIDTH">
      <summary>Version 6.00 and Windows Vista. Can't resize the column; same as HDF_FIXEDWIDTH.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_NO_DPI_SCALE">
      <summary>Version 6.00 and Windows Vista. If not set, CCM_DPISCALE will govern scaling up fixed width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_FIXED_RATIO">
      <summary>Version 6.00 and Windows Vista. Width will augment with the row height.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_LINE_BREAK">
      <summary>Forces the column to wrap to the top of the next list of columns.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_FILL">
      <summary>Fills the remainder of the tile area. Might have a title.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_WRAP">
      <summary>Allows the column to wrap within the remaining space in its list of columns.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_NO_TITLE">
      <summary>Removes the title from the subitem.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_TILE_PLACEMENTMASK">
      <summary>Equivalent to a combination of LVCFMT_LINE_BREAK and LVCFMT_FILL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewColumnFormat.LVCFMT_SPLITBUTTON">
      <summary>Version 6.00 and Windows Vista. Column is a split button (same as HDF_SPLITBUTTON). The header of the column displays a split button (same as HDF_SPLITBUTTON).</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewFindInfoFlag">
      <summary>Flags used in the <see cref="F:Vanara.PInvoke.ComCtl32.LVFINDINFO.flags" /> member.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewFindInfoFlag.LVFI_PARAM">
      <summary>Searches for a match between this structure's lParam member and the lParam member of an item's LVITEM structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewFindInfoFlag.LVFI_STRING">
      <summary>
            Searches based on the item text. Unless additional values are specified, the item text of the matching item must exactly match the string pointed
            to by the psz member. However, the search is case-insensitive.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewFindInfoFlag.LVFI_SUBSTRING">
      <summary>Windows Vista and later. Equivalent to LVFI_PARTIAL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewFindInfoFlag.LVFI_PARTIAL">
      <summary>Checks to see if the item text begins with the string pointed to by the psz member. This value implies use of LVFI_STRING.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewFindInfoFlag.LVFI_WRAP">
      <summary>
            Continues the search at the beginning if no match is found. If this flag is used by itself, it is assumed that a string search is wanted.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewFindInfoFlag.LVFI_NEARESTXY">
      <summary>
            Finds the item nearest to the position specified in the pt member, in the direction specified by the vkDirection member. This flag is supported
            only by large icon and small icon modes. If LVFI_NEARESTXY is specified, all other flags are ignored.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewGroupAlignment">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewGroupAlignment</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewGroupMask">
      <summary>Used to set and retrieve groups.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_NONE">
      <summary>No other items are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_HEADER">
      <summary>pszHeader and cchHeader members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_FOOTER">
      <summary>pszFooter and cchFooter members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_STATE">
      <summary>state and stateMask members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_ALIGN">
      <summary>uAlign member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_GROUPID">
      <summary>iGroupId member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_SUBTITLE">
      <summary>Version 6.00 and later. The pszSubtitle member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_TASK">
      <summary>Version 6.00 and later. The pszTask member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_DESCRIPTIONTOP">
      <summary>Version 6.00 and later. The pszDescriptionTop member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_DESCRIPTIONBOTTOM">
      <summary>Version 6.00 and later. The pszDescriptionBottom member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_TITLEIMAGE">
      <summary>Version 6.00 and later. The iTitleImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_EXTENDEDIMAGE">
      <summary>Version 6.00 and later. The iExtendedImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_ITEMS">
      <summary>Version 6.00 and later. The cItems member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_SUBSET">
      <summary>Version 6.00 and later. The pszSubsetTitle member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMask.LVGF_SUBSETITEMS">
      <summary>Version 6.00 and later. The cchSubsetTitle member is valid.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewGroupMetricsMask">
      <summary>Flags that specify which members contain or are to receive valid data.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMetricsMask.LVGMF_NONE">
      <summary>No members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMetricsMask.LVGMF_BORDERSIZE">
      <summary>The Left, Top, Right, and Bottom members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMetricsMask.LVGMF_BORDERCOLOR">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupMetricsMask.LVGMF_TEXTCOLOR">
      <summary>Not implemented.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewGroupRect">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewGroupRect</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewGroupState">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewGroupState</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_NORMAL">
      <summary>Groups are expanded, the group name is displayed, and all items in the group are displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_COLLAPSED">
      <summary>The group is collapsed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_HIDDEN">
      <summary>The group is hidden.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_NOHEADER">
      <summary>Version 6.00 and later. The group does not display a header.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_COLLAPSIBLE">
      <summary>Version 6.00 and later. The group can be collapsed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_FOCUSED">
      <summary>Version 6.00 and later. The group has keyboard focus.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_SELECTED">
      <summary>Version 6.00 and later. The group is selected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_SUBSETED">
      <summary>Version 6.00 and later. The group displays only a portion of its items.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewGroupState.LVGS_SUBSETLINKFOCUSED">
      <summary>Version 6.00 and later. The subset link of the group has keyboard focus.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag">
      <summary>
            The results of a hit test. This member can be one or more of the following values:
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_NOWHERE">
      <summary>The position is inside the list-view control's client window, but it is not over a list item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_ONITEMICON">
      <summary>The position is over a list-view item's icon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_ONITEMLABEL">
      <summary>The position is over a list-view item's text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_ONITEMSTATEICON">
      <summary>The position is over the state image of a list-view item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_ONITEM">
      <summary>The position is over a list-view item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_ABOVE">
      <summary>The position is above the control's client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_BELOW">
      <summary>The position is below the control's client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_TORIGHT">
      <summary>The position is to the right of the list-view control's client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_TOLEFT">
      <summary>The position is to the left of the list-view control's client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_GROUP_HEADER">
      <summary>Windows Vista. The point is within the group header.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_GROUP_FOOTER">
      <summary>Windows Vista. The point is within the group footer.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_GROUP_COLLAPSE">
      <summary>Windows Vista. The point is within the collapse/expand button of the group.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_GROUP_BACKGROUND">
      <summary>Windows Vista. The point is within the area of the group where items are displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_GROUP_STATEICON">
      <summary>Windows Vista. The point is within the state icon of the group.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_GROUP_SUBSETLINK">
      <summary>Windows Vista. The point is within the subset link of the group.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_GROUP">
      <summary>Windows Vista. LVHT_EX_GROUP_BACKGROUND | LVHT_EX_GROUP_COLLAPSE | LVHT_EX_GROUP_FOOTER | LVHT_EX_GROUP_HEADER | LVHT_EX_GROUP_STATEICON | LVHT_EX_GROUP_SUBSETLINK.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_ONCONTENTS">
      <summary>Windows Vista. The point is within the icon or text content of the item and not on the background.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewHitTestFlag.LVHT_EX_FOOTER">
      <summary>Windows Vista. The point is within the footer of the list-view control.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewImageList">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewImageList</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewInsertMarkFlag">
      <summary>Flag that specifies where the insertion point should appear.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewInsertMarkFlag.LVIM_BEFORE">
      <summary>The insertion point appears before the item</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewInsertMarkFlag.LVIM_AFTER">
      <summary>The insertion point appears after the item</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewItemMask">
      <summary>
            Set of flags that specify which members of the <see cref="T:Vanara.PInvoke.ComCtl32.LVITEM" /> structure contain data to be set or which members are being requested. This
            member can have one or more of the following flags set:
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_TEXT">
      <summary>The pszText member is valid or must be set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_IMAGE">
      <summary>The iImage member is valid or must be set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_PARAM">
      <summary>The lParam member is valid or must be set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_STATE">
      <summary>The state member is valid or must be set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_INDENT">
      <summary>The iIndent member is valid or must be set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_NORECOMPUTE">
      <summary>
            The control will not generate LVN_GETDISPINFO to retrieve text information if it receives an LVM_GETITEM message. Instead, the pszText member
            will contain LPSTR_TEXTCALLBACK.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_GROUPID">
      <summary>
            The iGroupId member is valid or must be set. If this flag is not set when an LVM_INSERTITEM message is sent, the value of iGroupId is assumed to
            be I_GROUPIDCALLBACK.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_COLUMNS">
      <summary>The cColumns member is valid or must be set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_COLFMT">
      <summary>
            Windows Vista and later. The piColFmt member is valid or must be set. If this flag is used, the cColumns member is valid or must be set.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_DISETITEM">
      <summary>
            The operating system should store the requested list item information and not ask for it again. This flag is used only with the LVN_GETDISPINFO
            notification code.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemMask.LVIF_ALL">
      <summary>Complete mask.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewItemRect">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewItemRect</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewItemState">
      <summary>
            An item's state value consists of the item's state, an optional overlay mask index, and an optional state image mask index. An item's state
            determines its appearance and functionality. The state can be zero or one or more of the following values:
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_NONE">
      <summary>No flags set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_FOCUSED">
      <summary>
            The item has the focus, so it is surrounded by a standard focus rectangle. Although more than one item may be selected, only one item can have
            the focus.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_SELECTED">
      <summary>
            The item is selected. The appearance of a selected item depends on whether it has the focus and also on the system colors used for selection.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_CUT">
      <summary>The item is marked for a cut-and-paste operation.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_DROPHILITED">
      <summary>The item is highlighted as a drag-and-drop target.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_GLOW">
      <summary>Undocumented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_OVERLAYMASK">
      <summary>The item's overlay image index is retrieved by a mask.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_STATEIMAGEMASK">
      <summary>The item's state image index is retrieved by a mask.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewItemState.LVIS_ALL">
      <summary>All flags.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewMessage">
      <summary>LVM_ Messages for SendMessage</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewNextItemFlag">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewNextItemFlag</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewStyle">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewStyle</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewStyleEx">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ListViewStyleEx</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewTileViewFlag">
      <summary>Flags that determines how the tiles are sized in tile view.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewFlag.LVTVIF_AUTOSIZE">
      <summary>Size the tiles automatically.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewFlag.LVTVIF_FIXEDWIDTH">
      <summary>Apply a fixed width to the tiles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewFlag.LVTVIF_FIXEDHEIGHT">
      <summary>Apply a fixed height to the tiles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewFlag.LVTVIF_FIXEDSIZE">
      <summary>Apply a fixed height and width to the tiles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewFlag.LVTVIF_EXTENDED">
      <summary>This flag is not supported and should not be used.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ListViewTileViewMask">
      <summary>Mask that determines which members of the LVTILEVIEWINFO structure are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewMask.LVTVIM_TILESIZE">
      <summary>sizeTile is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewMask.LVTVIM_COLUMNS">
      <summary>cLines is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ListViewTileViewMask.LVTVIM_LABELMARGIN">
      <summary>rcLabelMargin is valid.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVBKIMAGE">
      <summary>Contains information about the background image of a list-view control. This structure is used for both setting and retrieving background image information.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVBKIMAGE.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVBKIMAGE" /> class.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVBKIMAGE.#ctor(System.Drawing.Bitmap,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVBKIMAGE" /> class.</summary>
      <param name="bmp">The BMP.</param>
      <param name="isTiled">if set to <c>true</c> [is tiled].</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVBKIMAGE.#ctor(System.Drawing.Bitmap,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVBKIMAGE" /> class.</summary>
      <param name="bmp">The BMP.</param>
      <param name="isWatermark">if set to <c>true</c> [is watermark].</param>
      <param name="isWatermarkAlphaBlended">if set to <c>true</c> [is watermark alpha blended].</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVBKIMAGE.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVBKIMAGE" /> class.</summary>
      <param name="url">The URL.</param>
      <param name="isTiled">if set to <c>true</c> [is tiled].</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVBKIMAGE.#ctor(Vanara.PInvoke.ComCtl32.ListViewBkImageFlag)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVBKIMAGE" /> class.</summary>
      <param name="flags">The flags.</param>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVBKIMAGE.Bitmap">
      <summary>Gets or sets the bitmap.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVBKIMAGE.cchImageMax">
      <summary>Size of the buffer at the address in pszImage. If information is being sent to the control, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVBKIMAGE.hBmp">
      <summary>The handle of the background bitmap. This member is valid only if the LVBKIF_SOURCE_HBITMAP flag is set in ulFlags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVBKIMAGE.pszImage">
      <summary>Address of a NULL-terminated string that contains the URL of the background image. This member is valid only if the LVBKIF_SOURCE_URL flag is set in ulFlags. This member must be initialized to point to the buffer that contains or receives the text before sending the message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVBKIMAGE.ulFlags">
      <summary>This member may be one or more of the following flags. You can use the LVBKIF_SOURCE_MASK value to mask off all but the source flags. You can use the LVBKIF_STYLE_MASK value to mask off all but the style flags.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVBKIMAGE.Url">
      <summary>Gets or sets the URL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVBKIMAGE.xOffset">
      <summary>Percentage of the control's client area that the image should be offset horizontally. For example, at 0 percent, the image will be displayed against the left edge of the control's client area. At 50 percent, the image will be displayed horizontally centered in the control's client area. At 100 percent, the image will be displayed against the right edge of the control's client area. This member is valid only when LVBKIF_STYLE_NORMAL is specified in ulFlags. If both LVBKIF_FLAG_TILEOFFSET and LVBKIF_STYLE_TILE are specified in ulFlags, then the value specifies the pixel, not percentage offset, of the first tile. Otherwise, the value is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVBKIMAGE.yOffset">
      <summary>Percentage of the control's client area that the image should be offset vertically. For example, at 0 percent, the image will be displayed against the top edge of the control's client area. At 50 percent, the image will be displayed vertically centered in the control's client area. At 100 percent, the image will be displayed against the bottom edge of the control's client area. This member is valid only when LVBKIF_STYLE_NORMAL is specified in ulFlags. If both LVBKIF_FLAG_TILEOFFSET and LVBKIF_STYLE_TILE are specified in ulFlags, then the value specifies the pixel, not percentage offset, of the first tile. Otherwise, the value is ignored.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVCOLUMN">
      <summary>
            Contains information about a column in report view. This structure is used both for creating and manipulating columns. This structure supersedes the
            LV_COLUMN structure.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVCOLUMN.#ctor(Vanara.PInvoke.ComCtl32.ListViewColumMask)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVCOLUMN" /> class.</summary>
      <param name="mask">The mask.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.cchTextMax">
      <summary>Size in TCHARs of the buffer pointed to by the pszText member. If the structure is not receiving information about a column, this member is ignored.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.ColumnPosition">
      <summary>Gets or sets the column position.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.cx">
      <summary>Width of the column, in pixels.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.cxDefault">
      <summary>Windows Vista. Application-defined value typically used to store the default width of the column. This member is ignored by the list-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.cxIdeal">
      <summary>Windows Vista. Read-only. The ideal width of the column in pixels, as the column may currently be autosized to a lesser width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.cxMin">
      <summary>Windows Vista. Minimum width of the column in pixels.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.DefaultWidth">
      <summary>Gets or sets the default width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.fmt">
      <summary>Alignment of the column header and the subitem text in the column. The alignment of the leftmost column is always LVCFMT_LEFT; it cannot be changed. This member can be a combination of the following values. Note that not all combinations are valid.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.Format">
      <summary>Gets or sets the format.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.IdealWidth">
      <summary>Gets or sets the ideal width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.iImage">
      <summary>Version 4.70. Zero-based index of an image within the image list. The specified image will appear within the column.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.ImageListIndex">
      <summary>Gets or sets the zero-based index of an image within the image list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.iOrder">
      <summary>Version 4.70. Zero-based column offset. Column offset is in left-to-right order. For example, zero indicates the leftmost column.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.iSubItem">
      <summary>Index of subitem associated with the column.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.mask">
      <summary>Variable specifying which members contain valid information. This member can be zero, or one or more of the following values:</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.MinWidth">
      <summary>Gets or sets the minimum width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVCOLUMN.pszText">
      <summary>If column information is being set, this member is the address of a null-terminated string that contains the column header text. If the structure is receiving information about a column, this member specifies the address of the buffer that receives the column header text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.Subitem">
      <summary>Gets or sets the index of subitem associated with the column.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.Text">
      <summary>Gets or sets the header text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVCOLUMN.Width">
      <summary>Gets or sets the width.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVFINDINFO">
      <summary>
            Contains information used when searching for a list-view item. This structure is identical to LV_FINDINFO but has been renamed to fit standard naming conventions.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVFINDINFO.#ctor(System.Drawing.Point,System.ConsoleKey)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVFINDINFO" /> struct.</summary>
      <param name="point">The initial search position.</param>
      <param name="searchDirection">The search direction.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVFINDINFO.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVFINDINFO" /> struct.</summary>
      <param name="lParam">The value to compare to the lParam member of a list-view item.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVFINDINFO.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVFINDINFO" /> struct.</summary>
      <param name="searchString">The search string.</param>
      <param name="allowPartial">if set to <c>true</c> if <paramref name="searchString" /> is the beginning of an item's text.</param>
      <param name="wrap">if set to <c>true</c> continues the search at the beginning if no match is found.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVFINDINFO.flags">
      <summary>Type of search to perform.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVFINDINFO.lParam">
      <summary>
            Value to compare with the lParam member of a list-view item's LVITEM structure. It is valid only if LVFI_PARAM is set in the flags member.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVFINDINFO.psz">
      <summary>
            Address of a null-terminated string to compare with the item text. It is valid only if LVFI_STRING or LVFI_PARTIAL is set in the flags member.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVFINDINFO.pt">
      <summary>POINT structure with the initial search position. It is valid only if LVFI_NEARESTXY is set in the flags member.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVFINDINFO.vkDirection">
      <summary>Virtual key code that specifies the direction to search.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVGROUP">
      <summary>Used to set and retrieve groups.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVGROUP.#ctor(Vanara.PInvoke.ComCtl32.ListViewGroupMask,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVGROUP" /> class.</summary>
      <param name="mask">The mask.</param>
      <param name="header">The header text.</param>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.Alignment">
      <summary>Gets or sets the alignment.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cbSize">
      <summary>Size of this structure, in bytes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cchDescriptionBottom">
      <summary>Size in TCHARs of the buffer pointed to by the pszDescriptionBottom member. If the structure is not receiving information about a group, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cchDescriptionTop">
      <summary>Size in TCHARs of the buffer pointed to by the pszDescriptionTop member. If the structure is not receiving information about a group, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cchFooter">
      <summary>Size in TCHARs of the buffer pointed to by the pszFooter member. If the structure is not receiving information about a group, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cchHeader">
      <summary>Size in TCHARs of the buffer pointed to by the pszHeader member. If the structure is not receiving information about a group, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cchSubsetTitle">
      <summary>Size in TCHARs of the buffer pointed to by the pszSubsetTitle member. If the structure is not receiving information about a group, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cchSubtitle">
      <summary>Size, in TCHARs, of the buffer pointed to by the pszSubtitle member. If the structure is not receiving information about a group, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cchTask">
      <summary>Size in TCHARs of the buffer pointed to by the pszTask member. If the structure is not receiving information about a group, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.cItems">
      <summary>Read-only in non-owner data mode.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.DescriptionBottom">
      <summary>Gets or sets the bottom description text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.DescriptionTop">
      <summary>Gets or sets the top description text.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVGROUP.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.ExtendedImageIndex">
      <summary>Gets or sets the index of the extended image.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.FirstItem">
      <summary>Gets the first item.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.Footer">
      <summary>Gets or sets the footer.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.Header">
      <summary>Gets or sets the header text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.ID">
      <summary>Gets or sets the identifier.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.iExtendedImage">
      <summary>Index of the extended image in the control imagelist.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.iFirstItem">
      <summary>Read-only.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.iGroupId">
      <summary>ID of the group.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.ItemCount">
      <summary>Gets the item count.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.iTitleImage">
      <summary>Index of the title image in the control imagelist.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.mask">
      <summary>Mask that specifies which members of the structure are valid input.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.pszDescriptionBottom">
      <summary>Pointer to a null-terminated string that contains the bottom description text when item information is being set. If group information is being retrieved, this member specifies the address of the buffer that receives the bottom description text. This item is drawn under the top description text when there is a title image, no extended image, and uAlign==LVGA_HEADER_CENTER.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.pszDescriptionTop">
      <summary>Pointer to a null-terminated string that contains the top description text when item information is being set. If group information is being retrieved, this member specifies the address of the buffer that receives the top description text. This item is drawn opposite the title image when there is a title image, no extended image, and uAlign==LVGA_HEADER_CENTER.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.pszFooter">
      <summary>Pointer to a null-terminated string that contains the footer text when item information is being set. If group information is being retrieved, this member specifies the address of the buffer that receives the footer text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.pszHeader">
      <summary>Pointer to a null-terminated string that contains the header text when item information is being set. If group information is being retrieved, this member specifies the address of the buffer that receives the header text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.pszSubsetTitle">
      <summary>NULL if group is not a subset. Pointer to a null-terminated string that contains the subset title text when item information is being set. If group information is being retrieved, this member specifies the address of the buffer that receives the subset title text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.pszSubtitle">
      <summary>Pointer to a null-terminated string that contains the subtitle text when item information is being set. If group information is being retrieved, this member specifies the address of the buffer that receives the subtitle text. This element is drawn under the header text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.pszTask">
      <summary>Pointer to a null-terminated string that contains the text for a task link when item information is being set. If group information is being retrieved, this member specifies the address of the buffer that receives the task text. This item is drawn right-aligned opposite the header text. When clicked by the user, the task link generates an LVN_LINKCLICK notification.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVGROUP.SetState(Vanara.PInvoke.ComCtl32.ListViewGroupState,System.Boolean)">
      <summary>Sets the state.</summary>
      <param name="gState">State of the g.</param>
      <param name="on">if set to <c>true</c> [on].</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.state">
      <summary>Flag that can have one of the following values:</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.stateMask">
      <summary>Mask used with LVM_GETGROUPINFO and LVM_SETGROUPINFO to specify which flags in the state value are being retrieved or set.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.Subtitle">
      <summary>Gets or sets the subtitle.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.TaskLink">
      <summary>Gets or sets the task link text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVGROUP.TitleImageIndex">
      <summary>Gets or sets the index of the title image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUP.uAlign">
      <summary>Indicates the alignment of the header or footer text for the group. It can have one or more of the following values. Use one of the header flags. Footer flags are optional.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS">
      <summary>Contains information about the display of groups in a list-view control.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS" /> class.</summary>
      <param name="left">The width of the left border.</param>
      <param name="top">The width of the top border.</param>
      <param name="right">The width of the right border.</param>
      <param name="bottom">The width of the bottom border.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.#ctor(Vanara.PInvoke.ComCtl32.ListViewGroupMetricsMask)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS" /> class.</summary>
      <param name="mask">The mask.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.Bottom">
      <summary>Specifies the width of the bottom border in all group views.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.cbSize">
      <summary>Size of the LVGROUPMETRICS structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.crBottom">
      <summary>Specifies the color of the bottom border. Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.crFooter">
      <summary>Specifies the color of the footer text. Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.crHeader">
      <summary>Specifies the color of the header text. Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.crLeft">
      <summary>Specifies the color of the left border. Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.crRight">
      <summary>Specifies the color of the right border. Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.crTop">
      <summary>Specifies the color of the top border. Not implemented.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.Left">
      <summary>Specifies the width of the left border in icon, small icon, or tile view.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.mask">
      <summary>Flags that specify which members contain or are to receive valid data. </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.Right">
      <summary>Specifies the width of the right border in icon, small icon, or tile view.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.SetBorderSize(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the size of the border.</summary>
      <param name="left">The left.</param>
      <param name="top">The top.</param>
      <param name="right">The right.</param>
      <param name="bottom">The bottom.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVGROUPMETRICS.Top">
      <summary>Specifies the width of the top border in all group views.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVHITTESTINFO">
      <summary>
            Contains information about a hit test. This structure has been extended to accommodate subitem hit-testing. It is used in association with the LVM_HITTEST and LVM_SUBITEMHITTEST messages and their related macros. This structure supersedes the LVHITTESTINFO structure.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVHITTESTINFO.#ctor(System.Drawing.Point)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVHITTESTINFO" /> class.</summary>
      <param name="pt">The pt.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVHITTESTINFO.flags">
      <summary>The variable that receives information about the results of a hit test. This member can be one or more of the following values:
            <para>You can use LVHT_ABOVE, LVHT_BELOW, LVHT_TOLEFT, and LVHT_TORIGHT to determine whether to scroll the contents of a list-view control.Two of these values may be combined. For example, if the position is above and to the left of the client area, you could use both LVHT_ABOVE and LVHT_TOLEFT.</para><para>You can test for LVHT_ONITEM to determine whether a specified position is over a list-view item. This value is a bitwise-OR operation on LVHT_ONITEMICON, LVHT_ONITEMLABEL, and LVHT_ONITEMSTATEICON.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVHITTESTINFO.iGroup">
      <summary>Windows Vista. Group index of the item hit (read only). Valid only for owner data. If the point is within an item that is displayed in multiple groups then iGroup will specify the group index of the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVHITTESTINFO.iItem">
      <summary>Receives the index of the matching item. Or if hit-testing a subitem, this value represents the subitem's parent item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVHITTESTINFO.iSubItem">
      <summary>Version 4.70. Receives the index of the matching subitem. When hit-testing an item, this member will be zero.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVHITTESTINFO.pt">
      <summary>The position to hit test, in client coordinates.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVINSERTMARK">
      <summary>Used to describe insertion points.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVINSERTMARK.#ctor(System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVINSERTMARK" /> struct.</summary>
      <param name="insertAfter">if set to <c>true</c> the insertion point appears after the item specified.</param>
      <param name="insertAtItem">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>insertAtItem</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.LVINSERTMARK.#ctor(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVINSERTMARK.cbSize">
      <summary>Size of the LVINSERTMARK structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVINSERTMARK.dwFlags">
      <summary>Flag that specifies where the insertion point should appear.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVINSERTMARK.dwReserved">
      <summary>Reserved. Must be zero.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVINSERTMARK.iItem">
      <summary>Item next to which the insertion point appears. If this member contains -1, there is no insertion point.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVITEM">
      <summary>
            Specifies or receives the attributes of a list-view item. This structure has been updated to support a new mask value (LVIF_INDENT) that enables item indenting. This structure supersedes the LV_ITEM structure.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVITEM.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVITEM" /> class.</summary>
      <param name="item">Zero-based index of the item.</param>
      <param name="subitem">One-based index of the subitem or zero if this structure refers to an item rather than a subitem.</param>
      <param name="text">The item text.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVITEM.#ctor(System.Int32,System.Int32,Vanara.PInvoke.ComCtl32.ListViewItemMask,Vanara.PInvoke.ComCtl32.ListViewItemState)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVITEM" /> class.</summary>
      <param name="item">Zero-based index of the item.</param>
      <param name="subitem">One-based index of the subitem.</param>
      <param name="mask">The mask of items to retrieve.</param>
      <param name="stateMask">The state items to retrieve.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.cchTextMax">
      <summary>Number of TCHARs in the buffer pointed to by pszText, including the terminating NULL.
            <para>This member is only used when the structure receives item attributes.It is ignored when the structure specifies item attributes.For example, cchTextMax is ignored during LVM_SETITEM and LVM_INSERTITEM.It is read-only during LVN_GETDISPINFO and other LVN_ notifications.</para><note>Never copy more than cchTextMax TCHARs—where cchTextMax includes the terminating NULL—into pszText during an LVN_ notification, otherwise your program can fail.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.cColumns">
      <summary>Version 6.0 Number of data columns (subitems) to display for this item in tile view. The maximum value is 20. If this value is I_COLUMNSCALLBACK, the size of the column array and the array itself (puColumns) are obtained by sending a LVN_GETDISPINFO notification.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.CutOrPaste">
      <summary>Gets or sets a value indicating whether the item is marked for a cut-and-paste operation.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.DropHighlighted">
      <summary>Gets or sets a value indicating whether the item is highlighted as a drag-and-drop target.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.Focused">
      <summary>Gets or sets a value indicating whether this item has the focus.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.GroupId">
      <summary>Gets or sets the group identifier.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.iGroup">
      <summary>Windows Vista: Group index of the item. Valid only for owner data/callback (single item in multiple groups).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.iGroupId">
      <summary>Version 6.0 Identifier of the group that the item belongs to, or one of the following values: I_GROUPIDCALLBACK = The listview control sends the parent an LVN_GETDISPINFO notification code to retrieve the index of the group; I_GROUPIDNONE = The item does not belong to a group.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.iImage">
      <summary>Index of the item's icon in the control's image list. This applies to both the large and small image list. If this member is the I_IMAGECALLBACK value, the parent window is responsible for storing the index. In this case, the list-view control sends the parent an LVN_GETDISPINFO notification code to retrieve the index when it needs to display the image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.iIndent">
      <summary>Version 4.70. Number of image widths to indent the item. A single indentation equals the width of an item image. Therefore, the value 1 indents the item by the width of one image, the value 2 indents by two images, and so on. Note that this field is supported only for items. Attempting to set subitem indentation will cause the calling function to fail.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.iItem">
      <summary>Zero-based index of the item to which this structure refers.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.ImageIndex">
      <summary>Gets or sets the index of the image.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.Indent">
      <summary>Gets or sets the indent.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.iSubItem">
      <summary>One-based index of the subitem to which this structure refers, or zero if this structure refers to an item rather than a subitem.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.lParam">
      <summary>Value specific to the item. If you use the LVM_SORTITEMS message, the list-view control passes this value to the application-defined comparison function. You can also use the LVM_FINDITEM message to search a list-view control for an item with a specified lParam value.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.LParam">
      <summary>Gets or sets the l parameter.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.mask">
      <summary>Set of flags that specify which members of this structure contain data to be set or which members are being requested. This member can have one or more of the following flags set:</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.OverlayImageIndex">
      <summary>Gets or sets the index of the overlay image.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">OverlayImageIndex - Overlay image index must be between 0 and 15</exception>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.piColFmt">
      <summary>Windows Vista: Not implemented. Windows 7 and later: A pointer to an array of the following flags (alone or in combination), specifying the format of each subitem in extended tile view.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.pszText">
      <summary>If the structure specifies item attributes, pszText is a pointer to a null-terminated string containing the item text. When responding to an LVN_GETDISPINFO notification, be sure that this pointer remains valid until after the next notification has been received.
            <para>If the structure receives item attributes, pszText is a pointer to a buffer that receives the item text. Note that although the list-view control allows any length string to be stored as item text, only the first 260 TCHARs are displayed.</para><para>If the value of pszText is LPSTR_TEXTCALLBACK, the item is a callback item.If the callback text changes, you must explicitly set pszText to LPSTR_TEXTCALLBACK and notify the list-view control of the change by sending an LVM_SETITEM or LVM_SETITEMTEXT message.</para><para>Do not set pszText to LPSTR_TEXTCALLBACK if the list-view control has the LVS_SORTASCENDING or LVS_SORTDESCENDING style.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.puColumns">
      <summary>Version 6.0 A pointer to an array of column indices, specifying which columns are displayed for this item, and the order of those columns.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.Selected">
      <summary>Gets or sets a value indicating whether this item is selected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.state">
      <summary>Indicates the item's state, state image, and overlay image. The stateMask member indicates the valid bits of this member.
            <para>Bits 0 through 7 of this member contain the item state flags. This can be one or more of the item state values.</para><para>Bits 8 through 11 of this member specify the one-based overlay image index. Both the full-sized icon image list and the small icon image list can have overlay images. The overlay image is superimposed over the item's icon image. If these bits are zero, the item has no overlay image. To isolate these bits, use the LVIS_OVERLAYMASK mask. To set the overlay image index in this member, you should use the INDEXTOOVERLAYMASK macro. The image list's overlay images are set with the ImageList_SetOverlayImage function.</para><para>Bits 12 through 15 of this member specify the state image index. The state image is displayed next to an item's icon to indicate an application-defined state. If these bits are zero, the item has no state image. To isolate these bits, use the LVIS_STATEIMAGEMASK mask. To set the state image index, use the INDEXTOSTATEIMAGEMASK macro. The state image index specifies the index of the image in the state image list that should be drawn. The state image list is specified with the LVM_SETIMAGELIST message.</para></summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.StateFlags">
      <summary>Gets the state flags.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.StateImageIndex">
      <summary>Gets or sets the index of the state image.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">StateImageIndex - State image index must be between 0 and 15</exception>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEM.stateMask">
      <summary>Value specifying which bits of the state member will be retrieved or modified. For example, setting this member to LVIS_SELECTED will cause only the item's selection state to be retrieved.
            <para>This member allows you to modify one or more item states without having to retrieve all of the item states first.For example, setting this member to LVIS_SELECTED and state to zero will cause the item's selection state to be cleared, but none of the other states will be affected.</para><para>To retrieve or modify all of the states, set this member to(UINT)-1.</para><para>You can use the macro ListView_SetItemState both to set and to clear bits.</para></summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.Text">
      <summary>Gets or sets the text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVITEM.TileColumns">
      <summary>Gets or sets the tile columns.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVITEM.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVITEMCOLUMNINFO">
      <summary>Helper structure for <see cref="T:Vanara.PInvoke.ComCtl32.LVITEM" /> to easily capture column order and format information.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVITEMCOLUMNINFO.#ctor(System.UInt32,Vanara.PInvoke.ComCtl32.ListViewColumnFormat)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVITEMCOLUMNINFO" /> struct.</summary>
      <param name="colIdx">Index of the column.</param>
      <param name="fmt">The format of the column.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEMCOLUMNINFO.columnIndex">
      <summary>The column index</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEMCOLUMNINFO.format">
      <summary>Windows Vista: Not implemented. Windows 7 and later: A flag specifying the format of this column in extended tile view.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVITEMINDEX">
      <summary>Contains index information about a list-view item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEMINDEX.iGroup">
      <summary>The index of the group the item belongs to.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVITEMINDEX.iItem">
      <summary>The index of the item.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO">
      <summary>Provides information about a list-view control when it is displayed in tile view.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.#ctor(Vanara.PInvoke.ComCtl32.ListViewTileViewMask)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO" /> struct.</summary>
      <param name="mask">The mask.</param>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.AutoSize">
      <summary>Gets or sets a value indicating whether to size the tiles automatically.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.cbSize">
      <summary>Size of the LVTILEVIEWINFO structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.cLines">
      <summary>Maximum number of text lines in each item label, not counting the title.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.dwFlags">
      <summary>Flags that determines how the tiles are sized in tile view. This member may be one of the following values.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.dwMask">
      <summary>Mask that determines which members are valid. This member may be one of the following values.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.MaxTextLines">
      <summary>Gets or sets the maximum number of text lines in each item label, not counting the title.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.rcLabelMargin">
      <summary>RECT that contains coordinates of the label margin.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.sizeTile">
      <summary>Size of an individual tile. Values for dimensions not specified as fixed in dwFlags are ignored.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.TileHeight">
      <summary>Gets or sets the height of an individual tile.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.TilePadding">
      <summary>Gets or sets the tile padding.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.TileSize">
      <summary>Gets or sets the size of an individual tile.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.LVTILEVIEWINFO.TileWidth">
      <summary>Gets or sets the width of an individual tile.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMBCDROPDOWN">
      <summary>Contains information about a BCN_DROPDOWN notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMBCDROPDOWN.hdr">
      <summary>An NMHDR structure containing information about the notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMBCDROPDOWN.rcButton">
      <summary>A RECT structure that contains the client area of the button.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMBCHOTITEM">
      <summary>Contains information about the movement of the mouse over a button control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMBCHOTITEM.dwFlags">
      <summary>The action of the mouse. This parameter can be one of the following values combined with HICF_MOUSE.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMBCHOTITEM.hdr">
      <summary>An NMHDR structure.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMCBEDRAGBEGIN">
      <summary>Contains information used with the CBEN_DRAGBEGIN notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEDRAGBEGIN.hdr">
      <summary>The NMHDR structure that contains information about the notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEDRAGBEGIN.iItemId">
      <summary>
            The zero-based index of the item being dragged. This value will always be -1, indicating that the item being dragged is the item displayed in the
            edit portion of the control.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEDRAGBEGIN.szText">
      <summary>The character buffer that contains the text of the item being dragged.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT">
      <summary>
            Contains information about the conclusion of an edit operation within a ComboBoxEx control. This structure is used with the CBEN_ENDEDIT notification code.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT.fChanged">
      <summary>
            A value indicating whether the contents of the control's edit box have changed. This value is nonzero if the contents have been modified, or zero otherwise.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT.hdr">
      <summary>The NMHDR structure that contains information about the notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT.iNewSelection">
      <summary>
            The zero-based index of the item that will be selected after completing the edit operation. This value can be CB_ERR if no item will be selected.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT.iWhy">
      <summary>A value that specifies the action that generated the CBEN_ENDEDIT notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCBEENDEDIT.szText">
      <summary>A zero-terminated string that contains the text from within the control's edit box.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMCOMBOBOXEX">
      <summary>Contains information specific to ComboBoxEx items for use with notification codes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCOMBOBOXEX.ceItem">
      <summary>
            The COMBOBOXEXITEM structure that holds item information specific to the current notification. Upon receiving a notification code, the
            COMBOBOXEXITEM structure holds information required for the owner to respond. The members of this structure are often used as fields for the
            owner to return values in response to the notification.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCOMBOBOXEX.hdr">
      <summary>The NMHDR structure that contains information about the notification code.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW">
      <summary>Contains information specific to an NM_CUSTOMDRAW notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW.dwDrawStage">
      <summary>The current drawing stage.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW.dwItemSpec">
      <summary>
            The item number. What is contained in this member will depend on the type of control that is sending the notification. See the NM_CUSTOMDRAW
            notification reference for the specific control to determine what, if anything, is contained in this member.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW.hdc">
      <summary>A handle to the control's device context. Use this HDC to perform any GDI functions.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW.hdr">
      <summary>An NMHDR structure that contains information about this notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW.lItemlParam">
      <summary>Application-defined item data.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW.rc">
      <summary>
            The RECT structure that describes the bounding rectangle of the area being drawn. This member is initialized only by the CDDS_ITEMPREPAINT
            notification. Version 5.80. This member is also initialized by the CDDS_PREPAINT notification.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMDRAW.uItemState">
      <summary>The current item state.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMCUSTOMSPLITRECTINFO">
      <summary>Contains information about the two rectangles of a split button. Sent with the NM_GETCUSTOMSPLITRECT notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMSPLITRECTINFO.hdr">
      <summary>An NMHDR structure that contains information about the notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMSPLITRECTINFO.rcButton">
      <summary>A RECT structure that describes the rectangle that does not contain the drop-down arrow.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMSPLITRECTINFO.rcClient">
      <summary>A RECT structure that describes the client area the button occupies.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMCUSTOMSPLITRECTINFO.rcSplit">
      <summary>A RECT structure that describes the rectangle that contains the drop-down arrow.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMHDDISPINFO">
      <summary>Contains information used in handling HDN_GETDISPINFO notification codes.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Vanara.PInvoke.ComCtl32.NMHDDISPINFO</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.cchTextMax">
      <summary>The size of the buffer that pszText points to.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.hdr">
      <summary>NMHDR structure containing information about this notification code</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.iImage">
      <summary>
            The zero-based index of an image within the image list. The specified image will be displayed with the header item, but it does not take the
            place of the item's bitmap. If iImage is set to I_IMAGECALLBACK, the control requests image information for this item by using an HDN_GETDISPINFO
            notification code.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.iItem">
      <summary>The zero-based index of the item in the header control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.lParam">
      <summary>An application-defined value to associate with the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.mask">
      <summary>A set of bit flags specifying which members of the structure must be filled in by the owner of the header control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDDISPINFO.pszText">
      <summary>A pointer to a null-terminated string containing the text that will be displayed for the header item.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMHDFILTERBTNCLICK">
      <summary>Specifies or receives the attributes of a filter button click.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.NMHDFILTERBTNCLICK.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Vanara.PInvoke.ComCtl32.NMHDFILTERBTNCLICK</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDFILTERBTNCLICK.hdr">
      <summary>A handle of an NMHDR structure that contains additional information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDFILTERBTNCLICK.iItem">
      <summary>The zero-based index of the control to which this structure refers.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHDFILTERBTNCLICK.rc">
      <summary>A pointer to a RECT structure that contains the client rectangle for the filter button.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMHEADER">
      <summary>Contains information about header control notification messages. This structure supersedes the HD_NOTIFY structure.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.NMHEADER.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Vanara.PInvoke.ComCtl32.NMHEADER</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHEADER.iButton">
      <summary>
            A value specifying the index of the mouse button used to generate the notification message. This member can be one of the following values:
            <list type="table"><listheader><term>Value</term><term>Meaning</term></listheader><item><term>0</term><description>Left button</description></item><item><term>1</term><description>Right button</description></item><item><term>2</term><description>Middle button</description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHEADER.iItem">
      <summary>The zero-based index of the header item that is the focus of the notification message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHEADER.nmhdr">
      <summary>A NMHDR structure that contains information about the notification message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMHEADER.pItem">
      <summary>
            An optional pointer to an HDITEM structure containing information about the item specified by iItem. The mask member of the HDITEM structure
            indicates which of its members are valid.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMIPADDRESS">
      <summary>Contains information for the IPN_FIELDCHANGED notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMIPADDRESS.hdr">
      <summary>An NMHDR structure that contains additional information about the notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMIPADDRESS.iField">
      <summary>The zero-based number of the field that was changed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMIPADDRESS.iValue">
      <summary>The new value of the field specified in the iField member. While processing the IPN_FIELDCHANGED notification, this member can be set to any value that is within the range of the field and the control will place this new value in the field.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMLISTVIEW">
      <summary>
            Contains information about a list-view notification message. This structure is the same as the NM_LISTVIEW structure but has been renamed to fit
            standard naming conventions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.hdr">
      <summary>NMHDR structure that contains information about this notification message</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.iItem">
      <summary>Identifies the list-view item, or -1 if not used.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.iSubItem">
      <summary>Identifies the subitem, or zero if none.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.lParam">
      <summary>Application-defined value of the item. This member is undefined for notification messages that do not use it.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.ptAction">
      <summary>
            POINT structure that indicates the location at which the event occurred. This member is undefined for notification messages that do not use it.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.uChanged">
      <summary>
            Set of flags that indicate the item attributes that have changed. This member is zero for notifications that do not use it. Otherwise, it can
            have the same values as the mask member of the LVITEM structure.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.uNewState">
      <summary>
            New item state. This member is zero for notification messages that do not use it. For a list of possible values, see List-View Item States.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMLISTVIEW.uOldState">
      <summary>
            Old item state. This member is zero for notification messages that do not use it. For a list of possible values, see List-View Item States.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTRBTHUMBPOSCHANGING">
      <summary>Contains information about a trackbar change notification. This message is sent with the TRBN_THUMBPOSCHANGING notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTRBTHUMBPOSCHANGING.dwPos">
      <summary>Position on trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTRBTHUMBPOSCHANGING.hdr">
      <summary>A NMHDR structure that describes the notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTRBTHUMBPOSCHANGING.nReason">
      <summary>
            Type of movement as one of the following values: TB_LINEUP, TB_LINEDOWN, TB_PAGEUP, TB_PAGEDOWN, TB_THUMBPOSITION, TB_THUMBTRACK, TB_TOP,
            TB_BOTTOM, or TB_ENDTRACK.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTREEVIEW">
      <summary>
            Contains information about a tree-view notification message. This structure is identical to the NM_TREEVIEW structure, but it has been renamed to follow current naming conventions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTREEVIEW.action">
      <summary>Notification-specific action flag. This member is used with the following notification codes: TVN_ITEMEXPANDING, TVN_ITEMEXPANDED, TVN_SELCHANGING, TVN_SELCHANGED. For the possible action flag values, see TVM_EXPAND and TVN_SELCHANGED.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTREEVIEW.hdr">
      <summary>NMHDR structure that contains information about this notification message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTREEVIEW.itemNew">
      <summary>TVITEM structure that contains information about the new item state. This member is zero for notification messages that do not use it.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTREEVIEW.itemOld">
      <summary>TVITEM structure that contains information about the old item state. This member is zero for notification messages that do not use it.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTREEVIEW.ptDrag">
      <summary>POINT structure that contains the client coordinates of the mouse at the time the event occurred that caused the notification message to be sent.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTTDISPINFO">
      <summary>Contains information used in handling the TTN_GETDISPINFO notification code. This structure supersedes the TOOLTIPTEXT structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTTDISPINFO.hdr">
      <summary>NMHDR structure that contains additional information about the notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTTDISPINFO.hinst">
      <summary>Handle to the instance that contains a string resource to be used as the tooltip text. If lpszText is the address of the tooltip text string, this member must be NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTTDISPINFO.lParam">
      <summary>Version 4.70. Application-defined data associated with the tool.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTTDISPINFO.lpszText">
      <summary>Pointer to a null-terminated string that will be displayed as the tooltip text. If hinst specifies an instance handle, this member must be the identifier of a string resource.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTTDISPINFO.szText">
      <summary>Buffer that receives the tooltip text. An application can copy the text to this buffer instead of specifying a string address or string resource. For tooltip text that exceeds 80 TCHARs, see comments in the remarks section of this document.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTTDISPINFO.uFlags">
      <summary>Flags that indicates how to interpret the idFrom member of the included NMHDR structure.
            <list type="table"><listheader><term>Value</term><term>Meaning</term></listheader><item><term>TTF_IDISHWND</term><description>If this flag is set, idFrom is the tool's handle. Otherwise, it is the tool's identifier.</description></item><item><term>TTF_RTLREADING</term><description>Windows can be mirrored to display languages such as Hebrew or Arabic that read right-to-left (RTL). Normally, tooltip text is read in same direction as the text in its parent window. To have a tooltip read in the opposite direction from its parent window, add the TTF_RTLREADING flag to the uFlags member when processing the notification.</description></item><item><term>TTF_DI_SETITEM</term><description>Version 4.70. If you add this flag to uFlags while processing the notification, the tooltip control will retain the supplied information and not request it again.</description></item></list></summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW">
      <summary>
            Contains an explanation of why the draw of an icon or overlay tree item failed. This structure is sent on a TVN_ASYNCDRAW notification. Set the dwRetFlags member to indicate what action the control should take. Note that a draw can fail if there is no image; in other words, when the icon image has not been extracted.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW.dwRetFlags">
      <summary>Action that the sender (the tree-view control) should execute on return.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW.hdr">
      <summary>NMHDR structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW.hItem">
      <summary>Handle of the tree item that failed to draw.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW.hr">
      <summary>Result code indicating why the draw failed, either ILDRF_IMAGELOWQUALITY, ILDRF_OVERLAYLOWQUALITY, E_PENDING, or S_OK. A code of S_OK indicates that the image is present but not at the required image quality.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW.iRetImageIndex">
      <summary>Index of the image to draw in the image list. Used if ADRF_DRAWIMAGE is returned in dwRetFlags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW.lParam">
      <summary>Data for hItem. This is the same data for the item that is retrieved with the message TVM_GETITEM using the appropriate mask in structure TVITEM. This data is parent specific; the parent can store information that helps it identify the tree item or other information. Data is provided in lParam for convenience, so that the parent does not need to send message TVM_GETITEM.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVASYNCDRAW.pimldp">
      <summary>IMAGELISTDRAWPARAMS structure describing the image that failed to draw.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTVCUSTOMDRAW">
      <summary>Contains information specific to an NM_CUSTOMDRAW (tree view) notification code sent by a tree-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVCUSTOMDRAW.clrText">
      <summary>COLORREF value representing the color that will be used to display text foreground in the tree-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVCUSTOMDRAW.clrTextBk">
      <summary>COLORREF value representing the color that will be used to display text background in the tree-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVCUSTOMDRAW.iLevel">
      <summary>Version 4.71. Zero-based level of the item being drawn. The root item is at level zero, a child of the root item is at level one, and so on.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVCUSTOMDRAW.nmcd">
      <summary>NMCUSTOMDRAW structure that contains general custom draw information.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTVDISPINFO">
      <summary>
            Contains and receives display information for a tree-view item. This structure is identical to the TV_DISPINFO structure, but it has been renamed to
            follow current naming conventions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVDISPINFO.hdr">
      <summary>NMHDR structure that contains information about this notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVDISPINFO.item">
      <summary>TVITEM structure that identifies and contains information about the tree-view item. The mask member of the TVITEM structure specifies which information is being set or retrieved.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTVDISPINFOEX">
      <summary>Contains information pertaining to extended TreeView notification information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVDISPINFOEX.hdr">
      <summary>NMHDR structure that contains information about this notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVDISPINFOEX.item">
      <summary>Specifies or receives attributes of a TreeView item.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTVGETINFOTIP">
      <summary>
            Contains and receives tree-view item information needed to display a tooltip for an item. This structure is used with the TVN_GETINFOTIP notification code.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVGETINFOTIP.cchTextMax">
      <summary>Size of the buffer at pszText, in characters. Although you should never assume that this buffer will be of any particular size, the INFOTIPSIZE value can be used for design purposes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVGETINFOTIP.hdr">
      <summary>NMHDR structure that contains information about this notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVGETINFOTIP.hItem">
      <summary>Tree handle to the item for which the tooltip is being displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVGETINFOTIP.lParam">
      <summary>Application-defined data associated with the item for which the tooltip is being displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVGETINFOTIP.pszText">
      <summary>Address of a character buffer that contains the text to be displayed. If you want to change the text displayed in the tooltip, you will need to modify the contents of this buffer. The size of this buffer is specified by the cchTextMax structure.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTVITEMCHANGE">
      <summary>Contains information on a tree-view item change. This structure is sent with the TVN_ITEMCHANGED and TVN_ITEMCHANGING notifications.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVITEMCHANGE.hdr">
      <summary>NMHDR structure that contains information about the notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVITEMCHANGE.hItem">
      <summary>Handle to the changed tree-view item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVITEMCHANGE.lParam">
      <summary>Reserved for application specific data. For example, a value to associate with the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVITEMCHANGE.uChanged">
      <summary>Specifies the attribute. The only supported attribute is state. uChanged must have the following value: TVIF_STATE = The change is the state attribute.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVITEMCHANGE.uStateNew">
      <summary>Flag that specifies the new item state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVITEMCHANGE.uStateOld">
      <summary>Flag that specifies the item's previous state.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.NMTVKEYDOWN">
      <summary>
            Contains information about a keyboard event in a tree-view control. This structure is used with the TVN_KEYDOWN notification code. The structure is identical to the TV_KEYDOWN structure, but it has been renamed to follow current naming conventions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVKEYDOWN.flags">
      <summary>Always zero.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVKEYDOWN.hdr">
      <summary>NMHDR structure that contains information about this notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.NMTVKEYDOWN.wVKey">
      <summary>Virtual key code.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PBRANGE">
      <summary>Contains information about the high and low limits of a progress bar control. This structure is used with the PBM_GETRANGE message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PBRANGE.iHigh">
      <summary>High limit for the progress bar control. This is a signed integer.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PBRANGE.iLow">
      <summary>Low limit for the progress bar control. This is a signed integer.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PFNTVCOMPARE">
      <summary>
            An application-defined callback function, which is called during a sort operation each time the relative order of two list items needs to be compared.
            </summary>
      <param name="lParam1">Corresponds to the lParam member of the first TVITEM structure for the two items being compared.</param>
      <param name="lParam2">Corresponds to the lParam member of the second TVITEM structure for the two items being compared.</param>
      <param name="lParamSort">Corresponds to the lParam member of this structure.</param>
      <returns>
            The callback function must return a negative value if the first item should precede the second, a positive value if the first item should follow the
            second, or zero if the two items are equivalent.
            </returns>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ProgressMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ProgressMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ProgressState">
      <summary>State of the progress bar used in PBM_SETSTATE and PBM_GETSTATE messages.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ProgressState.PBST_NORMAL">
      <summary>In progress</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ProgressState.PBST_ERROR">
      <summary>Error.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ProgressState.PBST_PAUSED">
      <summary>Paused.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ProgressStyle">
      <summary>The following control styles are supported by Progress Bar controls:</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ProgressStyle.PBS_SMOOTH">
      <summary>Version 4.70 or later. The progress bar displays progress status in a smooth scrolling bar instead of the default segmented bar.
            <note type="note">This style is supported only in the Windows Classic theme. All other themes override this style.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ProgressStyle.PBS_VERTICAL">
      <summary>Version 4.70 or later. The progress bar displays progress status vertically, from bottom to top.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ProgressStyle.PBS_MARQUEE">
      <summary>Version 6.0 or later. The progress indicator does not grow in size but instead moves repeatedly along the length of the bar, indicating activity without specifying what proportion of the progress is complete.
            <note type="note">Comctl32.dll version 6 is not redistributable but it is included in Windows or later. To use Comctl32.dll version 6, specify it in a manifest. For more information on manifests, see Enabling Visual Styles.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ProgressStyle.PBS_SMOOTHREVERSE">
      <summary>Version 6.0 or later and Windows Vista. Determines the animation behavior that the progress bar should use when moving backward (from a higher value to a lower value). If this is set, then a "smooth" transition will occur, otherwise the control will "jump" to the lower value.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PropSheetCallbackMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.PropSheetCallbackMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetCallbackMessage.PSCB_BUTTONPRESSED">
      <summary>Version 6.0 and later.Indicates the user pressed a button in the property sheet dialog box.To enable this, specify PSH_USECALLBACK in PROPSHEETHEADER.dwFlags and specify the name of this callback function in PROPSHEETHEADER.pfnCallback. The lParam value is one of the following. Note that only PSBTN_CANCEL is valid when you are using the Aero wizard style(PSH_AEROWIZARD).
            <list type="table"><listheader><term>Button pressed</term><term>lParam value</term></listheader><item><term>OK</term><term>PSBTN_OK</term></item><item><term>Cancel</term><term>PSBTN_CANCEL</term></item><item><term>Apply</term><term>PSBTN_APPLYNOW</term></item><item><term>Close</term><term>PSBTN_FINISH</term></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetCallbackMessage.PSCB_INITIALIZED">
      <summary>
            Indicates that the property sheet is being initialized. The lParam value is zero for this message.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetCallbackMessage.PSCB_PRECREATE">
      <summary>
            Indicates that the property sheet is about to be created. The hwndDlg parameter is NULL, and the lParam parameter is the address of a dialog template in memory. This template is in the form of a DLGTEMPLATE or DLGTEMPLATEEX structure followed by one or more DLGITEMTEMPLATE structures. This message is not applicable if you are using the Aero wizard style (PSH_AEROWIZARD).
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PropSheetFlags">
      <summary>Flags used by the <see cref="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.dwFlags" /> field.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_DEFAULT">
      <summary>Uses the default meaning for all structure members. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_DLGINDIRECT">
      <summary>Creates the page from the dialog box template in memory pointed to by the pResource member. The PropertySheet function assumes that the template that is in memory is not write-protected. A read-only template will cause an exception in some versions of Windows.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_HASHELP">
      <summary>Enables the property sheet Help button when the page is active. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_HIDEHEADER">
      <summary>Version 5.80 and later. Causes the wizard property sheet to hide the header area when the page is selected. If a watermark has been provided, it will be painted on the left side of the page. This flag should be set for welcome and completion pages, and omitted for interior pages. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_PREMATURE">
      <summary>Version 4.71 or later. Causes the page to be created when the property sheet is created. If this flag is not specified, the page will not be created until it is selected the first time. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_RTLREADING">
      <summary>Reverses the direction in which pszTitle is displayed. Normal windows display all text, including pszTitle, left-to-right (LTR). For languages such as Hebrew or Arabic that read right-to-left (RTL), a window can be mirrored and all text will be displayed RTL. If PSP_RTLREADING is set, pszTitle will instead read RTL in a normal parent window, and LTR in a mirrored parent window.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USECALLBACK">
      <summary>Calls the function specified by the pfnCallback member when creating or destroying the property sheet page defined by this structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USEFUSIONCONTEXT">
      <summary>Version 6.0 and later. Use an activation context. To use an activation context, you must set this flag and assign the activation context handle to hActCtx. See the Remarks.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USEHEADERSUBTITLE">
      <summary>Version 5.80 or later. Displays the string pointed to by the pszHeaderSubTitle member as the subtitle of the header area of a Wizard97 page. To use this flag, you must also set the PSH_WIZARD97 flag in the dwFlags member of the associated PROPSHEETHEADER structure. The PSP_USEHEADERSUBTITLE flag is ignored if PSP_HIDEHEADER is set. In Aero-style wizards, the title appears near the top of the client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USEHEADERTITLE">
      <summary>Version 5.80 or later. Displays the string pointed to by the pszHeaderTitle member as the title in the header of a Wizard97 interior page. You must also set the PSH_WIZARD97 flag in the dwFlags member of the associated PROPSHEETHEADER structure. The PSP_USEHEADERTITLE flag is ignored if PSP_HIDEHEADER is set. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USEHICON">
      <summary>Uses hIcon as the small icon on the tab for the page. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USEICONID">
      <summary>Uses pszIcon as the name of the icon resource to load and use as the small icon on the tab for the page. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USEREFPARENT">
      <summary>Maintains the reference count specified by the pcRefParent member for the lifetime of the property sheet page created from this structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetFlags.PSP_USETITLE">
      <summary>Uses the pszTitle member as the title of the property sheet dialog box instead of the title stored in the dialog box template. This flag is not supported when using the Aero-style wizard (PSH_AEROWIZARD).</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER">
      <summary>Defines the frame and pages of a property sheet.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.dwFlags">
      <summary>Flags that indicate which options to use when creating the property sheet page.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.dwSize">
      <summary>
            Size, in bytes, of this structure. The property sheet manager uses this member to determine which version of the PROPSHEETHEADER structure you
            are using. For more information, see the Remarks.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.hbmHeader">
      <summary>
            Version 5.80 or later. Handle to the header bitmap. If the dwFlags member does not include PSH_USEHBMHEADER, this member is ignored.
            <para><c>OR</c></para><para>
            Version 5.80 or later. Bitmap resource to use as the header. This member can specify either the identifier of the bitmap resource or the address
            of the string that specifies the name of the bitmap resource. If the dwFlags member includes PSH_USEHBMHEADER, this member is ignored.
            </para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.hbmWatermark">
      <summary>
            Version 5.80 or later. Handle to the watermark bitmap. If the dwFlags member does not include PSH_USEHBMWATERMARK, this member is ignored.
            <para><c>OR</c></para><para>
            Version 5.80 or later. Bitmap resource to use as the watermark. This member can specify either the identifier of the bitmap resource or the
            address of the string that specifies the name of the bitmap resource. If the dwFlags member includes PSH_USEHBMWATERMARK, this member is ignored.
            </para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.hInstance">
      <summary>
            Handle to the instance from which to load the icon or title string resource. If the pszIcon or pszCaption member identifies a resource to load,
            this member must be specified.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.hplWatermark">
      <summary>
            Version 5.80 or later. HPALETTE structure used for drawing the watermark bitmap and/or header bitmap. If the dwFlags member does not include
            PSH_USEHPLWATERMARK, this member is ignored.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.hwndParent">
      <summary>Handle to the property sheet's owner window.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.nPages">
      <summary>Number of elements in the phpage array.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.pfnCallback">
      <summary>
            Pointer to an application-defined callback function that is called when the property sheet is initialized. For more information about the
            callback function, see the description of the PropSheetProc function. If the dwFlags member does not include PSH_USECALLBACK, this member is ignored.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.phpage">
      <summary>
            Pointer to an array of PROPSHEETPAGE structures that define the pages in the property sheet. If the dwFlags member does not include
            PSH_PROPSHEETPAGE, this member is ignored. Note that the PROPSHEETPAGE structure is variable in size. Applications that parse the array pointed
            to by ppsp must take the size of each page into account. This member is declared as a union with phpage.
            <para><c>OR</c></para><para>
            Pointer to an array of handles to the property sheet pages. Each handle must have been created by a previous call to the CreatePropertySheetPage
            function. If the dwFlags member includes PSH_PROPSHEETPAGE, phpage is ignored and should be set to NULL. When the PropertySheet function returns,
            any HPROPSHEETPAGE handles in the phpage array will have been destroyed. This member is declared as a union with ppsp.
            </para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.pIcon">
      <summary>
            Handle to the icon to use as the small icon in the title bar of the property sheet dialog box. If the dwFlags member does not include
            PSH_USEHICON, this member is ignored. This member is declared as a union with pszIcon.
            <para><c>OR</c></para><para>
            String icon resource to use as the small icon in the title bar of the property sheet dialog box. This member can specify either the identifier of
            the icon resource or the address of the string that specifies the name of the icon resource. If the dwFlags member does not include
            PSH_USEICONID, this member is ignored. This member is declared as a union with hIcon.
            </para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.pStartPage">
      <summary>
            Zero-based index of the initial page that appears when the property sheet dialog box is created. This member is declared as a union with pStartPage.
            <para><c>OR</c></para><para>
            Name of the initial page that appears when the property sheet dialog box is created. This member can specify either the identifier of a string
            resource or the address of a string that specifies the name. This member is declared as a union with nStartPage.
            </para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.pszCaption">
      <summary>
            Title of the property sheet dialog box. This member can specify either the identifier of a string resource or the address of a string that
            specifies the title. If the dwFlags member includes PSH_PROPTITLE, the string "Properties for" is inserted at the beginning of the title. This
            field is ignored for Wizard97 wizards. For Aero wizards, the string alone is used for the caption, regardless of whether the PSH_PROPTITLE flag
            is set.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags">
      <summary>Flags used by the <see cref="F:Vanara.PInvoke.ComCtl32.PROPSHEETHEADER.dwFlags" /> field.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_DEFAULT">
      <summary>Uses the default meaning for all structure members, and creates a normal property sheet. This flag has a value of zero and is not combined with other flags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_AEROWIZARD">
      <summary>Version 6.00 and Windows Vista.. Creates a wizard property sheet that uses the newer Aero style. The PSH_WIZARD flag must also be set. The single-threaded apartment (STA) model must be used.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_HASHELP">
      <summary>Permits property sheet pages to display a Help button. You must also set the PSP_HASHELP flag in the page's PROPSHEETPAGE structure when the page is created. If any of the initial property sheet pages enable a Help button, PSH_HASHELP will be set automatically. If none of the initial pages enable a Help button, you must explicitly set PSH_HASHELP if you want to have Help buttons on any pages that might be added later. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_HEADER">
      <summary>Version 5.80 and later. Indicates that a header bitmap will be used with a Wizard97 wizard. You must also set the PSH_WIZARD97 flag. The header bitmap is obtained from the pszbmHeader member, unless the PSH_USEHBMHEADER flag is also set. In that case, the header bitmap is obtained from the hbmHeader member. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_HEADERBITMAP">
      <summary>Version 6.00 and Windows Vista..The pszbmHeader member specifies a bitmap that is displayed in the header area. Must be used in combination with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_MODELESS">
      <summary>Causes the PropertySheet function to create the property sheet as a modeless dialog box instead of as a modal dialog box. When this flag is set, PropertySheet returns immediately after the dialog box is created, and the return value from PropertySheet is the window handle to the property sheet dialog box. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_NOAPPLYNOW">
      <summary>Removes the Apply button. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_NOCONTEXTHELP">
      <summary>Version 5.80 and later. Removes the context-sensitive Help button ("?"), which is usually present on the caption bar of property sheets. This flag is not valid for wizards. See About Property Sheets for a discussion of how to remove the caption bar Help button for earlier versions of the common controls. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_NOMARGIN">
      <summary>Version 6.00 and Windows Vista.. Specifies that no margin is inserted between the page and the frame. Must be used in combination with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_PROPSHEETPAGE">
      <summary>Uses the ppsp member and ignores the phpage member when creating the pages for the property sheet.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_PROPTITLE">
      <summary>Displays a title in the title bar of the property sheet. The title takes the appropriate form for the Windows version. In more recent versions of Windows, the title is the string specified by the pszCaption followed by the string "Properties". In older versions of Windows, the title is the string "Properties for", followed by the string specified by the pszCaption member. This flag is not supported for wizards.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_RESIZABLE">
      <summary>Allows the wizard to be resized by the user. Maximize and minimize buttons appear in the wizard's frame and the frame is sizable. To use this flag, you must also set PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_RTLREADING">
      <summary>Displays the title of the property sheet (pszCaption) using right-to-left (RTL) reading order for Hebrew or Arabic languages. If this flag is not specified, the title is displayed in left-to-right (LTR) reading order.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_STRETCHWATERMARK">
      <summary>Stretches the watermark in Internet Explorer 4.0-compatible Wizard97-style wizards. This flag is not supported in conjunction with PSH_AEROWIZARD. <note>This style flag is only included to provide backward compatibility for certain applications. Its use is not recommended, and it is only supported by common controls versions 4.0 and 4.01. With common controls version 5.80 and later, this flag is ignored.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USECALLBACK">
      <summary>Calls the function specified by the pfnCallback member when initializing the property sheet defined by this structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USEHBMHEADER">
      <summary>Version 5.80 or later. Obtains the header bitmap from the hbmHeader member instead of the pszbmHeader member. You must also set either the PSH_AEROWIZARD flag or the PSH_WIZARD97 flag together with the PSH_HEADER flag.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USEHBMWATERMARK">
      <summary>Version 5.80 or later. Obtains the watermark bitmap from the hbmWatermark member instead of the pszbmWatermark member. You must also set PSH_WIZARD97 and PSH_WATERMARK. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USEHICON">
      <summary>Uses hIcon as the small icon in the title bar of the property sheet dialog box.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USEHPLWATERMARK">
      <summary>Version 5.80 or later. Uses the HPALETTE structure pointed to by the hplWatermark member instead of the default palette to draw the watermark bitmap and/or header bitmap for a Wizard97 wizard. You must also set PSH_WIZARD97, and PSH_WATERMARK or PSH_HEADER. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USEICONID">
      <summary>Uses pszIcon as the name of the icon resource to load and use as the small icon in the title bar of the property sheet dialog box.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USEPAGELANG">
      <summary>Version 5.80 or later. Specifies that the language for the property sheet will be taken from the first page's resource. That page must be specified by resource identifier.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_USEPSTARTPAGE">
      <summary>Uses the pStartPage member instead of the nStartPage member when displaying the initial page of the property sheet.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_WATERMARK">
      <summary>Version 5.80 or later. Specifies that a watermark bitmap will be used with a Wizard97 wizard on pages that have the PSP_HIDEHEADER style. You must also set the PSH_WIZARD97 flag. The watermark bitmap is obtained from the pszbmWatermark member, unless PSH_USEHBMWATERMARK is set. In that case, the header bitmap is obtained from the hbmWatermark member. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_WIZARD">
      <summary>Creates a wizard property sheet. When using PSH_AEROWIZARD, you must also set this flag.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_WIZARD97">
      <summary>Version 5.80 or later. Creates a Wizard97-style property sheet, which supports bitmaps in the header of interior pages and on the left side of exterior pages. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_WIZARDCONTEXTHELP">
      <summary>Adds a context-sensitive Help button ("?"), which is usually absent from the caption bar of a wizard. This flag is not valid for regular property sheets. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_WIZARDHASFINISH">
      <summary>Always displays the Finish button on the wizard. You must also set either PSH_WIZARD, PSH_WIZARD97, or PSH_AEROWIZARD.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetHeaderFlags.PSH_WIZARD_LITE">
      <summary>Version 5.80 or later. Uses the Wizard-lite style. This style is similar in appearance to PSH_WIZARD97, but it is implemented much like PSH_WIZARD. There are few restrictions on how the pages are formatted. For instance, there are no enforced borders, and the PSH_WIZARD_LITE style does not paint the watermark and header bitmaps for you the way Wizard97 does. This flag is not supported in conjunction with PSH_AEROWIZARD.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE">
      <summary>Defines a page in a property sheet.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.dwFlags">
      <summary>Flags that indicate which options to use when creating the property sheet page.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.dwSize">
      <summary>Size, in bytes, of this structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.hActCtx">
      <summary>
            Version 6.0 or later. An activation context handle. Set this member to the handle that is returned when you create the activation context with
            CreateActCtx. The system will activate this context before creating the dialog box. You do not need to use this member if you use a global manifest.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.hIcon">
      <summary>
            Handle to the icon to use as the icon in the tab of the page. If the dwFlags member does not include PSP_USEHICON, this member is ignored. This
            member is declared as a union with pszIcon.
            <para><c>OR</c></para><para>
            Icon resource to use as the icon in the tab of the page. This member can specify either the identifier of the icon resource or the address of the
            string that specifies the name of the icon resource. To use this member, you must set the PSP_USEICONID flag in the dwFlags member. This member
            is declared as a union with hIcon.
            </para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.hInstance">
      <summary>
            Handle to the instance from which to load an icon or string resource. If the pszIcon, pszTitle, pszHeaderTitle, or pszHeaderSubTitle member
            identifies a resource to load, hInstance must be specified.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.lParam">
      <summary>
            When the page is created, a copy of the page's PROPSHEETPAGE structure is passed to the dialog box procedure with a WM_INITDIALOG message. The
            lParam member is provided to allow you to pass application-specific information to the dialog box procedure. It has no effect on the page itself.
            For more information, see Property Sheet Creation.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.pcRefParent">
      <summary>Pointer to the reference count value. To use this member, you must set the PSP_USEREFPARENT flag in the dwFlags member.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.pfnCallback">
      <summary>
            Pointer to an application-defined callback function that is called when the page is created and when it is about to be destroyed. For more
            information about the callback function, see PropSheetPageProc. To use this member, you must set the PSP_USECALLBACK flag in the dwFlags member.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.pfnDlgProc">
      <summary>
            Pointer to the dialog box procedure for the page. Because the pages are created as modeless dialog boxes, the dialog box procedure must not call
            the EndDialog function.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.pszHeaderSubTitle">
      <summary>
            Version 5.80 or later. Subtitle of the header area. To use this member, you must do the following:
            <list type="bullet"><item><term>Set the PSP_USEHEADERSUBTITLE flag in the dwFlags member.</term></item><item><term>Set the PSH_WIZARD97 flag in the dwFlags member of the page's PROPSHEETHEADER structure.</term></item><item><term>Make sure that the PSP_HIDEHEADER flag in the dwFlags member is not set.</term></item></list><note>This member is ignored when using the Aero-style wizard (PSH_AEROWIZARD).</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.pszHeaderTitle">
      <summary>
            Version 5.80 or later. Title of the header area. To use this member under the Wizard97-style wizard, you must also do the following:
            <list type="bullet"><item><term>Set the PSP_USEHEADERTITLE flag in the dwFlags member.</term></item><item><term>Set the PSH_WIZARD97 flag in the dwFlags member of the page's PROPSHEETHEADER structure.</term></item><item><term>Make sure that the PSP_HIDEHEADER flag in the dwFlags member is not set.</term></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.pszTemplate">
      <summary>
            Dialog box template to use to create the page. This member can specify either the resource identifier of the template or the address of a string
            that specifies the name of the template. If the PSP_DLGINDIRECT flag in the dwFlags member is set, pszTemplate is ignored. This member is
            declared as a union with pResource.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PROPSHEETPAGE.pszTitle">
      <summary>
            Title of the property sheet dialog box. This title overrides the title specified in the dialog box template. This member can specify either the
            identifier of a string resource or the address of a string that specifies the title. To use this member, you must set the PSP_USETITLE flag in
            the dwFlags member.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PropSheetPageCallbackAction">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.PropSheetPageCallbackAction</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetPageCallbackAction.PSPCB_ADDREF">
      <summary>Version 5.80 or later. A page is being created. The return value is not used.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetPageCallbackAction.PSPCB_RELEASE">
      <summary>A page is being destroyed. The return value is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.PropSheetPageCallbackAction.PSPCB_CREATE">
      <summary>A dialog box for a page is being created. Return nonzero to allow it to be created, or zero to prevent it.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PropSheetPageProc">
      <summary>
            Specifies an application-defined callback function that a property sheet calls when a page is created and when it is about to be destroyed. An application can use this function to perform initialization and cleanup operations for the page.
            </summary>
      <param name="hwnd">Reserved; must be NULL.</param>
      <param name="uMsg">Action flag.</param>
      <param name="ppsp">Pointer to a PROPSHEETPAGE structure that defines the page being created or destroyed. See the Remarks section for further discussion.</param>
      <returns>The return value depends on the value of the uMsg parameter.</returns>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.PropSheetProc">
      <summary>
            An application-defined callback function that the system calls when the property sheet is being created and initialized.
            </summary>
      <param name="hwndDlg">Handle to the property sheet dialog box.</param>
      <param name="uMsg">
            Message being received.This parameter is one of the following values.
            <list type="table"><listheader><term>Value</term><term>Meaning</term></listheader><item><term>PSCB_BUTTONPRESSED</term><term>Version 6.0 and later.Indicates the user pressed a button in the property sheet dialog box.To enable this, specify PSH_USECALLBACK in PROPSHEETHEADER.dwFlags and specify the name of this callback function in PROPSHEETHEADER.pfnCallback. The lParam value is one of the following. Note that only PSBTN_CANCEL is valid when you are using the Aero wizard style(PSH_AEROWIZARD).
            <list type="table"><listheader><term>Button pressed</term><term>lParam value</term></listheader><item><term>OK</term><term>PSBTN_OK</term></item><item><term>Cancel</term><term>PSBTN_CANCEL</term></item><item><term>Apply</term><term>PSBTN_APPLYNOW</term></item><item><term>Close</term><term>PSBTN_FINISH</term></item></list><para>Note that Comctl32.dll versions 6 and later are not redistributable.To use these versions of Comctl32.dll, specify the particular version in a manifest. For more information on manifests, see Enabling Visual Styles.</para></term></item><item><term>PSCB_INITIALIZED</term><term>Indicates that the property sheet is being initialized. The lParam value is zero for this message.</term></item><item><term>PSCB_PRECREATE</term><term>Indicates that the property sheet is about to be created. The hwndDlg parameter is NULL, and the lParam parameter is the address of a dialog template in memory.This template is in the form of a DLGTEMPLATE or DLGTEMPLATEEX structure followed by one or more DLGITEMTEMPLATE structures.This message is not applicable if you are using the Aero wizard style(PSH_AEROWIZARD).</term></item></list></param>
      <param name="lParam">Additional information about the message. The meaning of this value depends on the uMsg parameter.
            <para>If uMsg is PSCB_INITIALIZED or PSCB_BUTTONPRESSED, the value of lParam is zero.</para><para>If uMsg is PSCB_PRECREATE, then lParam will be a pointer to either a DLGTEMPLATE or DLGTEMPLATEEX structure describing the property sheet dialog box. Test the signature of the structure to determine the type. If signature is equal to 0xFFFF then the structure is an extended dialog template, otherwise the structure is a standard dialog template.</para></param>
      <returns>Returns zero.</returns>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.SplitButtonInfoMask">
      <summary>A set of flags that specify which members of <see cref="T:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO" /> contain data to be set or which members are being requested.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoMask.BCSIF_GLYPH">
      <summary>himlGlyph is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoMask.BCSIF_IMAGE">
      <summary>himlGlyph is valid. Use when uSplitStyle is set to BCSS_IMAGE.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoMask.BCSIF_STYLE">
      <summary>uSplitStyle is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoMask.BCSIF_SIZE">
      <summary>size is valid.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.SplitButtonInfoStyle">
      <summary>The split button style for the uSplitStyle member of <see cref="T:Vanara.PInvoke.ComCtl32.BUTTON_SPLITINFO" />.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoStyle.BCSS_NOSPLIT">
      <summary>No split.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoStyle.BCSS_STRETCH">
      <summary>Stretch glyph, but try to retain aspect ratio.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoStyle.BCSS_ALIGNLEFT">
      <summary>Align the image or glyph horizontally with the left margin.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.SplitButtonInfoStyle.BCSS_IMAGE">
      <summary>Draw an icon image as the glyph.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TabControlHitTestFlags">
      <summary>Variable that receives the results of a hit test.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlHitTestFlags.TCHT_NOWHERE">
      <summary>The position is not over a tab.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlHitTestFlags.TCHT_ONITEMICON">
      <summary>The position is over a tab's icon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlHitTestFlags.TCHT_ONITEMLABEL">
      <summary>The position is over a tab's text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlHitTestFlags.TCHT_ONITEM">
      <summary>The position is over a tab but not over its icon or its text. For owner-drawn tab controls, this value is specified if the position is anywhere over a tab.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TabControlItemMask">
      <summary>Value that specifies which members of TCITEM to retrieve or set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemMask.TCIF_TEXT">
      <summary>The pszText member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemMask.TCIF_IMAGE">
      <summary>The iImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemMask.TCIF_RTLREADING">
      <summary>The string pointed to by pszText will be displayed in the direction opposite to the text in the parent window.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemMask.TCIF_PARAM">
      <summary>The lParam member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemMask.TCIF_STATE">
      <summary>Version 4.70. The dwState member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemMask.TCIF_ALL">
      <summary>All members are valid.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TabControlItemStates">
      <summary>
            Tab control items now support an item state to support the TCM_DESELECTALL message. Additionally, the TCITEM structure supports item state values.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemStates.TCIS_BUTTONPRESSED">
      <summary>Version 4.70. The tab control item is selected. This state is only meaningful if the TCS_BUTTONS style flag has been set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemStates.TCIS_HIGHLIGHTED">
      <summary>Version 4.71. The tab control item is highlighted, and the tab and text are drawn using the current highlight color. When using high-color, this will be a true interpolation, not a dithered color.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlItemStates.TCIS_ALL">
      <summary>Look at all states.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TabControlMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.TabControlMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TabControlNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.TabControlNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TabControlStyles">
      <summary>This section lists supported tab control styles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_SCROLLOPPOSITE">
      <summary>Version 4.70. Unneeded tabs scroll to the opposite side of the control when a tab is selected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_BOTTOM">
      <summary>Version 4.70. Tabs appear at the bottom of the control. This value equals TCS_RIGHT. This style is not supported if you use ComCtl32.dll version 6.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_RIGHT">
      <summary>Version 4.70. Tabs appear vertically on the right side of controls that use the TCS_VERTICAL style. This value equals TCS_BOTTOM. This style is not supported if you use visual styles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_MULTISELECT">
      <summary>Version 4.70. Multiple tabs can be selected by holding down the CTRL key when clicking. This style must be used with the TCS_BUTTONS style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_FLATBUTTONS">
      <summary>Version 4.71. Selected tabs appear as being indented into the background while other tabs appear as being on the same plane as the background. This style only affects tab controls with the TCS_BUTTONS style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_FORCEICONLEFT">
      <summary>Icons are aligned with the left edge of each fixed-width tab. This style can only be used with the TCS_FIXEDWIDTH style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_FORCELABELLEFT">
      <summary>Labels are aligned with the left edge of each fixed-width tab; that is, the label is displayed immediately to the right of the icon instead of being centered. This style can only be used with the TCS_FIXEDWIDTH style, and it implies the TCS_FORCEICONLEFT style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_HOTTRACK">
      <summary>Version 4.70. Items under the pointer are automatically highlighted. You can check whether hot tracking is enabled by calling SystemParametersInfo.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_VERTICAL">
      <summary>Version 4.70. Tabs appear at the left side of the control, with tab text displayed vertically. This style is valid only when used with the TCS_MULTILINE style. To make tabs appear on the right side of the control, also use the TCS_RIGHT style. This style is not supported if you use ComCtl32.dll version 6.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_TABS">
      <summary>Tabs appear as tabs, and a border is drawn around the display area. This style is the default.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_BUTTONS">
      <summary>Tabs appear as buttons, and no border is drawn around the display area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_SINGLELINE">
      <summary>Only one row of tabs is displayed. The user can scroll to see more tabs, if necessary. This style is the default.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_MULTILINE">
      <summary>Multiple rows of tabs are displayed, if necessary, so all tabs are visible at once.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_RIGHTJUSTIFY">
      <summary>The width of each tab is increased, if necessary, so that each row of tabs fills the entire width of the tab control. This window style is ignored unless the TCS_MULTILINE style is also specified.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_FIXEDWIDTH">
      <summary>All tabs are the same width. This style cannot be combined with the TCS_RIGHTJUSTIFY style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_RAGGEDRIGHT">
      <summary>Rows of tabs will not be stretched to fill the entire width of the control. This style is the default.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_FOCUSONBUTTONDOWN">
      <summary>The tab control receives the input focus when clicked.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_OWNERDRAWFIXED">
      <summary>The parent window is responsible for drawing tabs.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_TOOLTIPS">
      <summary>The tab control has a tooltip control associated with it.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStyles.TCS_FOCUSNEVER">
      <summary>The tab control does not receive the input focus when clicked.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TabControlStylesEx">
      <summary>
            The tab control now supports extended styles. These styles are manipulated using the TCM_GETEXTENDEDSTYLE and TCM_SETEXTENDEDSTYLE messages and should not be confused with extended window styles that are passed to CreateWindowEx.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStylesEx.TCS_EX_FLATSEPARATORS">
      <summary>Version 4.71. The tab control will draw separators between the tab items. This extended style only affects tab controls that have the TCS_BUTTONS and TCS_FLATBUTTONS styles. By default, creating the tab control with the TCS_FLATBUTTONS style sets this extended style. If you do not require separators, you should remove this extended style after creating the control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TabControlStylesEx.TCS_EX_REGISTERDROP">
      <summary>Version 4.71. The tab control generates TCN_GETOBJECT notification codes to request a drop target object when an object is dragged over the tab items in the control. The application must call CoInitialize or OleInitialize before setting this style.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TASKDIALOG_BUTTON">
      <summary>
            The TASKDIALOG_BUTTON structure contains information used to display a button in a task dialog. The TASKDIALOGCONFIG structure uses this structure.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_BUTTON.nButtonID">
      <summary>Indicates the value to be returned when this button is selected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_BUTTON.pszButtonText">
      <summary>Pointer that references the string to be used to label the button. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro. When using Command Links, you delineate the command from the note by placing a new line character in the string.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS">
      <summary>Specifies the push buttons displayed in the task dialog. If no common buttons are specified and no custom buttons are specified using the cButtons and pButtons members, the task dialog will contain the OK button by default. This parameter may be a combination of flags</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS.TDCBF_OK_BUTTON">
      <summary>The task dialog contains the push button: OK.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS.TDCBF_YES_BUTTON">
      <summary>The task dialog contains the push button: Yes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS.TDCBF_NO_BUTTON">
      <summary>The task dialog contains the push button: No.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS.TDCBF_CANCEL_BUTTON">
      <summary>
            The task dialog contains the push button: Cancel. If this button is specified, the task dialog will respond to typical cancel actions (Alt-F4 and Escape).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS.TDCBF_RETRY_BUTTON">
      <summary>The task dialog contains the push button: Retry.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_COMMON_BUTTON_FLAGS.TDCBF_CLOSE_BUTTON">
      <summary>The task dialog contains the push button: Close.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TASKDIALOG_ELEMENTS">
      <summary>Indicates element to update for the TDM_UPDATE_ELEMENT_TEXT message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_ELEMENTS.TDE_CONTENT">
      <summary>The content element.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_ELEMENTS.TDE_EXPANDED_INFORMATION">
      <summary>Expanded Information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_ELEMENTS.TDE_FOOTER">
      <summary>Footer.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_ELEMENTS.TDE_MAIN_INSTRUCTION">
      <summary>Main Instructions</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS">
      <summary>Specifies the behavior of the task dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_ENABLE_HYPERLINKS">
      <summary>Enables hyperlink processing for the strings specified in the pszContent, pszExpandedInformation and pszFooter members. When enabled, these members may point to strings that contain hyperlinks in the following form:
            <code>&lt;A HREF = "executablestring" &gt; Hyperlink Text&lt;/A&gt;</code><note type="warning">Enabling hyperlinks when using content from an unsafe source may cause security vulnerabilities.</note><note>Task Dialogs will not actually execute any hyperlinks.Hyperlink execution must be handled in the callback function specified by pfCallback.For more details, see TaskDialogCallbackProc.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_USE_HICON_MAIN">
      <summary>Indicates that the dialog should use the icon referenced by the handle in the hMainIcon member as the primary icon in the task dialog. If this flag is specified, the pszMainIcon member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_USE_HICON_FOOTER">
      <summary>Indicates that the dialog should use the icon referenced by the handle in the hFooterIcon member as the footer icon in the task dialog. If this flag is specified, the pszFooterIcon member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_ALLOW_DIALOG_CANCELLATION">
      <summary>Indicates that the dialog should be able to be closed using Alt-F4, Escape, and the title bar's close button even if no cancel button is specified in either the dwCommonButtons or pButtons members.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_USE_COMMAND_LINKS">
      <summary>Indicates that the buttons specified in the pButtons member are to be displayed as command links (using a standard task dialog glyph) instead of push buttons. When using command links, all characters up to the first new line character in the pszButtonText member will be treated as the command link's main text, and the remainder will be treated as the command link's note. This flag is ignored if the cButtons member is zero.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_USE_COMMAND_LINKS_NO_ICON">
      <summary>Indicates that the buttons specified in the pButtons member are to be displayed as command links (without a glyph) instead of push buttons. When using command links, all characters up to the first new line character in the pszButtonText member will be treated as the command link's main text, and the remainder will be treated as the command link's note. This flag is ignored if the cButtons member is zero.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_EXPAND_FOOTER_AREA">
      <summary>Indicates that the string specified by the pszExpandedInformation member is displayed at the bottom of the dialog's footer area instead of immediately after the dialog's content. This flag is ignored if the pszExpandedInformation member is NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_EXPANDED_BY_DEFAULT">
      <summary>Indicates that the string specified by the pszExpandedInformation member is displayed when the dialog is initially displayed. This flag is ignored if the pszExpandedInformation member is NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_VERIFICATION_FLAG_CHECKED">
      <summary>Indicates that the verification checkbox in the dialog is checked when the dialog is initially displayed. This flag is ignored if the pszVerificationText parameter is NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_SHOW_PROGRESS_BAR">
      <summary>Indicates that a Progress Bar is to be displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_SHOW_MARQUEE_PROGRESS_BAR">
      <summary>Indicates that an Marquee Progress Bar is to be displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_CALLBACK_TIMER">
      <summary>Indicates that the task dialog's callback is to be called approximately every 200 milliseconds.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_POSITION_RELATIVE_TO_WINDOW">
      <summary>Indicates that the task dialog is positioned (centered) relative to the window specified by hwndParent. If the flag is not supplied (or no hwndParent member is specified), the task dialog is positioned (centered) relative to the monitor.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_RTL_LAYOUT">
      <summary>Indicates that text is displayed reading right to left.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_NO_DEFAULT_RADIO_BUTTON">
      <summary>Indicates that no default item will be selected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_CAN_BE_MINIMIZED">
      <summary>Indicates that the task dialog can be minimized.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_NO_SET_FOREGROUND">
      <summary>Don't call SetForegroundWindow() when activating the dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_FLAGS.TDF_SIZE_TO_CONTENT">
      <summary>
            Indicates that the width of the task dialog is determined by the width of its content area. This flag is ignored if cxWidth is not set to 0.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TASKDIALOG_ICON_ELEMENTS">
      <summary>Indicates which icon element to update for the TDM_UPDATE_ICON message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_ICON_ELEMENTS.TDIE_ICON_MAIN">
      <summary>Main instruction icon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOG_ICON_ELEMENTS.TDIE_ICON_FOOTER">
      <summary>Footer icon.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TaskDialogCallbackProc">
      <summary>The signature of the callback that receives messages from the Task Dialog when various events occur.</summary>
      <param name="hwnd">The window handle of the</param>
      <param name="msg">The message being passed.</param>
      <param name="wParam">wParam which is interpreted differently depending on the message.</param>
      <param name="lParam">wParam which is interpreted differently depending on the message.</param>
      <param name="refData">The reference data that was set to TaskDialog.CallbackData.</param>
      <returns>A HRESULT value. The return value is specific to the message being processed.</returns>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG">
      <summary>The TASKDIALOGCONFIG structure contains information used to display a task dialog. The TaskDialogIndirect function uses this structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.cbSize">
      <summary>Specifies the structure size, in bytes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.cButtons">
      <summary>The number of entries in the pButtons array that is used to create buttons or command links in the task dialog. If this member is zero and no common buttons have been specified using the dwCommonButtons member, then the task dialog will have a single OK button displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.cRadioButtons">
      <summary>The number of entries in the pRadioButtons array that is used to create radio buttons in the task dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.cxWidth">
      <summary>The width of the task dialog's client area, in dialog units. If 0, the task dialog manager will calculate the ideal width.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.dwCommonButtons">
      <summary>Specifies the push buttons displayed in the task dialog. If no common buttons are specified and no custom buttons are specified using the cButtons and pButtons members, the task dialog will contain the OK button by default. This parameter may be a combination of flags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.dwFlags">
      <summary>Specifies the behavior of the task dialog. This parameter can be a combination of flags.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.footerIcon">
      <summary>A handle to an Icon that is to be displayed in the footer of the task dialog. This member is ignored unless the TDF_USE_HICON_FOOTER flag is specified and the pszFooterIcon is not. If this member is NULL and the TDF_USE_HICON_FOOTER is specified, no icon is displayed.
            <para><c>OR</c></para><para>Pointer that references the icon to be displayed in the footer area of the task dialog. This parameter is ignored if the TDF_USE_HICON_FOOTER flag is specified, or if pszFooter is NULL. Otherwise, if this parameter is NULL or the hInstance parameter is NULL, no icon is displayed. This parameter must be an integer resource identifier passed to the MAKEINTRESOURCE macro or one of the predefined values listed for pszMainIcon.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.hInstance">
      <summary>Handle to the module that contains the icon resource identified by the pszMainIcon or pszFooterIcon members, and the string resources identified by the pszWindowTitle, pszMainInstruction, pszContent, pszVerificationText, pszExpandedInformation, pszExpandedControlText, pszCollapsedControlText or pszFooter members.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.hwndParent">
      <summary>Handle to the parent window. This member can be NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.lpCallbackData">
      <summary>A pointer to application-defined reference data. This value is defined by the caller.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.mainIcon">
      <summary>A handle to an Icon that is to be displayed in the task dialog. This member is ignored unless the TDF_USE_HICON_MAIN flag is specified. If this member is NULL and the TDF_USE_HICON_MAIN is specified, no icon will be displayed.
            <para><c>OR</c></para><para>Pointer that references the icon to be displayed in the task dialog. This parameter is ignored if the USE_HICON_MAIN flag is specified. Otherwise, if this parameter is NULL or the hInstance parameter is NULL, no icon will be displayed. This parameter must be an integer resource identifier passed to the MAKEINTRESOURCE macro.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.nDefaultButton">
      <summary>The default button for the task dialog. This may be any of the values specified in nButtonID members of one of the TASKDIALOG_BUTTON structures in the pButtons array, or one of the IDs corresponding to the buttons specified in the dwCommonButtons member. If this member is zero or its value does not correspond to any button ID in the dialog, then the first button in the dialog will be the default.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.nDefaultRadioButton">
      <summary>The button ID of the radio button that is selected by default. If this value does not correspond to a button ID, the first button in the array is selected by default.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pButtons">
      <summary>Pointer to an array of TASKDIALOG_BUTTON structures containing the definition of the custom buttons that are to be displayed in the task dialog. This array must contain at least the number of entries that are specified by the cButtons member.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pfCallbackProc">
      <summary>Pointer to an application-defined callback function. For more information see TaskDialogCallbackProc.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pRadioButtons">
      <summary>Pointer to an array of TASKDIALOG_BUTTON structures containing the definition of the radio buttons that are to be displayed in the task dialog. This array must contain at least the number of entries that are specified by the cRadioButtons member. This parameter can be NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszCollapsedControlText">
      <summary>Pointer that references the string to be used to label the button for expanding the expandable information. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro. This member is ignored when the pszExpandedInformation member is NULL. If this member is NULL and the pszCollapsedControlText is specified, then the pszCollapsedControlText value will be used for this member as well.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszContent">
      <summary>Pointer that references the string to be used for the dialog's primary content. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro. If the ENABLE_HYPERLINKS flag is specified for the dwFlags member, then this string may contain hyperlinks in the form: <A HREF="executablestring">Hyperlink Text</A>. WARNING: Enabling hyperlinks when using content from an unsafe source may cause security vulnerabilities.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszExpandedControlText">
      <summary>Pointer that references the string to be used to label the button for collapsing the expandable information. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro. This member is ignored when the pszExpandedInformation member is NULL. If this member is NULL and the pszCollapsedControlText is specified, then the pszCollapsedControlText value will be used for this member as well.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszExpandedInformation">
      <summary>Pointer that references the string to be used for displaying additional information. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro. The additional information is displayed either immediately below the content or below the footer text depending on whether the TDF_EXPAND_FOOTER_AREA flag is specified. If the TDF_ENABLE_HYPERLINKS flag is specified for the dwFlags member, then this string may contain hyperlinks in the form: <A HREF="executablestring">Hyperlink Text</A>. WARNING: Enabling hyperlinks when using content from an unsafe source may cause security vulnerabilities.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszFooter">
      <summary>Pointer that references the icon to be displayed in the footer area of the task dialog. This parameter is ignored if the TDF_USE_HICON_FOOTER flag is specified, or if pszFooter is NULL. Otherwise, if this parameter is NULL or the hInstance parameter is NULL, no icon is displayed. This parameter must be an integer resource identifier passed to the MAKEINTRESOURCE macro or one of the predefined values listed for pszMainIcon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszMainInstruction">
      <summary>Pointer that references the string to be used for the main instruction. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszVerificationText">
      <summary>Pointer that references the string to be used to label the verification checkbox. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro. If this parameter is NULL, the verification checkbox is not displayed in the task dialog. If the pfVerificationFlagChecked parameter of TaskDialogIndirect is NULL, the checkbox is not enabled.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.pszWindowTitle">
      <summary>Pointer that references the string to be used for the task dialog title. This parameter can be either a null-terminated string or an integer resource identifier passed to the MAKEINTRESOURCE macro. If this parameter is NULL, the filename of the executable program is used.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TaskDialogIcon">
      <summary>The System icons the TaskDialog supports for <see cref="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.footerIcon" /> and <see cref="F:Vanara.PInvoke.ComCtl32.TASKDIALOGCONFIG.mainIcon" />.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_WARNING_ICON">
      <summary>An exclamation-point icon appears in the task dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_ERROR_ICON">
      <summary>A stop-sign icon appears in the task dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_INFORMATION_ICON">
      <summary>An icon consisting of a lowercase letter i in a circle appears in the task dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_SHIELD_ICON">
      <summary>A shield icon appears in the task dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_SHIELDBLUE_ICON">
      <summary>Shield icon on a blue background. Only available on Windows 8 and later.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_SECURITYWARNING_ICON">
      <summary>Warning Shield icon on a yellow background. Only available on Windows 8 and later.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_SECURITYERROR_ICON">
      <summary>Error Shield icon on a red background. Only available on Windows 8 and later.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_SECURITYSUCCESS_ICON">
      <summary>Success Shield icon on a green background. Only available on Windows 8 and later.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogIcon.TD_SHIELDGRAY_ICON">
      <summary>Shield icon on a gray background. Only available on Windows 8 and later.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TaskDialogMessage">
      <summary>TaskDialogMessage taken from CommCtrl.h.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_NAVIGATE_PAGE">
      <summary>Navigate page.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_CLICK_BUTTON">
      <summary>Click button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_SET_MARQUEE_PROGRESS_BAR">
      <summary>Set Progress bar to be marquee mode.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_SET_PROGRESS_BAR_STATE">
      <summary>Set Progress bar state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_SET_PROGRESS_BAR_RANGE">
      <summary>Set progress bar range.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_SET_PROGRESS_BAR_POS">
      <summary>Set progress bar position.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_SET_PROGRESS_BAR_MARQUEE">
      <summary>Set progress bar marquee (animation).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_SET_ELEMENT_TEXT">
      <summary>Set a text element of the Task Dialog.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_CLICK_RADIO_BUTTON">
      <summary>Click a radio button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_ENABLE_BUTTON">
      <summary>Enable or disable a button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_ENABLE_RADIO_BUTTON">
      <summary>Enable or disable a radio button.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_CLICK_VERIFICATION">
      <summary>Check or uncheck the verification checkbox.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_UPDATE_ELEMENT_TEXT">
      <summary>Update the text of an element (no effect if originally set as null).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE">
      <summary>Designate whether a given Task Dialog button or command link should have a User Account Control (UAC) shield icon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogMessage.TDM_UPDATE_ICON">
      <summary>Refreshes the icon of the task dialog.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TaskDialogNotification">
      <summary>Task Dialog callback notifications.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_CREATED">
      <summary>Sent by the task dialog after the dialog has been created and before it is displayed. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_NAVIGATED">
      <summary>
            Sent by a task dialog when navigation has occurred. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_BUTTON_CLICKED">
      <summary>
            Sent by a task dialog when the user selects a button or command link in the task dialog. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method. To prevent the task dialog from closing, the application must return S_FALSE, otherwise the task dialog is closed and the button ID is returned via the original application call.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_HYPERLINK_CLICKED">
      <summary>
            Sent by a task dialog when the user clicks a hyperlink in the task dialog content. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_TIMER">
      <summary>
            Sent by a task dialog approximately every 200 milliseconds. This notification code is sent when the TDF_CALLBACK_TIMER flag has been set in the dwFlags member of the TASKDIALOGCONFIG structure that was passed to the TaskDialogIndirect function. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_DESTROYED">
      <summary>Sent by a task dialog when it is destroyed and its window handle is no longer valid. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_RADIO_BUTTON_CLICKED">
      <summary>
            Sent by a task dialog when the user selects a radio button or command link in the task dialog. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_DIALOG_CONSTRUCTED">
      <summary>Sent by a task dialog after the dialog has been created and before it is displayed. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_VERIFICATION_CLICKED">
      <summary>
            Sent by a task dialog when the user clicks the task dialog verification check box. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_HELP">
      <summary>
            Sent by a task dialog when the user presses F1 on the keyboard while the dialog has focus. This notification code is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TaskDialogNotification.TDN_EXPANDO_BUTTON_CLICKED">
      <summary>
            Sent by the task dialog when the user clicks on the dialog's expando button. This notification is received only through the task dialog callback function, which can be registered using the TaskDialogIndirect method.
            </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TCHITTESTINFO">
      <summary>
            Contains information about a hit test. This structure supersedes the TC_HITTESTINFO structure.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCHITTESTINFO.flags">
      <summary>Variable that receives the results of a hit test. The tab control sets this member to one of the following values:</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCHITTESTINFO.pt">
      <summary>Position to hit test, in client coordinates.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TCITEM">
      <summary>
            Specifies or receives the attributes of a tab item. It is used with the TCM_INSERTITEM, TCM_GETITEM, and TCM_SETITEM messages. This structure
            supersedes the TC_ITEM structure.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TCITEM.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.TCITEM" /> class.</summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TCITEM.#ctor(Vanara.PInvoke.ComCtl32.TabControlItemMask,Vanara.PInvoke.ComCtl32.TabControlItemStates)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.TCITEM" /> class.</summary>
      <param name="itemsToGet">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>itemsToGet</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.TCITEM.#ctor(Vanara.PInvoke.ComCtl32.TabControlItemMask,Vanara.PInvoke.ComCtl32.TabControlItemStates)</parameter>
          </include>
        </markup>
      </param>
      <param name="statesToGet">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>statesToGet</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.TCITEM.#ctor(Vanara.PInvoke.ComCtl32.TabControlItemMask,Vanara.PInvoke.ComCtl32.TabControlItemStates)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEM.cchTextMax">
      <summary>Size in TCHARs of the buffer pointed to by the pszText member. If the structure is not receiving information, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEM.dwState">
      <summary>Version 4.70. Specifies the item's current state if information is being retrieved. If item information is being set, this member contains the state value to be set for the item. For a list of valid tab control item states, see Tab Control Item States. This member is ignored in the TCM_INSERTITEM message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEM.dwStateMask">
      <summary>Version 4.70. Specifies which bits of the dwState member contain valid information. This member is ignored in the TCM_INSERTITEM message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEM.iImage">
      <summary>Index in the tab control's image list, or -1 if there is no image for the tab.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEM.lParam">
      <summary>Application-defined data associated with the tab control item. If more or less than 4 bytes of application-defined data exist per tab, an application must define a structure and use it instead of the TCITEM structure. The first member of the application-defined structure must be a TCITEMHEADER structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEM.mask">
      <summary>Value that specifies which members to retrieve or set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEM.pszText">
      <summary>Pointer to a null-terminated string that contains the tab text when item information is being set. If item information is being retrieved, this member specifies the address of the buffer that receives the tab text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TCITEM.Text">
      <summary>Gets or sets the text.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TCITEMHEADER">
      <summary>
            Specifies or receives the attributes of a tab. It is used with the TCM_INSERTITEM, TCM_GETITEM, and TCM_SETITEM messages. This structure supersedes
            the TC_ITEMHEADER structure.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TCITEMHEADER.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.TCITEM" /> class.</summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TCITEMHEADER.#ctor(Vanara.PInvoke.ComCtl32.TabControlItemMask,Vanara.PInvoke.ComCtl32.TabControlItemStates)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.TCITEM" /> class.</summary>
      <param name="itemsToGet">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>itemsToGet</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.TCITEMHEADER.#ctor(Vanara.PInvoke.ComCtl32.TabControlItemMask,Vanara.PInvoke.ComCtl32.TabControlItemStates)</parameter>
          </include>
        </markup>
      </param>
      <param name="statesToGet">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>statesToGet</parameter>
            <parameter>M:Vanara.PInvoke.ComCtl32.TCITEMHEADER.#ctor(Vanara.PInvoke.ComCtl32.TabControlItemMask,Vanara.PInvoke.ComCtl32.TabControlItemStates)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEMHEADER.cchTextMax">
      <summary>Size in TCHARs of the buffer pointed to by the pszText member. If the structure is not receiving information, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEMHEADER.dwState">
      <summary>Version 4.70. Specifies the item's current state if information is being retrieved. If item information is being set, this member contains the state value to be set for the item. For a list of valid tab control item states, see Tab Control Item States. This member is ignored in the TCM_INSERTITEM message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEMHEADER.dwStateMask">
      <summary>Version 4.70. Specifies which bits of the dwState member contain valid information. This member is ignored in the TCM_INSERTITEM message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEMHEADER.iImage">
      <summary>Index in the tab control's image list, or -1 if there is no image for the tab.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEMHEADER.mask">
      <summary>Value that specifies which members to retrieve or set.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TCITEMHEADER.pszText">
      <summary>Pointer to a null-terminated string that contains the tab text when item information is being set. If item information is being retrieved, this member specifies the address of the buffer that receives the tab text.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TCITEMHEADER.Text">
      <summary>Gets or sets the text.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TOOLINFO">
      <summary>The TOOLINFO structure contains information about a tool in a tooltip control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.cbSize">
      <summary>Size of this structure, in bytes. This member must be specified.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.hinst">
      <summary>Handle to the instance that contains the string resource for the tool. If lpszText specifies the identifier of a string resource, this member is used.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.hwnd">
      <summary>Handle to the window that contains the tool. If lpszText includes the LPSTR_TEXTCALLBACK value, this member identifies the window that receives the TTN_GETDISPINFO notification codes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.lParam">
      <summary>Version 4.70 and later. A 32-bit application-defined value that is associated with the tool.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.lpReserved">
      <summary>Reserved. Must be set to NULL.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.lpszText">
      <summary>Pointer to the buffer that contains the text for the tool, or identifier of the string resource that contains the text. This member is sometimes used to return values. If you need to examine the returned value, must point to a valid buffer of sufficient size. Otherwise, it can be set to NULL. If lpszText is set to LPSTR_TEXTCALLBACK, the control sends the TTN_GETDISPINFO notification code to the owner window to retrieve the text.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.rect">
      <summary>The bounding rectangle coordinates of the tool. The coordinates are relative to the upper-left corner of the client area of the window identified by hwnd. If uFlags includes the TTF_IDISHWND flag, this member is ignored.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.uFlags">
      <summary>Flags that control the tooltip display. This member can be a combination of the following values:</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TOOLINFO.uId">
      <summary>Application-defined identifier of the tool. If uFlags includes the TTF_IDISHWND flag, uId must specify the window handle to the tool.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ToolTipIcon">
      <summary>Specify the icon to be displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipIcon.TTI_NONE">
      <summary>No icon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipIcon.TTI_INFO">
      <summary>Info icon.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipIcon.TTI_WARNING">
      <summary>Warning icon</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipIcon.TTI_ERROR">
      <summary>Error Icon</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipIcon.TTI_INFO_LARGE">
      <summary>Large error Icon</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipIcon.TTI_WARNING_LARGE">
      <summary>Large error Icon</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipIcon.TTI_ERROR_LARGE">
      <summary>Large error Icon</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags">
      <summary>Flags that control the tooltip display.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_IDISHWND">
      <summary>Indicates that the uId member is the window handle to the tool. If this flag is not set, uId is the tool's identifier.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_CENTERTIP">
      <summary>Centers the tooltip window below the tool specified by the uId member.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_RTLREADING">
      <summary>Indicates that the tooltip text will be displayed in the opposite direction to the text in the parent window.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_SUBCLASS">
      <summary>Indicates that the tooltip control should subclass the tool's window to intercept messages, such as WM_MOUSEMOVE. If this flag is not set, you must use the TTM_RELAYEVENT message to forward messages to the tooltip control. For a list of messages that a tooltip control processes, see TTM_RELAYEVENT.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_TRACK">
      <summary>Positions the tooltip window next to the tool to which it corresponds and moves the window according to coordinates supplied by the TTM_TRACKPOSITION messages. You must activate this type of tool using the TTM_TRACKACTIVATE message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_ABSOLUTE">
      <summary>Positions the tooltip window at the same coordinates provided by TTM_TRACKPOSITION. This flag must be used with the TTF_TRACK flag.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_TRANSPARENT">
      <summary>Causes the tooltip control to forward mouse event messages to the parent window. This is limited to mouse events that occur within the bounds of the tooltip window.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_PARSELINKS">
      <summary>Version 6.0 and later. Indicates that links in the tooltip text should be parsed.
            <para>Note that Comctl32.dll version 6 is not redistributable but it is included in Windows or later. To use Comctl32.dll version 6, specify it in a manifest. For more information on manifests, see Enabling Visual Styles.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipInfoFlags.TTF_DI_SETITEM">
      <summary>The TTF di setitem</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ToolTipMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ToolTipMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.ToolTipNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.ToolTipNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipNotification.TTN_GETDISPINFO">
      <summary>Sent by a tooltip control to retrieve information needed to display a tooltip window. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipNotification.TTN_SHOW">
      <summary>Notifies the owner window that a tooltip control is about to be displayed. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipNotification.TTN_POP">
      <summary>Notifies the owner window that a tooltip is about to be hidden. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipNotification.TTN_LINKCLICK">
      <summary>Sent when a text link inside a balloon tooltip is clicked. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.ToolTipNotification.TTN_NEEDTEXT">
      <summary>Sent by a tooltip control to retrieve information needed to display a tooltip window. This notification code is identical to TTN_GETDISPINFO. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TrackBarCustomDraw">
      <summary>Custom Draw values, for example, are specified in the dwItemSpec member of the NMCUSTOMDRAW structure.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarCustomDraw.TBCD_CHANNEL">
      <summary>Identifies the channel that the trackbar control's thumb marker slides along.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarCustomDraw.TBCD_THUMB">
      <summary>Identifies the trackbar control's thumb marker. This is the part of the control that the user moves.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarCustomDraw.TBCD_TICS">
      <summary>Identifies the tick marks that are displayed along the trackbar control's edge.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TrackBarMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.TrackBarMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETPOS">
      <summary>
            Retrieves the current logical position of the slider in a trackbar. The logical positions are the integer values in the trackbar's range of
            minimum to maximum slider positions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETRANGEMIN">
      <summary>Retrieves the minimum position for the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETRANGEMAX">
      <summary>Retrieves the maximum position for the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETTIC">
      <summary>
            Retrieves the logical position of a tick mark in a trackbar. The logical position can be any of the integer values in the trackbar's range of
            minimum to maximum slider positions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETTIC">
      <summary>Sets a tick mark in a trackbar at the specified logical position.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETPOS">
      <summary>Sets the current logical position of the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETRANGE">
      <summary>Sets the range of minimum and maximum logical positions for the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETRANGEMIN">
      <summary>Sets the minimum logical position for the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETRANGEMAX">
      <summary>Sets the maximum logical position for the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_CLEARTICS">
      <summary>
            Removes the current tick marks from a trackbar. This message does not remove the first and last tick marks, which are created automatically by
            the trackbar.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETSEL">
      <summary>Sets the starting and ending positions for the available selection range in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETSELSTART">
      <summary>
            Sets the starting logical position of the current selection range in a trackbar. This message is ignored if the trackbar does not have the
            TBS_ENABLESELRANGE style.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETSELEND">
      <summary>
            Sets the ending logical position of the current selection range in a trackbar. This message is ignored if the trackbar does not have the
            TBS_ENABLESELRANGE style.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETPTICS">
      <summary>Retrieves the address of an array that contains the positions of the tick marks for a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETTICPOS">
      <summary>Retrieves the current physical position of a tick mark in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETNUMTICS">
      <summary>Retrieves the number of tick marks in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETSELSTART">
      <summary>Retrieves the starting position of the current selection range in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETSELEND">
      <summary>Retrieves the ending position of the current selection range in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_CLEARSEL">
      <summary>Clears the current selection range in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETTICFREQ">
      <summary>
            Sets the interval frequency for tick marks in a trackbar. For example, if the frequency is set to two, a tick mark is displayed for every other
            increment in the trackbar's range. The default setting for the frequency is one; that is, every increment in the range is associated with a tick mark.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETPAGESIZE">
      <summary>
            Sets the number of logical positions the trackbar's slider moves in response to keyboard input, such as the or keys, or mouse input, such as
            clicks in the trackbar's channel. The logical positions are the integer increments in the trackbar's range of minimum to maximum slider positions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETPAGESIZE">
      <summary>
            Retrieves the number of logical positions the trackbar's slider moves in response to keyboard input, such as the or keys, or mouse input, such as
            clicks in the trackbar's channel. The logical positions are the integer increments in the trackbar's range of minimum to maximum slider positions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETLINESIZE">
      <summary>
            Sets the number of logical positions the trackbar's slider moves in response to keyboard input from the arrow keys, such as the or keys. The
            logical positions are the integer increments in the trackbar's range of minimum to maximum slider positions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETLINESIZE">
      <summary>
            Retrieves the number of logical positions the trackbar's slider moves in response to keyboard input from the arrow keys, such as the or keys. The
            logical positions are the integer increments in the trackbar's range of minimum to maximum slider positions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETTHUMBRECT">
      <summary>Retrieves the size and position of the bounding rectangle for the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETCHANNELRECT">
      <summary>
            Retrieves the size and position of the bounding rectangle for a trackbar's channel. (The channel is the area over which the slider moves. It
            contains the highlight when a range is selected.)
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETTHUMBLENGTH">
      <summary>Sets the length of the slider in a trackbar. This message is ignored if the trackbar does not have the TBS_FIXEDLENGTH style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETTHUMBLENGTH">
      <summary>Retrieves the length of the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETTOOLTIPS">
      <summary>Assigns a tooltip control to a trackbar control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETTOOLTIPS">
      <summary>Retrieves the handle to the tooltip control assigned to the trackbar, if any.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETTIPSIDE">
      <summary>Positions a tooltip control used by a trackbar control. TrackBar controls that use the TBS_TOOLTIPS style display tooltips.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETBUDDY">
      <summary>
            Assigns a window as the buddy window for a trackbar control. TrackBar buddy windows are automatically displayed in a location relative to the
            control's orientation (horizontal or vertical).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETBUDDY">
      <summary>
            Retrieves the handle to a trackbar control buddy window at a given location. The specified location is relative to the control's orientation
            (horizontal or vertical).
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETPOSNOTIFY">
      <summary>Sets the current logical position of the slider in a trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_SETUNICODEFORMAT">
      <summary>
            Sets the Unicode character format flag for the control. This message allows you to change the character set used by the control at run time
            rather than having to re-create the control.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarMessage.TBM_GETUNICODEFORMAT">
      <summary>Retrieves the Unicode character format flag for the control.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TrackBarNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.TrackBarNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarNotification.TRBN_THUMBPOSCHANGING">
      <summary>Notifies that the thumb position on a trackbar is changing. This notification code is sent in the form of a WM_NOTIFY message.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification">
      <summary>A notification code that indicates the user's interaction with the trackbar.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_LINEUP">
      <summary>The user pressed the LEFT ARROW (VK_LEFT) or UP ARROW (VK_UP) key.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_LINEDOWN">
      <summary>The user pressed the RIGHT ARROW (VK_RIGHT) or DOWN ARROW (VK_DOWN) key.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_PAGEUP">
      <summary>The user clicked the channel above or to the left of the slider (VK_PRIOR).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_PAGEDOWN">
      <summary>The user clicked the channel below or to the right of the slider (VK_NEXT).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_THUMBPOSITION">
      <summary>The trackbar received WM_LBUTTONUP following a TB_THUMBTRACK notification code.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_THUMBTRACK">
      <summary>The user dragged the slider.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_TOP">
      <summary>The user pressed the HOME key (VK_HOME).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_BOTTOM">
      <summary>The user pressed the END key (VK_END).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarScrollNotification.TB_ENDTRACK">
      <summary>The trackbar received WM_KEYUP, meaning that the user released a key that sent a relevant virtual key code.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TrackBarStyle">
      <summary>The styles used with trackbar controls.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_AUTOTICKS">
      <summary>The trackbar control has a tick mark for each increment in its range of values.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_VERT">
      <summary>The trackbar control is oriented vertically.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_HORZ">
      <summary>The trackbar control is oriented horizontally. This is the default orientation.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_TOP">
      <summary>The trackbar control displays tick marks above the control. This style is valid only with TBS_HORZ.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_BOTTOM">
      <summary>The trackbar control displays tick marks below the control. This style is valid only with TBS_HORZ.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_LEFT">
      <summary>The trackbar control displays tick marks to the left of the control. This style is valid only with TBS_VERT.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_RIGHT">
      <summary>The trackbar control displays tick marks to the right of the control. This style is valid only with TBS_VERT.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_BOTH">
      <summary>
            The trackbar control displays tick marks on both sides of the control. This will be both top and bottom when used with TBS_HORZ or both left and
            right if used with TBS_VERT.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_NOTICKS">
      <summary>The trackbar control does not display any tick marks.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_ENABLESELRANGE">
      <summary>
            The trackbar control displays a selection range only. The tick marks at the starting and ending positions of a selection range are displayed as
            triangles (instead of vertical dashes), and the selection range is highlighted.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_FIXEDLENGTH">
      <summary>The trackbar control allows the size of the slider to be changed with the TBM_SETTHUMBLENGTH message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_NOTHUMB">
      <summary>The trackbar control does not display a slider.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_TOOLTIPS">
      <summary>
            The trackbar control supports tooltips. When a trackbar control is created using this style, it automatically creates a default tooltip control
            that displays the slider's current position. You can change where the tooltips are displayed by using the TBM_SETTIPSIDE message.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_REVERSED">
      <summary>
            This style bit is used for "reversed" trackbars, where a smaller number indicates "higher" and a larger number indicates "lower." It has no
            effect on the control; it is simply a label that can be checked to determine whether a trackbar is normal or reversed.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_DOWNISLEFT">
      <summary>
            By default, the trackbar control uses down equal to right and up equal to left. Use the TBS_DOWNISLEFT style to reverse the default, making down
            equal left and up equal right.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_NOTIFYBEFOREMOVE">
      <summary>TrackBar should notify parent before repositioning the slider due to user action (enables snapping).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarStyle.TBS_TRANSPARENTBKGND">
      <summary>Background is painted by the parent via the WM_PRINTCLIENT message.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TrackBarTipSide">
      <summary>Value representing the location at which to display the tooltip control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarTipSide.TBTS_TOP">
      <summary>The tooltip control will be positioned above the trackbar. This flag is for use with horizontal trackbars.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarTipSide.TBTS_LEFT">
      <summary>The tooltip control will be positioned to the left of the trackbar. This flag is for use with vertical trackbars.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarTipSide.TBTS_BOTTOM">
      <summary>The tooltip control will be positioned below the trackbar. This flag is for use with horizontal trackbars.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TrackBarTipSide.TBTS_RIGHT">
      <summary>The tooltip control will be positioned to the right of the trackbar. This flag is for use with vertical trackbars.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewActionFlag">
      <summary>Specifies the item to retrieve using TVM_GETNEXTITEM or the action for TVM_SELECTITEM.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_DROPHILITE">
      <summary>Retrieves the item that is the target of a drag-and-drop operation. You can use the TreeView_GetDropHilight macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_FIRSTVISIBLE">
      <summary>Retrieves the first item that is visible in the tree-view window. You can use the TreeView_GetFirstVisible macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_LASTVISIBLE">
      <summary>Version 4.71. Retrieves the last expanded item in the tree. This does not retrieve the last item visible in the tree-view window. You can use the TreeView_GetLastVisible macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_NEXT">
      <summary>Retrieves the next sibling item. You can use the TreeView_GetNextSibling macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_NEXTSELECTED">
      <summary>Windows Vista and later. Retrieves the next selected item. You can use the TreeView_GetNextSelected macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_NEXTVISIBLE">
      <summary>Retrieves the next visible item that follows the specified item. The specified item must be visible. Use the TVM_GETITEMRECT message to determine whether an item is visible. You can use the TreeView_GetNextVisible macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_PARENT">
      <summary>Retrieves the parent of the specified item. You can use the TreeView_GetParent macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_PREVIOUS">
      <summary>Retrieves the previous sibling item. You can use the TreeView_GetPrevSibling macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_PREVIOUSVISIBLE">
      <summary>Retrieves the first visible item that precedes the specified item. The specified item must be visible. Use the TVM_GETITEMRECT message to determine whether an item is visible. You can use the TreeView_GetPrevVisible macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVGN_ROOT">
      <summary>Retrieves the topmost or very first item of the tree-view control. You can use the TreeView_GetRoot macro to send this message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewActionFlag.TVSI_NOSINGLEEXPAND">
      <summary>When a single item is selected, ensures that the treeview does not expand the children of that item. This is valid only if used with the TVGN_CARET flag.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewExpandFlags">
      <summary>Action to take when using TVM_EXPAND.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewExpandFlags.TVE_COLLAPSE">
      <summary>Collapses the list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewExpandFlags.TVE_EXPAND">
      <summary>Expands the list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewExpandFlags.TVE_TOGGLE">
      <summary>Collapses the list if it is expanded or expands it if it is collapsed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewExpandFlags.TVE_EXPANDPARTIAL">
      <summary>Version 4.70. Partially expands the list. In this state the child items are visible and the parent item's plus sign (+), indicating that it can be expanded, is displayed. This flag must be used in combination with the TVE_EXPAND flag.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewExpandFlags.TVE_COLLAPSERESET">
      <summary>Collapses the list and removes the child items. The TVIS_EXPANDEDONCE state flag is reset. This flag must be used with the TVE_COLLAPSE flag.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags">
      <summary>Information about the results of a hit test.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_NOWHERE">
      <summary>In the client area, but below the last item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ONITEMICON">
      <summary>On the bitmap associated with an item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ONITEMLABEL">
      <summary>On the label (string) associated with an item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ONITEM">
      <summary>On the bitmap or label associated with an item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ONITEMINDENT">
      <summary>In the indentation associated with an item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ONITEMBUTTON">
      <summary>On the button associated with an item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ONITEMRIGHT">
      <summary>In the area to the right of an item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ONITEMSTATEICON">
      <summary>On the state icon for a tree-view item that is in a user-defined state.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_ABOVE">
      <summary>Above the client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_BELOW">
      <summary>Below the client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_TORIGHT">
      <summary>To the right of the client area.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewHitTestFlags.TVHT_TOLEFT">
      <summary>To the left of the client area.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewInsert">
      <summary>Values used as alternatives to tree item handle (HTREEITEM) in TVINSERTSTRUCT.hInsertAfter.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewInsert.TVI_FIRST">
      <summary>Inserts the item at the beginning of the list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewInsert.TVI_LAST">
      <summary>Inserts the item at the end of the list.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewInsert.TVI_ROOT">
      <summary>Add the item as a root item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewInsert.TVI_SORT">
      <summary>Inserts the item into the list in alphabetical order.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewItemMask">
      <summary>Used in <see cref="T:Vanara.PInvoke.ComCtl32.TVITEM" /> and <see cref="!:TVITMEEX" /> mask members to indicate which structure members contain valid data.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_CHILDREN">
      <summary>The cChildren member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_DI_SETITEM">
      <summary>The tree-view control will retain the supplied information and will not request it again. This flag is valid only when processing the TVN_GETDISPINFO notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_EXPANDEDIMAGE">
      <summary>Version 6.00 and Windows Vista. The iExpandedImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_HANDLE">
      <summary>The hItem member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_IMAGE">
      <summary>The iImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_INTEGRAL">
      <summary>The iIntegral member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_PARAM">
      <summary>The lParam member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_SELECTEDIMAGE">
      <summary>The iSelectedImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_STATE">
      <summary>The state and stateMask members are valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_STATEEX">
      <summary>Version 6.00 and Windows Vista. The uStateEx member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemMask.TVIF_TEXT">
      <summary>The pszText and cchTextMax members are valid.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewItemStates">
      <summary>
            Set of bit flags and image list indexes that indicate the item's state. When setting the state of an item, the stateMask member indicates the valid bits of this member. When retrieving the state of an item, this member returns the current state for the bits indicated in the stateMask member.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_SELECTED">
      <summary>The item is selected. Its appearance depends on whether it has the focus. The item will be drawn using the system colors for selection.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_CUT">
      <summary>The item is selected as part of a cut-and-paste operation.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_DROPHILITED">
      <summary>The item is selected as a drag-and-drop target.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_BOLD">
      <summary>The item is bold.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_EXPANDED">
      <summary>The item's list of child items is currently expanded; that is, the child items are visible. This value applies only to parent items.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_EXPANDEDONCE">
      <summary>The item's list of child items has been expanded at least once. The TVN_ITEMEXPANDING and TVN_ITEMEXPANDED notification codes are not generated for parent items that have this state set in response to a TVM_EXPAND message. Using TVE_COLLAPSE and TVE_COLLAPSERESET with TVM_EXPAND will cause this state to be reset. This value applies only to parent items.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_EXPANDPARTIAL">
      <summary>Version 4.70. A partially expanded tree-view item. In this state, some, but not all, of the child items are visible and the parent item's plus symbol is displayed.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_OVERLAYMASK">
      <summary>Mask for the bits used to specify the item's overlay image index.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_STATEIMAGEMASK">
      <summary>Mask for the bits used to specify the item's state image index.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIS_USERMASK">
      <summary>Same as TVIS_STATEIMAGEMASK.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIF_EXPANDEDIMAGE">
      <summary>Version 6.00 and Windows Vista. The iExpandedImage member is valid.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStates.TVIF_STATEEX">
      <summary>Version 6.00 and Windows Vista. The uStateEx member is valid.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewItemStatesEx">
      <summary>Tree view item extended states.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStatesEx.TVIS_EX_FLAT">
      <summary>Creates a flat item—the item is virtual and is not visible in the tree; instead, its children take its place in the tree hierarchy. This state is valid only when adding an item to the tree-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStatesEx.TVIS_EX_DISABLED">
      <summary>Windows Vista and later. Creates a control that is drawn in gray, that the user cannot interact with.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewItemStatesEx.TVIS_EX_HWND">
      <summary>Creates a separate HWND for the item. This state is valid only when adding an item to the tree-view control.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.TreeViewMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewNotification">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.TreeViewNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewNotificationReturnBehavior">
      <summary>Used as return values to the TVN_SINGLEEXPAND notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewNotificationReturnBehavior.TVNRET_DEFAULT">
      <summary>Allow the default behavior to occur.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewNotificationReturnBehavior.TVNRET_SKIPOLD">
      <summary>Skip default processing of the item being unselected.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewNotificationReturnBehavior.TVNRET_SKIPNEW">
      <summary>Skip default processing of the item being selected.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewSelChangedCause">
      <summary>Used in the <see cref="F:Vanara.PInvoke.ComCtl32.NMTREEVIEW.action" /> action member coming through the lParam of a TVN_SELCHANGED notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewSelChangedCause.TVC_UNKNOWN">
      <summary>Unknown.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewSelChangedCause.TVC_BYMOUSE">
      <summary>By a mouse click.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewSelChangedCause.TVC_BYKEYBOARD">
      <summary>By a keystroke.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewSetBorderFlags">
      <summary>Used as the wParam value in a TVM_SETBORDER message.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewSetBorderFlags.TVSBF_XBORDER">
      <summary>Applies the specified border size to the left side of the items in the tree-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewSetBorderFlags.TVSBF_YBORDER">
      <summary>Applies the specified border size to the top of the items in the tree-view control.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewSetImageListType">
      <summary>Used as the wParam value in a TVM_SETIMAGELIST and TVM_GETIMAGELIST messages.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewSetImageListType.TVSIL_NORMAL">
      <summary>Indicates the normal image list, which contains selected, nonselected, and overlay images for the items of a tree-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewSetImageListType.TVSIL_STATE">
      <summary>Indicates the state image list. You can use state images to indicate application-defined item states. A state image is displayed to the left of an item's selected or nonselected image.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewStyle">
      <summary>Window styles used when creating tree-view controls.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_CHECKBOXES">
      <summary>Version 4.70. Enables check boxes for items in a tree-view control. A check box is displayed only if an image is associated with the item. When set to this style, the control effectively uses DrawFrameControl to create and set a state image list containing two images. State image 1 is the unchecked box and state image 2 is the checked box. Setting the state image to zero removes the check box altogether. For more information, see Working with state image indexes. <para>Version 5.80. Displays a check box even if no image is associated with the item.</para><para>Once a tree-view control is created with this style, the style cannot be removed. Instead, you must destroy the control and create a new one in its place. Destroying the tree-view control does not destroy the check box state image list. You must destroy it explicitly. Get the handle to the state image list by sending the tree-view control a TVM_GETIMAGELIST message. Then destroy the image list with ImageList_Destroy.</para><para>If you want to use this style, you must set the TVS_CHECKBOXES style with SetWindowLong after you create the treeview control, and before you populate the tree. Otherwise, the checkboxes might appear unchecked, depending on timing issues.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_DISABLEDRAGDROP">
      <summary>Prevents the tree-view control from sending TVN_BEGINDRAG notification codes.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_EDITLABELS">
      <summary>Allows the user to edit the labels of tree-view items.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_FULLROWSELECT">
      <summary>Version 4.71. Enables full-row selection in the tree view. The entire row of the selected item is highlighted, and clicking anywhere on an item's row causes it to be selected. This style cannot be used in conjunction with the TVS_HASLINES style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_HASBUTTONS">
      <summary>Displays plus (+) and minus (-) buttons next to parent items. The user clicks the buttons to expand or collapse a parent item's list of child items. To include buttons with items at the root of the tree view, TVS_LINESATROOT must also be specified.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_HASLINES">
      <summary>Uses lines to show the hierarchy of items.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_INFOTIP">
      <summary>Version 4.71. Obtains tooltip information by sending the TVN_GETINFOTIP notification.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_LINESATROOT">
      <summary>Uses lines to link items at the root of the tree-view control. This value is ignored if TVS_HASLINES is not also specified.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_NOHSCROLL">
      <summary>Version 5.80. Disables horizontal scrolling in the control. The control will not display any horizontal scroll bars.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_NONEVENHEIGHT">
      <summary>Version 4.71 Sets the height of the items to an odd height with the TVM_SETITEMHEIGHT message. By default, the height of items must be an even value.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_NOSCROLL">
      <summary>Version 4.71. Disables both horizontal and vertical scrolling in the control. The control will not display any scroll bars.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_NOTOOLTIPS">
      <summary>Version 4.70. Disables tooltips.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_RTLREADING">
      <summary>Version 4.70. Causes text to be displayed from right-to-left (RTL). Usually, windows display text left-to-right (LTR). Windows can be mirrored to display languages such as Hebrew or Arabic that read RTL. Typically, tree-view text is displayed in the same direction as the text in its parent window. If TVS_RTLREADING is set, tree-view text reads in the opposite direction from the text in the parent window.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_SHOWSELALWAYS">
      <summary>Causes a selected item to remain selected when the tree-view control loses focus.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_SINGLEEXPAND">
      <summary>Version 4.71. Causes the item being selected to expand and the item being unselected to collapse upon selection in the tree view. If the mouse is used to single-click the selected item and that item is closed, it will be expanded. If the user holds down the CTRL key while selecting an item, the item being unselected will not be collapsed.<para>Version 5.80. Causes the item being selected to expand and the item being unselected to collapse upon selection in the tree view. If the user holds down the CTRL key while selecting an item, the item being unselected will not be collapsed.</para></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyle.TVS_TRACKSELECT">
      <summary>Version 4.70. Enables hot tracking in a tree-view control.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TreeViewStyleEx">
      <summary>Extended styles used when creating tree-view controls. The value of extended styles is a bitwise combination of these styles.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_AUTOHSCROLL">
      <summary>Windows Vista. Remove the horizontal scroll bar and auto-scroll depending on mouse position.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_DIMMEDCHECKBOXES">
      <summary>Windows Vista. Include dimmed checkbox state if the control has the TVS_CHECKBOXES style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_DOUBLEBUFFER">
      <summary>Windows Vista. Specifies how the background is erased or filled.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_DRAWIMAGEASYNC">
      <summary>Windows Vista. Retrieves calendar grid information.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_EXCLUSIONCHECKBOXES">
      <summary>Windows Vista. Include exclusion checkbox state if the control has the TVS_CHECKBOXES style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_FADEINOUTEXPANDOS">
      <summary>Windows Vista. Fade expando buttons in or out when the mouse moves away or into a state of hovering over the control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_MULTISELECT">
      <summary>Not supported. Do not use.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_NOINDENTSTATE">
      <summary>Windows Vista. Do not indent the tree view for the expando buttons.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_NOSINGLECOLLAPSE">
      <summary>Windows Vista. Intended for internal use; not recommended for use in applications. Do not collapse the previously selected tree-view item unless it has the same parent as the new selection. This style must be used with the TVS_SINGLEEXPAND style.<note>This style may not be supported in future versions of Comctl32.dll. Also, this style is not defined in commctrl.h.</note></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_PARTIALCHECKBOXES">
      <summary>Windows Vista. Include partial checkbox state if the control has the TVS_CHECKBOXES style.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TreeViewStyleEx.TVS_EX_RICHTOOLTIP">
      <summary>Windows Vista. Allow rich tooltips in the tree view (custom drawn with icon and text).</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TTGETTITLE">
      <summary>Provides information about the title of a tooltip control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTGETTITLE.cch">
      <summary>UINT that specifies the number of characters in the title.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTGETTITLE.dwSize">
      <summary>DWORD that specifies size of structure. Set to sizeof(TTGETTITLE).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTGETTITLE.pszTitle">
      <summary>Pointer to a wide character string that contains the title.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTGETTITLE.uTitleBitmap">
      <summary>UINT that specifies the tooltip icon.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TTHITTESTINFO">
      <summary>
            Contains information that a tooltip control uses to determine whether a point is in the bounding rectangle of the specified tool. If the point is in the rectangle, the structure receives information about the tool.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTHITTESTINFO.hwnd">
      <summary>Handle to the tool or window with the specified tool.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTHITTESTINFO.pt">
      <summary>Client coordinates of the point to test.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TTHITTESTINFO.ti">
      <summary>TOOLINFO structure. If the point specified by pt is in the tool specified by hwnd, this structure receives information about the tool. The cbSize member of this structure must be filled in before sending this message.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO">
      <summary>
            Contains information for identifying the "hit zone" for a specified part of a tree item. The structure is used with the TVM_GETITEMPARTRECT message and the TreeView_GetItemPartRect macro.
            </summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO" /> class.</summary>
      <param name="hTreeNode">The h tree node.</param>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO.Bounds">
      <summary>Gets the bounds.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO.hti">
      <summary>Handle to the parent item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO.partID">
      <summary>ID of the item part. This value must be TVGIPR_BUTTON (0x0001).</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVGETITEMPARTRECTINFO.prc">
      <summary>Pointer to a RECT structure to receive the coordinates of the bounding rectangle. The sender of the message (the caller) is responsible for allocating this structure.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TVHITTESTINFO">
      <summary>
            Contains information used to determine the location of a point relative to a tree-view control. This structure is used with the TVM_HITTEST message. The structure is identical to the TV_HITTESTINFO structure, but it has been renamed to follow current naming conventions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVHITTESTINFO.flags">
      <summary>Variable that receives information about the results of a hit test.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVHITTESTINFO.hItem">
      <summary>Handle to the item that occupies the point.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVHITTESTINFO.pt">
      <summary>Client coordinates of the point to test.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TVINSERTSTRUCT">
      <summary>
            Contains information used to add a new item to a tree-view control. This structure is used with the TVM_INSERTITEM message. The structure is identical to the TV_INSERTSTRUCT structure, but it has been renamed to follow current naming conventions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVINSERTSTRUCT.hInsertAfter">
      <summary>Handle to the item after which the new item is to be inserted, or one of the following values:</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVINSERTSTRUCT.hParent">
      <summary>Handle to the parent item. If this member is the TVI_ROOT value or NULL, the item is inserted at the root of the tree-view control.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVINSERTSTRUCT.itemex">
      <summary>Version 4.71. TVITEMEX structure that contains information about the item to add.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TVITEM">
      <summary>
            Specifies or receives attributes of a tree-view item. This structure is identical to the TV_ITEM structure, but it has been renamed to follow current
            naming conventions. New applications should use this structure.
            </summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.Bold">
      <summary>Gets or sets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.TVITEM" /> is bold.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.cChildren">
      <summary>Flag that indicates whether the item has associated child items. This member can be one of the following values.
            <list type="table"><listheader><term>Value</term><term>Meaning</term></listheader><item><term>zero</term><description>The item has no child items.</description></item><item><term>one</term><description>The item has one or more child items.</description></item><item><term>I_CHILDRENCALLBACK</term><description>The parent window keeps track of whether the item has child items.In this case, when the tree-view control needs to display the item, the control sends the parent a TVN_GETDISPINFO notification code to determine whether the item has child items.<para>If the tree-view control has the TVS_HASBUTTONS style, it uses this member to determine whether to display the button indicating the presence of child items. You can use this member to force the control to display the button even though the item does not have any child items inserted. This allows you to display the button while minimizing the control's memory usage by inserting child items only when the item is visible or expanded.</para></description></item><item><term>I_CHILDRENAUTO</term><description>Version 6.0 Intended for internal use; not recommended for use in applications.The tree-view control automatically determines whether the item has child items.<note>This flag may not be supported in future versions of Comctl32.dll.Also, this flag is not defined in commctrl.h.Add the following definition to the source files of your application to use the flag:</note><code>#define I_CHILDRENAUTO (-2)</code></description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.cchTextMax">
      <summary>Size of the buffer pointed to by the pszText member, in characters. If this structure is being used to set item attributes, this member is ignored.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.Expanded">
      <summary>Gets or sets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.TVITEM" /> is expanded.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.ExpandedOnce">
      <summary>Gets or sets a value indicating whether child items have been expanded at least once.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.ExpandedPartial">
      <summary>Gets or sets a value indicating whether item is partially expanded.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEM.GetState(Vanara.PInvoke.ComCtl32.TreeViewItemStates)">
      <summary>Gets a value on whether the specified state is set.</summary>
      <param name="itemState">State of the item.</param>
      <returns>
        <c>true</c> if the specified state is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.hItem">
      <summary>Handle to the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.iImage">
      <summary>Index in the tree-view control's image list of the icon image to use when the item is in the nonselected state. If this member is the I_IMAGECALLBACK value, the parent window is responsible for storing the index. In this case, the tree-view control sends the parent a TVN_GETDISPINFO notification code to retrieve the index when it needs to display the image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.iSelectedImage">
      <summary>Index in the tree-view control's image list of the icon image to use when the item is in the selected state. If this member is the I_IMAGECALLBACK value, the parent window is responsible for storing the index. In this case, the tree-view control sends the parent a TVN_GETDISPINFO notification code to retrieve the index when it needs to display the image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.lParam">
      <summary>A value to associate with the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.mask">
      <summary>Array of flags that indicate which of the other structure members contain valid data. When this structure is used with the TVM_GETITEM message, the mask member indicates the item attributes to retrieve. If used with the TVM_SETITEM message, the mask indicates the attributes to set.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.OverlayImageIndex">
      <summary>Gets or sets the index of the overlay image.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">OverlayImageIndex - Overlay image index must be between 0 and 15</exception>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.pszText">
      <summary>Pointer to a null-terminated string that contains the item text if the structure specifies item attributes. If this member is the LPSTR_TEXTCALLBACK value, the parent window is responsible for storing the name. In this case, the tree-view control sends the parent window a TVN_GETDISPINFO notification code when it needs the item text for displaying, sorting, or editing and a TVN_SETDISPINFO notification code when the item text changes. If the structure is receiving item attributes, this member is the address of the buffer that receives the item text. Note that although the tree-view control allows any length string to be stored as item text, only the first 260 characters are displayed.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.Selected">
      <summary>Gets or sets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.TVITEM" /> is selected.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.SelectedForCut">
      <summary>Gets or sets a value indicating whether item is selected as part of a cut-and-paste operation.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.SelectedForDragDrop">
      <summary>Gets or sets a value indicating whether item is selected as a drag-and-drop target.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEM.SetState(Vanara.PInvoke.ComCtl32.TreeViewItemStates,System.Boolean)">
      <summary>Sets the state of the specified state.</summary>
      <param name="itemState">State of the item.</param>
      <param name="on">if set to <c>true</c> set this state on.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEM.SetText(System.IntPtr,System.Int32)">
      <summary>Sets the text.</summary>
      <param name="managedStringPtr">The managed string PTR.</param>
      <param name="stringLen">Length of the string.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.state">
      <summary>Set of bit flags and image list indexes that indicate the item's state. When setting the state of an item, the stateMask member indicates the valid bits of this member. When retrieving the state of an item, this member returns the current state for the bits indicated in the stateMask member.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.State">
      <summary>Gets the state.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.StateImageIndex">
      <summary>Gets or sets the index of the state image.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">StateImageIndex - State image index must be between 0 and 15</exception>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEM.stateMask">
      <summary>Bits of the state member that are valid. If you are retrieving an item's state, set the bits of the stateMask member to indicate the bits to be returned in the state member. If you are setting an item's state, set the bits of the stateMask member to indicate the bits of the state member that you want to set. To set or retrieve an item's overlay image index, set the TVIS_OVERLAYMASK bits. To set or retrieve an item's state image index, set the TVIS_STATEIMAGEMASK bits.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.Text">
      <summary>Gets the text.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEM.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEM.UseTextCallback">
      <summary>Gets or sets a value indicating whether to use text callback.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TVITEMEX">
      <summary>
            Specifies or receives attributes of a tree-view item. This structure is an enhancement to the TVITEM structure. New applications should use this structure where appropriate.
            </summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.Bold">
      <summary>Gets or sets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.TVITEM" /> is bold.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.cChildren">
      <summary>Flag that indicates whether the item has associated child items. This member can be one of the following values.
            <list type="table"><listheader><term>Value</term><term>Meaning</term></listheader><item><term>zero</term><description>The item has no child items.</description></item><item><term>one</term><description>The item has one or more child items.</description></item><item><term>I_CHILDRENCALLBACK</term><description>The parent window keeps track of whether the item has child items.In this case, when the tree-view control needs to display the item, the control sends the parent a TVN_GETDISPINFO notification code to determine whether the item has child items.<para>If the tree-view control has the TVS_HASBUTTONS style, it uses this member to determine whether to display the button indicating the presence of child items. You can use this member to force the control to display the button even though the item does not have any child items inserted. This allows you to display the button while minimizing the control's memory usage by inserting child items only when the item is visible or expanded.</para></description></item><item><term>I_CHILDRENAUTO</term><description>Version 6.0 Intended for internal use; not recommended for use in applications.The tree-view control automatically determines whether the item has child items.<note>This flag may not be supported in future versions of Comctl32.dll.Also, this flag is not defined in commctrl.h.Add the following definition to the source files of your application to use the flag:</note><code>#define I_CHILDRENAUTO (-2)</code></description></item></list></summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.cchTextMax">
      <summary>Size of the buffer pointed to by the pszText member, in characters. If this structure is being used to set item attributes, this member is ignored.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.Expanded">
      <summary>Gets or sets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.TVITEM" /> is expanded.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.ExpandedOnce">
      <summary>Gets or sets a value indicating whether child items have been expanded at least once.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.ExpandedPartial">
      <summary>Gets or sets a value indicating whether item is partially expanded.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEMEX.GetState(Vanara.PInvoke.ComCtl32.TreeViewItemStates)">
      <summary>Gets a value on whether the specified state is set.</summary>
      <param name="itemState">State of the item.</param>
      <returns>
        <c>true</c> if the specified state is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.hItem">
      <summary>Handle to the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.hwnd">
      <summary>The HWND</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.iExpandedImage">
      <summary>The i expanded image</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.iImage">
      <summary>Index in the tree-view control's image list of the icon image to use when the item is in the nonselected state. If this member is the I_IMAGECALLBACK value, the parent window is responsible for storing the index. In this case, the tree-view control sends the parent a TVN_GETDISPINFO notification code to retrieve the index when it needs to display the image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.iIntegral">
      <summary>The i integral</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.iReserved">
      <summary>The i reserved</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.iSelectedImage">
      <summary>Index in the tree-view control's image list of the icon image to use when the item is in the selected state. If this member is the I_IMAGECALLBACK value, the parent window is responsible for storing the index. In this case, the tree-view control sends the parent a TVN_GETDISPINFO notification code to retrieve the index when it needs to display the image.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.lParam">
      <summary>A value to associate with the item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.mask">
      <summary>Array of flags that indicate which of the other structure members contain valid data. When this structure is used with the TVM_GETITEM message, the mask member indicates the item attributes to retrieve. If used with the TVM_SETITEM message, the mask indicates the attributes to set.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.OverlayImageIndex">
      <summary>Gets or sets the index of the overlay image.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">OverlayImageIndex - Overlay image index must be between 0 and 15</exception>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.pszText">
      <summary>Pointer to a null-terminated string that contains the item text if the structure specifies item attributes. If this member is the LPSTR_TEXTCALLBACK value, the parent window is responsible for storing the name. In this case, the tree-view control sends the parent window a TVN_GETDISPINFO notification code when it needs the item text for displaying, sorting, or editing and a TVN_SETDISPINFO notification code when the item text changes. If the structure is receiving item attributes, this member is the address of the buffer that receives the item text. Note that although the tree-view control allows any length string to be stored as item text, only the first 260 characters are displayed.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.Selected">
      <summary>Gets or sets a value indicating whether this <see cref="T:Vanara.PInvoke.ComCtl32.TVITEM" /> is selected.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.SelectedForCut">
      <summary>Gets or sets a value indicating whether item is selected as part of a cut-and-paste operation.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.SelectedForDragDrop">
      <summary>Gets or sets a value indicating whether item is selected as a drag-and-drop target.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEMEX.SetState(Vanara.PInvoke.ComCtl32.TreeViewItemStates,System.Boolean)">
      <summary>Sets the state of the specified state.</summary>
      <param name="itemState">State of the item.</param>
      <param name="on">if set to <c>true</c> set this state on.</param>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEMEX.SetText(System.IntPtr,System.Int32)">
      <summary>Sets the text.</summary>
      <param name="managedStringPtr">The managed string PTR.</param>
      <param name="stringLen">Length of the string.</param>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.state">
      <summary>Set of bit flags and image list indexes that indicate the item's state. When setting the state of an item, the stateMask member indicates the valid bits of this member. When retrieving the state of an item, this member returns the current state for the bits indicated in the stateMask member.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.State">
      <summary>Gets the state.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.StateImageIndex">
      <summary>Gets or sets the index of the state image.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">StateImageIndex - State image index must be between 0 and 15</exception>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.stateMask">
      <summary>Bits of the state member that are valid. If you are retrieving an item's state, set the bits of the stateMask member to indicate the bits to be returned in the state member. If you are setting an item's state, set the bits of the stateMask member to indicate the bits of the state member that you want to set. To set or retrieve an item's overlay image index, set the TVIS_OVERLAYMASK bits. To set or retrieve an item's state image index, set the TVIS_STATEIMAGEMASK bits.</summary>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.Text">
      <summary>Gets the text.</summary>
    </member>
    <member name="M:Vanara.PInvoke.ComCtl32.TVITEMEX.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Vanara.PInvoke.ComCtl32.TVITEMEX.UseTextCallback">
      <summary>Gets or sets a value indicating whether to use text callback.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMEX.uStateEx">
      <summary>The u state ex</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TVITEMPART">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Vanara.PInvoke.ComCtl32.TVITEMPART</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVITEMPART.TVGIPR_BUTTON">
      <summary>Button item part.</summary>
    </member>
    <member name="T:Vanara.PInvoke.ComCtl32.TVSORTCB">
      <summary>
            Contains information used to sort child items in a tree-view control. This structure is used with the TVM_SORTCHILDRENCB message. This structure is
            identical to the TV_SORTCB structure, but it has been renamed to follow current naming conventions.
            </summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVSORTCB.hParent">
      <summary>Handle to the parent item.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVSORTCB.lParam">
      <summary>Application-defined value that gets passed as the lParamSort argument in the callback function specified in lpfnCompare.</summary>
    </member>
    <member name="F:Vanara.PInvoke.ComCtl32.TVSORTCB.lpfnCompare">
      <summary>
            Address of an application-defined callback function, which is called during a sort operation each time the relative order of two list items needs
            to be compared.
            </summary>
    </member>
  </members>
</doc>