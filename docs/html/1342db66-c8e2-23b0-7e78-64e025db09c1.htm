<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>User32.SetWindowsHookEx Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SetWindowsHookEx method" /><meta name="System.Keywords" content="User32.SetWindowsHookEx method" /><meta name="Microsoft.Help.F1" content="Vanara.PInvoke.User32.SetWindowsHookEx" /><meta name="Microsoft.Help.Id" content="M:Vanara.PInvoke.User32.SetWindowsHookEx(Vanara.PInvoke.User32.HookType,Vanara.PInvoke.User32.HookProc,Vanara.PInvoke.Kernel32.SafeLibraryHandle,System.Int32)" /><meta name="Description" content="Installs an application-defined hook procedure into a hook chain. You would install a hook procedure to monitor the system for certain types of events." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Vanara.PInvoke" /><meta name="file" content="1342db66-c8e2-23b0-7e78-64e025db09c1" /><meta name="guid" content="1342db66-c8e2-23b0-7e78-64e025db09c1" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vanara API Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d22522ce-4106-42b2-81eb-cb37a0f36df8.htm" title="Vanara API Documentation" tocid="roottoc">Vanara API Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c0250011-c1b9-bc9a-b501-96a9795f44a5.htm" title="Vanara.PInvoke" tocid="c0250011-c1b9-bc9a-b501-96a9795f44a5">Vanara.PInvoke</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3103c69b-f461-3a6f-fa1d-60fd26adf4f9.htm" title="User32 Class" tocid="3103c69b-f461-3a6f-fa1d-60fd26adf4f9">User32 Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="bf125316-820d-e4b3-dc45-ce0e2ab66b64.htm" title="User32 Methods" tocid="bf125316-820d-e4b3-dc45-ce0e2ab66b64">User32 Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="f7921209-d5c5-3fcc-aae8-1da07a99c237.htm" title="CallNextHookEx Method " tocid="f7921209-d5c5-3fcc-aae8-1da07a99c237">CallNextHookEx Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="48895a91-f75f-e48c-e5b2-2ee5ab8e1a74.htm" title="ChildWindowFromPointEx Method " tocid="48895a91-f75f-e48c-e5b2-2ee5ab8e1a74">ChildWindowFromPointEx Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b3be6aa6-7026-49a4-c30a-20b95c0068c2.htm" title="DestroyIcon Method " tocid="b3be6aa6-7026-49a4-c30a-20b95c0068c2">DestroyIcon Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="d80af064-10d6-3b0e-91a5-17bf6a76a062.htm" title="DrawText Method " tocid="d80af064-10d6-3b0e-91a5-17bf6a76a062">DrawText Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b998c847-0118-a48b-086a-02d8b43485b1.htm" title="ExitWindowsEx Method " tocid="b998c847-0118-a48b-086a-02d8b43485b1">ExitWindowsEx Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="17e4eaeb-1e90-89c2-0f2f-7040822a7428.htm" title="GetActiveWindow Method " tocid="17e4eaeb-1e90-89c2-0f2f-7040822a7428">GetActiveWindow Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e67a9a59-fe5e-8bba-e35f-b1b628a27f46.htm" title="GetClientRect Method " tocid="e67a9a59-fe5e-8bba-e35f-b1b628a27f46">GetClientRect Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0f7c27dc-edc0-bd04-373a-0344f826e918.htm" title="GetIconInfo Method " tocid="0f7c27dc-edc0-bd04-373a-0344f826e918">GetIconInfo Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8575b706-51c7-29e3-fc21-57a90c3c9f63.htm" title="GetWindowLong Method " tocid="8575b706-51c7-29e3-fc21-57a90c3c9f63">GetWindowLong Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1c0e22b9-dda0-57c4-8046-f5dd8a7eb0f7.htm" title="GetWindowLong32 Method " tocid="1c0e22b9-dda0-57c4-8046-f5dd8a7eb0f7">GetWindowLong32 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="72bcb930-6da0-bfe3-d05b-0b904a0a4f71.htm" title="GetWindowLongPtr Method " tocid="72bcb930-6da0-bfe3-d05b-0b904a0a4f71">GetWindowLongPtr Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="56061cc9-dbe4-5881-ad58-636e139a6997.htm" title="GetWindowRect Method " tocid="56061cc9-dbe4-5881-ad58-636e139a6997">GetWindowRect Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="f7c955f9-e2ab-4fed-62dd-f6d573ad8b61.htm" title="InvalidateRect Method " tocid="f7c955f9-e2ab-4fed-62dd-f6d573ad8b61">InvalidateRect Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="dbcebe9d-0b41-ce40-923b-93fe5dd73f82.htm" title="LoadImage Method " tocid="dbcebe9d-0b41-ce40-923b-93fe5dd73f82">LoadImage Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="51c86a69-a515-efb3-bdbe-6a492bbb3cca.htm" title="LoadString Method " tocid="51c86a69-a515-efb3-bdbe-6a492bbb3cca">LoadString Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4cbac770-9042-9dc0-fdff-5cde7bf145f2.htm" title="LockWorkStation Method " tocid="4cbac770-9042-9dc0-fdff-5cde7bf145f2">LockWorkStation Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="174d6d90-2922-bd4c-d330-943b519ccb32.htm" title="MapWindowPoints Method " tocid="174d6d90-2922-bd4c-d330-943b519ccb32">MapWindowPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a415e4d9-b64b-ca50-b326-4204b889812d.htm" title="RealGetWindowClass Method " tocid="a415e4d9-b64b-ca50-b326-4204b889812d">RealGetWindowClass Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9efd7992-c513-91f9-9a8a-7129062c0a9b.htm" title="RegisterHotKey Method " tocid="9efd7992-c513-91f9-9a8a-7129062c0a9b">RegisterHotKey Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b64fa411-0dfc-64fb-4f85-fe434b418680.htm" title="RegisterWindowMessage Method " tocid="b64fa411-0dfc-64fb-4f85-fe434b418680">RegisterWindowMessage Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b0112879-47e5-ace4-e9ee-f7244519ec4c.htm" title="ScreenToClient Method " tocid="b0112879-47e5-ace4-e9ee-f7244519ec4c">ScreenToClient Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e76ee4f7-bdf5-b6fa-ab72-9835e04f660c.htm" title="SendMessage Method " tocid="e76ee4f7-bdf5-b6fa-ab72-9835e04f660c">SendMessage Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a138536c-5ee7-dcf3-54bd-20fa81032368.htm" title="SetWindowLong Method " tocid="a138536c-5ee7-dcf3-54bd-20fa81032368">SetWindowLong Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a4271990-f335-582e-69fb-356bc365944d.htm" title="SetWindowPos Method " tocid="a4271990-f335-582e-69fb-356bc365944d">SetWindowPos Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="1342db66-c8e2-23b0-7e78-64e025db09c1.htm" title="SetWindowsHookEx Method " tocid="1342db66-c8e2-23b0-7e78-64e025db09c1">SetWindowsHookEx Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="fde1b356-469e-86c1-c1d7-19c630d20d35.htm" title="SetWindowText Method " tocid="fde1b356-469e-86c1-c1d7-19c630d20d35">SetWindowText Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4cd2e445-dd18-a901-6afc-9c63dda1667a.htm" title="ShutdownBlockReasonCreate Method " tocid="4cd2e445-dd18-a901-6afc-9c63dda1667a">ShutdownBlockReasonCreate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1f50c0d5-abbe-c397-a1a5-6bf84ad204b0.htm" title="ShutdownBlockReasonDestroy Method " tocid="1f50c0d5-abbe-c397-a1a5-6bf84ad204b0">ShutdownBlockReasonDestroy Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f5896df7-71da-f333-c1a2-4c86a00fd8d7.htm" title="ShutdownBlockReasonQuery Method " tocid="f5896df7-71da-f333-c1a2-4c86a00fd8d7">ShutdownBlockReasonQuery Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="336d17b3-c6a6-6e11-3f9b-d97e7cac5fbd.htm" title="UnhookWindowsHookEx Method " tocid="336d17b3-c6a6-6e11-3f9b-d97e7cac5fbd">UnhookWindowsHookEx Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="bfd5fd60-1780-a750-569d-01767a5fe2ee.htm" title="UnregisterHotKey Method " tocid="bfd5fd60-1780-a750-569d-01767a5fe2ee">UnregisterHotKey Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="13e02fff-9c7f-6233-1de6-d896db93f1e6.htm" title="WindowFromPoint Method " tocid="13e02fff-9c7f-6233-1de6-d896db93f1e6">WindowFromPoint Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>User32<span id="LST27EDCF07_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_0?cpp=::|nu=.");</script>SetWindowsHookEx Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Installs an application-defined hook procedure into a hook chain. You would install a hook procedure to monitor the system for certain types of
            events. These events are associated either with a specific thread or with all threads in the same desktop as the calling thread.
            <p>See https://msdn.microsoft.com/en-us/library/windows/desktop/ms644990%28v=vs.85%29.aspx for more information</p></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="c0250011-c1b9-bc9a-b501-96a9795f44a5.htm">Vanara.PInvoke</a><br />
    <strong>Assembly:</strong>
   Vanara.PInvoke.User32 (in Vanara.PInvoke.User32.dll) Version: 1.0.2<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">User32<span id="LST27EDCF07_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SafeHookHandle</span> <span class="identifier">SetWindowsHookEx</span>(
	<span class="identifier">User32<span id="LST27EDCF07_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>HookType</span> <span class="parameter">idHook</span>,
	<span class="identifier">User32<span id="LST27EDCF07_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>HookProc</span> <span class="parameter">lpfn</span>,
	<span class="identifier">Kernel32<span id="LST27EDCF07_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SafeLibraryHandle</span> <span class="parameter">hMod</span>,
	<span class="identifier">int</span> <span class="parameter">dwThreadId</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">SetWindowsHookEx</span> ( 
	<span class="parameter">idHook</span> <span class="keyword">As</span> <span class="identifier">User32<span id="LST27EDCF07_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>HookType</span>,
	<span class="parameter">lpfn</span> <span class="keyword">As</span> <span class="identifier">User32<span id="LST27EDCF07_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>HookProc</span>,
	<span class="parameter">hMod</span> <span class="keyword">As</span> <span class="identifier">Kernel32<span id="LST27EDCF07_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SafeLibraryHandle</span>,
	<span class="parameter">dwThreadId</span> <span class="keyword">As</span> <span class="identifier">Integer</span>
) <span class="keyword">As</span> <span class="identifier">User32<span id="LST27EDCF07_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SafeHookHandle</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">idHook</span></dt><dd>Type: <a href="5c8c6c8b-a97b-e730-245b-6978252236fe.htm">Vanara.PInvoke<span id="LST27EDCF07_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>User32<span id="LST27EDCF07_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>HookType</a><br />
            C++ ( idHook [in]. Type: int ) <br /> The type of hook procedure to be installed. This parameter can be one of the following values.
            <div class="tableSection"><table><tr><th>Possible Hook Types</th></tr><tr><td>WH_CALLWNDPROC (4)</td><td>Installs a hook procedure that monitors messages before the system sends them to the destination window procedure. For more information, see the CallWndProc hook  procedure.</td></tr><tr><td>WH_CALLWNDPROCRET (12)</td><td>Installs a hook procedure that monitors messages after they have been processed by the destination window procedure. For more information, see the CallWndRetProc hook procedure.</td></tr><tr><td>WH_CBT (5)</td><td>Installs a hook procedure that receives notifications useful to a CBT application. For more information, see the CBTProc hook procedure.</td></tr><tr><td>WH_DEBUG (9)</td><td>Installs a hook procedure useful for debugging other hook procedures. For more information, see the DebugProc hook procedure.</td></tr><tr><td>WH_FOREGROUNDIDLE (11)</td><td>Installs a hook procedure that will be called when the application's foreground thread is about to become idle. This hook is useful for performing low priority tasks during idle time. For more information, see the ForegroundIdleProc hook procedure.</td></tr><tr><td>WH_GETMESSAGE (3)</td><td>Installs a hook procedure that monitors messages posted to a message queue. For more information, see the GetMsgProc hook procedure.</td></tr><tr><td>WH_JOURNALPLAYBACK (1)</td><td>Installs a hook procedure that posts messages previously recorded by a WH_JOURNALRECORD hook procedure. For more information, see the JournalPlaybackProc hook procedure.</td></tr><tr><td>WH_JOURNALRECORD (0)</td><td>Installs a hook procedure that records input messages posted to the system message queue. This hook is useful for recording macros. For more information, see the JournalRecordProc hook procedure.</td></tr><tr><td>WH_KEYBOARD (2)</td><td>Installs a hook procedure that monitors keystroke messages. For more information, see the KeyboardProc hook procedure.</td></tr><tr><td>WH_KEYBOARD_LL (13)</td><td>Installs a hook procedure that monitors low-level keyboard input events. For more information, see the LowLevelKeyboardProc hook procedure.</td></tr><tr><td>WH_MOUSE (7)</td><td>Installs a hook procedure that monitors mouse messages. For more information, see the MouseProc hook procedure.</td></tr><tr><td>WH_MOUSE_LL (14)</td><td>Installs a hook procedure that monitors low-level mouse input events. For more information, see the LowLevelMouseProc hook procedure.</td></tr><tr><td>WH_MSGFILTER (-1)</td><td>Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar. For more information, see the MessageProc hook procedure.</td></tr><tr><td>WH_SHELL (10)</td><td>Installs a hook procedure that receives notifications useful to shell applications. For more information, see the ShellProc hook procedure.</td></tr><tr><td>WH_SYSMSGFILTER (6)</td><td /></tr></table></div></dd><dt><span class="parameter">lpfn</span></dt><dd>Type: <a href="da1314b6-2f27-e8ae-24a4-f923aed158e4.htm">Vanara.PInvoke<span id="LST27EDCF07_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>User32<span id="LST27EDCF07_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_12?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>HookProc</a><br />
            C++ ( lpfn [in]. Type: HOOKPROC ) <br /> A pointer to the hook procedure. If the dwThreadId parameter is zero or specifies the identifier of a thread
            created by a different process, the lpfn parameter must point to a hook procedure in a DLL. Otherwise, lpfn can point to a hook procedure in the code
            associated with the current process.
            </dd><dt><span class="parameter">hMod</span></dt><dd>Type: <a href="81c22d72-0859-8cc2-6acb-28daf30b232e.htm">Vanara.PInvoke<span id="LST27EDCF07_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Kernel32<span id="LST27EDCF07_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_14?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SafeLibraryHandle</a><br />
            C++ ( hMod [in]. Type: HINSTANCE ) <br /> A handle to the DLL containing the hook procedure pointed to by the lpfn parameter. The hMod parameter must
            be set to NULL if the dwThreadId parameter specifies a thread created by the current process and if the hook procedure is within the code associated
            with the current process.
            </dd><dt><span class="parameter">dwThreadId</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST27EDCF07_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_15?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />
            C++ ( dwThreadId [in]. Type: DWORD ) <br /> The identifier of the thread with which the hook procedure is to be associated. For desktop apps, if this
            parameter is zero, the hook procedure is associated with all existing threads running in the same desktop as the calling thread. For Windows Store
            apps, see the Remarks section.
            </dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="d8983954-8e48-e433-a80b-a1eaa1833f54.htm">User32<span id="LST27EDCF07_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST27EDCF07_16?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SafeHookHandle</a><br />
            C++ ( Type: HHOOK ) <br /> If the function succeeds, the return value is the handle to the hook procedure. If the function fails, the return value is NULL.
            <p>To get extended error information, call GetLastError.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            SetWindowsHookEx can be used to inject a DLL into another process. A 32-bit DLL cannot be injected into a 64-bit process, and a 64-bit DLL cannot be
            injected into a 32-bit process. If an application requires the use of hooks in other processes, it is required that a 32-bit application call
            SetWindowsHookEx to inject a 32-bit DLL into 32-bit processes, and a 64-bit application call SetWindowsHookEx to inject a 64-bit DLL into 64-bit
            processes. The 32-bit and 64-bit DLLs must have different names.
            </p><p>
            Because hooks run in the context of an application, they must match the "bitness" of the application. If a 32-bit application installs a global hook
            on 64-bit Windows, the 32-bit hook is injected into each 32-bit process (the usual security boundaries apply). In a 64-bit process, the threads are
            still marked as "hooked." However, because a 32-bit application must run the hook code, the system executes the hook in the hooking app's context;
            specifically, on the thread that called SetWindowsHookEx. This means that the hooking application must continue to pump messages or it might block
            the normal functioning of the 64-bit processes.
            </p><p>
            If a 64-bit application installs a global hook on 64-bit Windows, the 64-bit hook is injected into each 64-bit process, while all 32-bit processes
            use a callback to the hooking application.
            </p><p>
            To hook all applications on the desktop of a 64-bit Windows installation, install a 32-bit global hook and a 64-bit global hook, each from
            appropriate processes, and be sure to keep pumping messages in the hooking application to avoid blocking normal functioning. If you already have a
            32-bit global hooking application and it doesn't need to run in each application's context, you may not need to create a 64-bit version.
            </p><p>
            An error may occur if the hMod parameter is NULL and the dwThreadId parameter is zero or specifies the identifier of a thread created by another process.
            </p><p>
            Calling the CallNextHookEx function to chain to the next hook procedure is optional, but it is highly recommended; otherwise, other applications that
            have installed hooks will not receive hook notifications and may behave incorrectly as a result. You should call CallNextHookEx unless you absolutely
            need to prevent the notification from being seen by other applications.
            </p><p>Before terminating, an application must call the UnhookWindowsHookEx function to free system resources associated with the hook.</p><p>
            The scope of a hook depends on the hook type. Some hooks can be set only with global scope; others can also be set for only a specific thread, as
            shown in the following table.
            </p><div class="tableSection"><table><tr><th>Possible Hook Types</th></tr><tr><td>WH_CALLWNDPROC (4)</td><td>Thread or global</td></tr><tr><td>WH_CALLWNDPROCRET (12)</td><td>Thread or global</td></tr><tr><td>WH_CBT (5)</td><td>Thread or global</td></tr><tr><td>WH_DEBUG (9)</td><td>Thread or global</td></tr><tr><td>WH_FOREGROUNDIDLE (11)</td><td>Thread or global</td></tr><tr><td>WH_GETMESSAGE (3)</td><td>Thread or global</td></tr><tr><td>WH_JOURNALPLAYBACK (1)</td><td>Global only</td></tr><tr><td>WH_JOURNALRECORD (0)</td><td>Global only</td></tr><tr><td>WH_KEYBOARD (2)</td><td>Thread or global</td></tr><tr><td>WH_KEYBOARD_LL (13)</td><td>Global only</td></tr><tr><td>WH_MOUSE (7)</td><td>Thread or global</td></tr><tr><td>WH_MOUSE_LL (14)</td><td>Global only</td></tr><tr><td>WH_MSGFILTER (-1)</td><td>Thread or global</td></tr><tr><td>WH_SHELL (10)</td><td>Thread or global</td></tr><tr><td>WH_SYSMSGFILTER (6)</td><td>Global only</td></tr></table></div><p>
            For a specified hook type, thread hooks are called first, then global hooks. Be aware that the WH_MOUSE, WH_KEYBOARD, WH_JOURNAL*, WH_SHELL, and
            low-level hooks can be called on the thread that installed the hook rather than the thread processing the hook. For these hooks, it is possible that
            both the 32-bit and 64-bit hooks will be called if a 32-bit hook is ahead of a 64-bit hook in the hook chain.
            </p><p>
            The global hooks are a shared resource, and installing one affects all applications in the same desktop as the calling thread. All global hook
            functions must be in libraries. Global hooks should be restricted to special-purpose applications or to use as a development aid during application
            debugging. Libraries that no longer need a hook should remove its hook procedure.
            </p><p>
            Windows Store app development If dwThreadId is zero, then window hook DLLs are not loaded in-process for the Windows Store app processes and the
            Windows Runtime broker process unless they are installed by either UIAccess processes (accessibility tools). The notification is delivered on the
            installer's thread for these hooks:
            </p><ul><li><strong>WH_JOURNALPLAYBACK</strong> - </li><li><strong>WH_JOURNALRECORD</strong> - </li><li><strong>WH_KEYBOARD</strong> - </li><li><strong>WH_KEYBOARD_LL</strong> - </li><li><strong>WH_MOUSE</strong> - </li><li><strong>WH_MOUSE_LL</strong> - </li></ul><p>
            This behavior is similar to what happens when there is an architecture mismatch between the hook DLL and the target application process, for example,
            when the hook DLL is 32-bit and the application process 64-bit.
            </p><p>
            For an example, see Installing and <span class="nolink"> Releasing Hook Procedures. </span>
            [ https://msdn.microsoft.com/en-us/library/windows/desktop/ms644960%28v=vs.85%29.aspx#installing_releasing ]
            </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="3103c69b-f461-3a6f-fa1d-60fd26adf4f9.htm">User32 Class</a></div><div class="seeAlsoStyle"><a href="c0250011-c1b9-bc9a-b501-96a9795f44a5.htm">Vanara.PInvoke Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>