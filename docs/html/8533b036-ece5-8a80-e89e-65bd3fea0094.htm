<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Kernel32.WriteFile Method (SafeFileHandle, Byte[], UInt32, UInt32, IntPtr)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Vanara.PInvoke.Kernel32.WriteFile(Microsoft.Win32.SafeHandles.SafeFileHandle,System.Byte[],System.UInt32,System.UInt32@,System.IntPtr)" /><meta name="Description" content="Writes data to the specified file or input/output (I/O) device. This function is designed for both synchronous and asynchronous operation. For a similar function designed solely for asynchronous operation, see WriteFileEx." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Vanara.PInvoke" /><meta name="file" content="8533b036-ece5-8a80-e89e-65bd3fea0094" /><meta name="guid" content="8533b036-ece5-8a80-e89e-65bd3fea0094" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vanara API Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d22522ce-4106-42b2-81eb-cb37a0f36df8.htm" title="Vanara API Documentation" tocid="roottoc">Vanara API Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c0250011-c1b9-bc9a-b501-96a9795f44a5.htm" title="Vanara.PInvoke" tocid="c0250011-c1b9-bc9a-b501-96a9795f44a5">Vanara.PInvoke</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="44c5555c-a81e-30f0-1ed7-2f42856e9dd3.htm" title="Kernel32 Class" tocid="44c5555c-a81e-30f0-1ed7-2f42856e9dd3">Kernel32 Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e0c356d3-afb6-0755-9784-8a8838aa400f.htm" title="Kernel32 Methods" tocid="e0c356d3-afb6-0755-9784-8a8838aa400f">Kernel32 Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="54a15381-4d1d-1df4-a71f-a380395708ad.htm" title="WriteFile Method " tocid="54a15381-4d1d-1df4-a71f-a380395708ad">WriteFile Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="cc0e11de-1bbb-bf12-553d-19608f2cbdb9.htm" title="WriteFile Method (SafeFileHandle, Byte*, UInt32, IntPtr, NativeOverlapped*)" tocid="cc0e11de-1bbb-bf12-553d-19608f2cbdb9">WriteFile Method (SafeFileHandle, Byte*, UInt32, IntPtr, NativeOverlapped*)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="8533b036-ece5-8a80-e89e-65bd3fea0094.htm" title="WriteFile Method (SafeFileHandle, Byte[], UInt32, UInt32, IntPtr)" tocid="8533b036-ece5-8a80-e89e-65bd3fea0094">WriteFile Method (SafeFileHandle, Byte[], UInt32, UInt32, IntPtr)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e92a3876-34a1-2ec2-5e5d-6722ff3244b8.htm" title="WriteFile Method (SafeFileHandle, IntPtr, UInt32, UInt32, IntPtr)" tocid="e92a3876-34a1-2ec2-5e5d-6722ff3244b8">WriteFile Method (SafeFileHandle, IntPtr, UInt32, UInt32, IntPtr)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>Kernel32<span id="LST477A4B3F_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_0?cpp=::|nu=.");</script>WriteFile Method (SafeFileHandle, <span id="LST477A4B3F_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_1?cpp=array&lt;");</script>Byte<span id="LST477A4B3F_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_2?cpp=&gt;|vb=()|nu=[]");</script>, UInt32, UInt32<span id="LST477A4B3F_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_3?cpp=%");</script>, IntPtr)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Writes data to the specified file or input/output (I/O) device.
            <p>This function is designed for both synchronous and asynchronous operation. For a similar function designed solely for asynchronous operation, see WriteFileEx.</p></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="c0250011-c1b9-bc9a-b501-96a9795f44a5.htm">Vanara.PInvoke</a><br />
    <strong>Assembly:</strong>
   Vanara.PInvoke.Kernel32 (in Vanara.PInvoke.Kernel32.dll) Version: 1.0.2<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">WriteFile</span>(
	<span class="identifier">SafeFileHandle</span> <span class="parameter">hFile</span>,
	<span class="identifier">byte</span>[] <span class="parameter">lpBuffer</span>,
	<span class="identifier">uint</span> <span class="parameter">nNumberOfBytesToWrite</span>,
	<span class="keyword">out</span> <span class="identifier">uint</span> <span class="parameter">lpNumberOfBytesWritten</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">lpOverlapped</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">WriteFile</span> ( 
	<span class="parameter">hFile</span> <span class="keyword">As</span> <span class="identifier">SafeFileHandle</span>,
	<span class="parameter">lpBuffer</span> <span class="keyword">As</span> <span class="identifier">Byte</span>(),
	<span class="parameter">nNumberOfBytesToWrite</span> <span class="keyword">As</span> <span class="identifier">UInteger</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">lpNumberOfBytesWritten</span> <span class="keyword">As</span> <span class="identifier">UInteger</span>,
	<span class="parameter">lpOverlapped</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">hFile</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/3y85x3e7" target="_blank">Microsoft.Win32.SafeHandles<span id="LST477A4B3F_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SafeFileHandle</a><br />A handle to the file or I/O device (for example, a file, file stream, physical disk, volume, console buffer, tape drive, socket, communications resource, mailslot, or pipe).
            <p>The hFile parameter must have been created with the write access. For more information, see Generic Access Rights and File Security and Access Rights.</p><p>For asynchronous write operations, hFile can be any handle opened with the CreateFile function using the FILE_FLAG_OVERLAPPED flag or a socket handle returned by the socket or accept function.</p></dd><dt><span class="parameter">lpBuffer</span></dt><dd>Type: <span id="LST477A4B3F_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_5?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/yyb1w04y" target="_blank">System<span id="LST477A4B3F_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Byte</a><span id="LST477A4B3F_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_7?cpp=&gt;|vb=()|nu=[]");</script><br />A pointer to the buffer containing the data to be written to the file or device.
            <p>This buffer must remain valid for the duration of the write operation. The caller must not use this buffer until the write operation is completed.</p></dd><dt><span class="parameter">nNumberOfBytesToWrite</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/ctys3981" target="_blank">System<span id="LST477A4B3F_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>UInt32</a><br />The number of bytes to be written to the file or device.
            <p>A value of zero specifies a null write operation. The behavior of a null write operation depends on the underlying file system or communications technology.</p><p>Windows Server 2003 and Windows XP:  Pipe write operations across a network are limited in size per write. The amount varies per platform. For x86 platforms it's 63.97 MB. For x64 platforms it's 31.97 MB. For Itanium it's 63.95 MB. For more information regarding pipes, see the Remarks section.</p></dd><dt><span class="parameter">lpNumberOfBytesWritten</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/ctys3981" target="_blank">System<span id="LST477A4B3F_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>UInt32</a><span id="LST477A4B3F_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_10?cpp=%");</script><br />A pointer to the variable that receives the number of bytes written when using a synchronous hFile parameter. WriteFile sets this value to zero before doing any work or error checking. Use NULL for this parameter if this is an asynchronous operation to avoid potentially erroneous results.
            <p>This parameter can be NULL only when the lpOverlapped parameter is not NULL.</p><p>For more information, see the Remarks section.</p></dd><dt><span class="parameter">lpOverlapped</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="LST477A4B3F_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST477A4B3F_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</a><br />A pointer to an OVERLAPPED structure is required if the hFile parameter was opened with FILE_FLAG_OVERLAPPED, otherwise this parameter can be NULL.
            <p>For an hFile that supports byte offsets, if you use this parameter you must specify a byte offset at which to start writing to the file or device. This offset is specified by setting the Offset and OffsetHigh members of the OVERLAPPED structure. For an hFile that does not support byte offsets, Offset and OffsetHigh are ignored.</p><p>To write to the end of file, specify both the Offset and OffsetHigh members of the OVERLAPPED structure as 0xFFFFFFFF. This is functionally equivalent to previously calling the CreateFile function to open hFile using FILE_APPEND_DATA access.</p><p>For more information about different combinations of lpOverlapped and FILE_FLAG_OVERLAPPED, see the Remarks section and the Synchronization and File Position section.</p></dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a><br />If the function succeeds, the return value is nonzero (TRUE). If the function fails, or is completing asynchronously, the return value is zero(FALSE). To get extended error information, call the GetLastError function.</div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="44c5555c-a81e-30f0-1ed7-2f42856e9dd3.htm">Kernel32 Class</a></div><div class="seeAlsoStyle"><a href="54a15381-4d1d-1df4-a71f-a380395708ad.htm">WriteFile Overload</a></div><div class="seeAlsoStyle"><a href="c0250011-c1b9-bc9a-b501-96a9795f44a5.htm">Vanara.PInvoke Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>